{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/basic-calculator-api')]",
      "dependsOn": [],
      "properties": {
        "description": "Arithmetics is just a call away!",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Basic Calculator API",
        "serviceUrl": "https://calcapi.cloudapp.net/api",
        "path": "calc",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/color-api')]",
      "dependsOn": [],
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Color API",
        "serviceUrl": "https://markcolorapi.azurewebsites.net/",
        "path": "color",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/echo-api')]",
      "dependsOn": [],
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Echo API",
        "serviceUrl": "http://echoapi.cloudapp.net/api",
        "path": "echo",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/function-demo')]",
      "dependsOn": [],
      "properties": {
        "description": "Import from \"func-authdemo\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Function Demo",
        "path": "func",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/pokemon')]",
      "dependsOn": [],
      "properties": {
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "type": "graphql",
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Pokemon GraphQL",
        "serviceUrl": "https://beta.pokeapi.co/graphql/v1beta",
        "path": "poke",
        "protocols": [
          "http",
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api')]",
      "dependsOn": [],
      "properties": {
        "description": "A long time ago in a galaxy far, far away...",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "Star Wars API",
        "serviceUrl": "https://swapi.dev/api",
        "path": "sw",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2')]",
      "dependsOn": [],
      "properties": {
        "description": "A long time ago in a galaxy far, far away...",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "2",
        "apiRevisionDescription": "Revision 2",
        "subscriptionRequired": true,
        "displayName": "Star Wars API",
        "serviceUrl": "https://swapi.dev/api",
        "path": "sw",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis",
      "name": "[concat(parameters('apimServiceName'), '/todo-api')]",
      "dependsOn": [],
      "properties": {
        "description": "",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "ToDo API",
        "path": "todo",
        "protocols": [
          "https"
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "name": "[concat(parameters('apimServiceName'), '/color-api/626b0c9d4634611238caaf4c')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'color-api')]"
      ],
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.swagger.definitions+json",
        "document": {
          "definitions": {
            "ColorItem": {
              "type": "object",
              "properties": {
                "id": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "Id": {
              "format": "int32",
              "x-apim-inline": true
            },
            "StrName": {
              "type": "string"
            }
          },
          "value": "{\n  \"ColorItem\": {\n    \"type\": \"object\",\n    \"properties\": {\n      \"id\": {\n        \"format\": \"int32\",\n        \"type\": \"integer\"\n      },\n      \"name\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"Id\": {\n    \"format\": \"int32\",\n    \"x-apim-inline\": true\n  },\n  \"StrName\": {\n    \"type\": \"string\"\n  }\n}"
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "name": "[concat(parameters('apimServiceName'), '/pokemon/graphql')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'pokemon')]"
      ],
      "properties": {
        "contentType": "application/vnd.ms-azure-apim.graphql.schema",
        "document": {
          "value": "{\n  \"value\": \"# whether this query should be cached (Hasura Cloud only)\\r\\ndirective @cached(\\r\\n  # measured in seconds\\r\\n  ttl: Int! = 60\\r\\n  # refresh the cache entry\\r\\n  refresh: Boolean! = false\\r\\n) on\\r\\n  | QUERY\\r\\n\\r\\nschema {\\r\\n  query: query_root\\r\\n  subscription: subscription_root\\r\\n}\\r\\n\\r\\n# Boolean expression to compare columns of type \\\\\\\"Boolean\\\\\\\". All fields are combined with logical 'AND'.\\r\\ninput Boolean_comparison_exp {\\r\\n  _eq: Boolean\\r\\n  _gt: Boolean\\r\\n  _gte: Boolean\\r\\n  _in: [Boolean!]\\r\\n  _is_null: Boolean\\r\\n  _lt: Boolean\\r\\n  _lte: Boolean\\r\\n  _neq: Boolean\\r\\n  _nin: [Boolean!]\\r\\n}\\r\\n\\r\\n# Boolean expression to compare columns of type \\\\\\\"Int\\\\\\\". All fields are combined with logical 'AND'.\\r\\ninput Int_comparison_exp {\\r\\n  _eq: Int\\r\\n  _gt: Int\\r\\n  _gte: Int\\r\\n  _in: [Int!]\\r\\n  _is_null: Boolean\\r\\n  _lt: Int\\r\\n  _lte: Int\\r\\n  _neq: Int\\r\\n  _nin: [Int!]\\r\\n}\\r\\n\\r\\n# Boolean expression to compare columns of type \\\\\\\"String\\\\\\\". All fields are combined with logical 'AND'.\\r\\ninput String_comparison_exp {\\r\\n  _eq: String\\r\\n  _gt: String\\r\\n  _gte: String\\r\\n  # does the column match the given case-insensitive pattern\\r\\n  _ilike: String\\r\\n  _in: [String!]\\r\\n  # does the column match the given POSIX regular expression, case insensitive\\r\\n  _iregex: String\\r\\n  _is_null: Boolean\\r\\n  # does the column match the given pattern\\r\\n  _like: String\\r\\n  _lt: String\\r\\n  _lte: String\\r\\n  _neq: String\\r\\n  # does the column NOT match the given case-insensitive pattern\\r\\n  _nilike: String\\r\\n  _nin: [String!]\\r\\n  # does the column NOT match the given POSIX regular expression, case insensitive\\r\\n  _niregex: String\\r\\n  # does the column NOT match the given pattern\\r\\n  _nlike: String\\r\\n  # does the column NOT match the given POSIX regular expression, case sensitive\\r\\n  _nregex: String\\r\\n  # does the column NOT match the given SQL regular expression\\r\\n  _nsimilar: String\\r\\n  # does the column match the given POSIX regular expression, case sensitive\\r\\n  _regex: String\\r\\n  # does the column match the given SQL regular expression\\r\\n  _similar: String\\r\\n}\\r\\n\\r\\n# column ordering options\\r\\nenum order_by {\\r\\n  # in ascending order, nulls last\\r\\n  asc\\r\\n  # in ascending order, nulls first\\r\\n  asc_nulls_first\\r\\n  # in ascending order, nulls last\\r\\n  asc_nulls_last\\r\\n  # in descending order, nulls first\\r\\n  desc\\r\\n  # in descending order, nulls first\\r\\n  desc_nulls_first\\r\\n  # in descending order, nulls last\\r\\n  desc_nulls_last\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ntype pokemon_v2_ability {\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  is_main_series: Boolean!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilitychanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): [pokemon_v2_abilitychange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilitychanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): pokemon_v2_abilitychange_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilityeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilityeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilityeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilityeffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilityflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): [pokemon_v2_abilityflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilityflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): pokemon_v2_abilityflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilitynames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): [pokemon_v2_abilityname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilitynames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): pokemon_v2_abilityname_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonabilities(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): [pokemon_v2_pokemonability!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonabilities_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): pokemon_v2_pokemonability_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ntype pokemon_v2_ability_aggregate {\\r\\n  aggregate: pokemon_v2_ability_aggregate_fields\\r\\n  nodes: [pokemon_v2_ability!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ntype pokemon_v2_ability_aggregate_fields {\\r\\n  avg: pokemon_v2_ability_avg_fields\\r\\n  count(columns: [pokemon_v2_ability_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_ability_max_fields\\r\\n  min: pokemon_v2_ability_min_fields\\r\\n  stddev: pokemon_v2_ability_stddev_fields\\r\\n  stddev_pop: pokemon_v2_ability_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_ability_stddev_samp_fields\\r\\n  sum: pokemon_v2_ability_sum_fields\\r\\n  var_pop: pokemon_v2_ability_var_pop_fields\\r\\n  var_samp: pokemon_v2_ability_var_samp_fields\\r\\n  variance: pokemon_v2_ability_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_aggregate_order_by {\\r\\n  avg: pokemon_v2_ability_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_ability_max_order_by\\r\\n  min: pokemon_v2_ability_min_order_by\\r\\n  stddev: pokemon_v2_ability_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_ability_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_ability_stddev_samp_order_by\\r\\n  sum: pokemon_v2_ability_sum_order_by\\r\\n  var_pop: pokemon_v2_ability_var_pop_order_by\\r\\n  var_samp: pokemon_v2_ability_var_samp_order_by\\r\\n  variance: pokemon_v2_ability_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_ability_avg_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_avg_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_ability\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_ability_bool_exp {\\r\\n  _and: [pokemon_v2_ability_bool_exp!]\\r\\n  _not: pokemon_v2_ability_bool_exp\\r\\n  _or: [pokemon_v2_ability_bool_exp!]\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  is_main_series: Boolean_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_abilitychanges: pokemon_v2_abilitychange_bool_exp\\r\\n  pokemon_v2_abilityeffecttexts: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  pokemon_v2_abilityflavortexts: pokemon_v2_abilityflavortext_bool_exp\\r\\n  pokemon_v2_abilitynames: pokemon_v2_abilityname_bool_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_pokemonabilities: pokemon_v2_pokemonability_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_ability_max_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_max_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_ability_min_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_min_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_ability\\\\\\\".\\r\\ninput pokemon_v2_ability_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  is_main_series: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_abilitychanges_aggregate: pokemon_v2_abilitychange_aggregate_order_by\\r\\n  pokemon_v2_abilityeffecttexts_aggregate: pokemon_v2_abilityeffecttext_aggregate_order_by\\r\\n  pokemon_v2_abilityflavortexts_aggregate: pokemon_v2_abilityflavortext_aggregate_order_by\\r\\n  pokemon_v2_abilitynames_aggregate: pokemon_v2_abilityname_aggregate_order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_pokemonabilities_aggregate: pokemon_v2_pokemonability_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\nenum pokemon_v2_ability_select_column {\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_main_series\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_ability_stddev_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_stddev_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_ability_stddev_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_stddev_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_ability_stddev_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_stddev_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_ability_sum_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_sum_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_ability_var_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_var_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_ability_var_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_var_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_ability_variance_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\ninput pokemon_v2_ability_variance_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ntype pokemon_v2_abilitychange {\\r\\n  ability_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_ability: pokemon_v2_ability\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilitychangeeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilitychangeeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilitychangeeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilitychangeeffecttext_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ntype pokemon_v2_abilitychange_aggregate {\\r\\n  aggregate: pokemon_v2_abilitychange_aggregate_fields\\r\\n  nodes: [pokemon_v2_abilitychange!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ntype pokemon_v2_abilitychange_aggregate_fields {\\r\\n  avg: pokemon_v2_abilitychange_avg_fields\\r\\n  count(columns: [pokemon_v2_abilitychange_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_abilitychange_max_fields\\r\\n  min: pokemon_v2_abilitychange_min_fields\\r\\n  stddev: pokemon_v2_abilitychange_stddev_fields\\r\\n  stddev_pop: pokemon_v2_abilitychange_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_abilitychange_stddev_samp_fields\\r\\n  sum: pokemon_v2_abilitychange_sum_fields\\r\\n  var_pop: pokemon_v2_abilitychange_var_pop_fields\\r\\n  var_samp: pokemon_v2_abilitychange_var_samp_fields\\r\\n  variance: pokemon_v2_abilitychange_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_aggregate_order_by {\\r\\n  avg: pokemon_v2_abilitychange_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_abilitychange_max_order_by\\r\\n  min: pokemon_v2_abilitychange_min_order_by\\r\\n  stddev: pokemon_v2_abilitychange_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_abilitychange_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_abilitychange_stddev_samp_order_by\\r\\n  sum: pokemon_v2_abilitychange_sum_order_by\\r\\n  var_pop: pokemon_v2_abilitychange_var_pop_order_by\\r\\n  var_samp: pokemon_v2_abilitychange_var_samp_order_by\\r\\n  variance: pokemon_v2_abilitychange_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_abilitychange_avg_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_avg_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_abilitychange\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_abilitychange_bool_exp {\\r\\n  _and: [pokemon_v2_abilitychange_bool_exp!]\\r\\n  _not: pokemon_v2_abilitychange_bool_exp\\r\\n  _or: [pokemon_v2_abilitychange_bool_exp!]\\r\\n  ability_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_ability: pokemon_v2_ability_bool_exp\\r\\n  pokemon_v2_abilitychangeeffecttexts: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_abilitychange_max_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_max_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_abilitychange_min_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_min_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_abilitychange\\\\\\\".\\r\\ninput pokemon_v2_abilitychange_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_ability: pokemon_v2_ability_order_by\\r\\n  pokemon_v2_abilitychangeeffecttexts_aggregate: pokemon_v2_abilitychangeeffecttext_aggregate_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\nenum pokemon_v2_abilitychange_select_column {\\r\\n  # column name\\r\\n  ability_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_abilitychange_stddev_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_stddev_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_abilitychange_stddev_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_stddev_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_abilitychange_stddev_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_stddev_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_abilitychange_sum_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_sum_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_abilitychange_var_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_var_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_abilitychange_var_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_var_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_abilitychange_variance_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\ninput pokemon_v2_abilitychange_variance_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ntype pokemon_v2_abilitychangeeffecttext {\\r\\n  ability_change_id: Int\\r\\n  effect: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_abilitychange: pokemon_v2_abilitychange\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ntype pokemon_v2_abilitychangeeffecttext_aggregate {\\r\\n  aggregate: pokemon_v2_abilitychangeeffecttext_aggregate_fields\\r\\n  nodes: [pokemon_v2_abilitychangeeffecttext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ntype pokemon_v2_abilitychangeeffecttext_aggregate_fields {\\r\\n  avg: pokemon_v2_abilitychangeeffecttext_avg_fields\\r\\n  count(columns: [pokemon_v2_abilitychangeeffecttext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_abilitychangeeffecttext_max_fields\\r\\n  min: pokemon_v2_abilitychangeeffecttext_min_fields\\r\\n  stddev: pokemon_v2_abilitychangeeffecttext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_abilitychangeeffecttext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_abilitychangeeffecttext_stddev_samp_fields\\r\\n  sum: pokemon_v2_abilitychangeeffecttext_sum_fields\\r\\n  var_pop: pokemon_v2_abilitychangeeffecttext_var_pop_fields\\r\\n  var_samp: pokemon_v2_abilitychangeeffecttext_var_samp_fields\\r\\n  variance: pokemon_v2_abilitychangeeffecttext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_aggregate_order_by {\\r\\n  avg: pokemon_v2_abilitychangeeffecttext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_abilitychangeeffecttext_max_order_by\\r\\n  min: pokemon_v2_abilitychangeeffecttext_min_order_by\\r\\n  stddev: pokemon_v2_abilitychangeeffecttext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_abilitychangeeffecttext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_abilitychangeeffecttext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_abilitychangeeffecttext_sum_order_by\\r\\n  var_pop: pokemon_v2_abilitychangeeffecttext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_abilitychangeeffecttext_var_samp_order_by\\r\\n  variance: pokemon_v2_abilitychangeeffecttext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_avg_fields {\\r\\n  ability_change_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_avg_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_abilitychangeeffecttext_bool_exp {\\r\\n  _and: [pokemon_v2_abilitychangeeffecttext_bool_exp!]\\r\\n  _not: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  _or: [pokemon_v2_abilitychangeeffecttext_bool_exp!]\\r\\n  ability_change_id: Int_comparison_exp\\r\\n  effect: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_abilitychange: pokemon_v2_abilitychange_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_max_fields {\\r\\n  ability_change_id: Int\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_max_order_by {\\r\\n  ability_change_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_min_fields {\\r\\n  ability_change_id: Int\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_min_order_by {\\r\\n  ability_change_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\".\\r\\ninput pokemon_v2_abilitychangeeffecttext_order_by {\\r\\n  ability_change_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_abilitychange: pokemon_v2_abilitychange_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\nenum pokemon_v2_abilitychangeeffecttext_select_column {\\r\\n  # column name\\r\\n  ability_change_id\\r\\n  # column name\\r\\n  effect\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_stddev_fields {\\r\\n  ability_change_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_stddev_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_stddev_pop_fields {\\r\\n  ability_change_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_stddev_pop_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_stddev_samp_fields {\\r\\n  ability_change_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_stddev_samp_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_sum_fields {\\r\\n  ability_change_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_sum_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_var_pop_fields {\\r\\n  ability_change_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_var_pop_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_var_samp_fields {\\r\\n  ability_change_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_var_samp_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_abilitychangeeffecttext_variance_fields {\\r\\n  ability_change_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilitychangeeffecttext_variance_order_by {\\r\\n  ability_change_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ntype pokemon_v2_abilityeffecttext {\\r\\n  ability_id: Int\\r\\n  effect: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_ability: pokemon_v2_ability\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  short_effect: String!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ntype pokemon_v2_abilityeffecttext_aggregate {\\r\\n  aggregate: pokemon_v2_abilityeffecttext_aggregate_fields\\r\\n  nodes: [pokemon_v2_abilityeffecttext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ntype pokemon_v2_abilityeffecttext_aggregate_fields {\\r\\n  avg: pokemon_v2_abilityeffecttext_avg_fields\\r\\n  count(columns: [pokemon_v2_abilityeffecttext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_abilityeffecttext_max_fields\\r\\n  min: pokemon_v2_abilityeffecttext_min_fields\\r\\n  stddev: pokemon_v2_abilityeffecttext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_abilityeffecttext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_abilityeffecttext_stddev_samp_fields\\r\\n  sum: pokemon_v2_abilityeffecttext_sum_fields\\r\\n  var_pop: pokemon_v2_abilityeffecttext_var_pop_fields\\r\\n  var_samp: pokemon_v2_abilityeffecttext_var_samp_fields\\r\\n  variance: pokemon_v2_abilityeffecttext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_aggregate_order_by {\\r\\n  avg: pokemon_v2_abilityeffecttext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_abilityeffecttext_max_order_by\\r\\n  min: pokemon_v2_abilityeffecttext_min_order_by\\r\\n  stddev: pokemon_v2_abilityeffecttext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_abilityeffecttext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_abilityeffecttext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_abilityeffecttext_sum_order_by\\r\\n  var_pop: pokemon_v2_abilityeffecttext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_abilityeffecttext_var_samp_order_by\\r\\n  variance: pokemon_v2_abilityeffecttext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_abilityeffecttext_avg_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_avg_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_abilityeffecttext_bool_exp {\\r\\n  _and: [pokemon_v2_abilityeffecttext_bool_exp!]\\r\\n  _not: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  _or: [pokemon_v2_abilityeffecttext_bool_exp!]\\r\\n  ability_id: Int_comparison_exp\\r\\n  effect: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_ability: pokemon_v2_ability_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  short_effect: String_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_abilityeffecttext_max_fields {\\r\\n  ability_id: Int\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  short_effect: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_max_order_by {\\r\\n  ability_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_abilityeffecttext_min_fields {\\r\\n  ability_id: Int\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  short_effect: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_min_order_by {\\r\\n  ability_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\".\\r\\ninput pokemon_v2_abilityeffecttext_order_by {\\r\\n  ability_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_ability: pokemon_v2_ability_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\nenum pokemon_v2_abilityeffecttext_select_column {\\r\\n  # column name\\r\\n  ability_id\\r\\n  # column name\\r\\n  effect\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  short_effect\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_abilityeffecttext_stddev_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_stddev_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_abilityeffecttext_stddev_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_stddev_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_abilityeffecttext_stddev_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_stddev_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_abilityeffecttext_sum_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_sum_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_abilityeffecttext_var_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_var_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_abilityeffecttext_var_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_var_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_abilityeffecttext_variance_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\ninput pokemon_v2_abilityeffecttext_variance_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ntype pokemon_v2_abilityflavortext {\\r\\n  ability_id: Int\\r\\n  flavor_text: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_ability: pokemon_v2_ability\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ntype pokemon_v2_abilityflavortext_aggregate {\\r\\n  aggregate: pokemon_v2_abilityflavortext_aggregate_fields\\r\\n  nodes: [pokemon_v2_abilityflavortext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ntype pokemon_v2_abilityflavortext_aggregate_fields {\\r\\n  avg: pokemon_v2_abilityflavortext_avg_fields\\r\\n  count(columns: [pokemon_v2_abilityflavortext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_abilityflavortext_max_fields\\r\\n  min: pokemon_v2_abilityflavortext_min_fields\\r\\n  stddev: pokemon_v2_abilityflavortext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_abilityflavortext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_abilityflavortext_stddev_samp_fields\\r\\n  sum: pokemon_v2_abilityflavortext_sum_fields\\r\\n  var_pop: pokemon_v2_abilityflavortext_var_pop_fields\\r\\n  var_samp: pokemon_v2_abilityflavortext_var_samp_fields\\r\\n  variance: pokemon_v2_abilityflavortext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_aggregate_order_by {\\r\\n  avg: pokemon_v2_abilityflavortext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_abilityflavortext_max_order_by\\r\\n  min: pokemon_v2_abilityflavortext_min_order_by\\r\\n  stddev: pokemon_v2_abilityflavortext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_abilityflavortext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_abilityflavortext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_abilityflavortext_sum_order_by\\r\\n  var_pop: pokemon_v2_abilityflavortext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_abilityflavortext_var_samp_order_by\\r\\n  variance: pokemon_v2_abilityflavortext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_abilityflavortext_avg_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_avg_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_abilityflavortext_bool_exp {\\r\\n  _and: [pokemon_v2_abilityflavortext_bool_exp!]\\r\\n  _not: pokemon_v2_abilityflavortext_bool_exp\\r\\n  _or: [pokemon_v2_abilityflavortext_bool_exp!]\\r\\n  ability_id: Int_comparison_exp\\r\\n  flavor_text: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_ability: pokemon_v2_ability_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_abilityflavortext_max_fields {\\r\\n  ability_id: Int\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_max_order_by {\\r\\n  ability_id: order_by\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_abilityflavortext_min_fields {\\r\\n  ability_id: Int\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_min_order_by {\\r\\n  ability_id: order_by\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\".\\r\\ninput pokemon_v2_abilityflavortext_order_by {\\r\\n  ability_id: order_by\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_ability: pokemon_v2_ability_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\nenum pokemon_v2_abilityflavortext_select_column {\\r\\n  # column name\\r\\n  ability_id\\r\\n  # column name\\r\\n  flavor_text\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_abilityflavortext_stddev_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_stddev_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_abilityflavortext_stddev_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_stddev_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_abilityflavortext_stddev_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_stddev_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_abilityflavortext_sum_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_sum_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_abilityflavortext_var_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_var_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_abilityflavortext_var_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_var_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_abilityflavortext_variance_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\ninput pokemon_v2_abilityflavortext_variance_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ntype pokemon_v2_abilityname {\\r\\n  ability_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_ability: pokemon_v2_ability\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ntype pokemon_v2_abilityname_aggregate {\\r\\n  aggregate: pokemon_v2_abilityname_aggregate_fields\\r\\n  nodes: [pokemon_v2_abilityname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ntype pokemon_v2_abilityname_aggregate_fields {\\r\\n  avg: pokemon_v2_abilityname_avg_fields\\r\\n  count(columns: [pokemon_v2_abilityname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_abilityname_max_fields\\r\\n  min: pokemon_v2_abilityname_min_fields\\r\\n  stddev: pokemon_v2_abilityname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_abilityname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_abilityname_stddev_samp_fields\\r\\n  sum: pokemon_v2_abilityname_sum_fields\\r\\n  var_pop: pokemon_v2_abilityname_var_pop_fields\\r\\n  var_samp: pokemon_v2_abilityname_var_samp_fields\\r\\n  variance: pokemon_v2_abilityname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_aggregate_order_by {\\r\\n  avg: pokemon_v2_abilityname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_abilityname_max_order_by\\r\\n  min: pokemon_v2_abilityname_min_order_by\\r\\n  stddev: pokemon_v2_abilityname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_abilityname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_abilityname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_abilityname_sum_order_by\\r\\n  var_pop: pokemon_v2_abilityname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_abilityname_var_samp_order_by\\r\\n  variance: pokemon_v2_abilityname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_abilityname_avg_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_avg_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_abilityname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_abilityname_bool_exp {\\r\\n  _and: [pokemon_v2_abilityname_bool_exp!]\\r\\n  _not: pokemon_v2_abilityname_bool_exp\\r\\n  _or: [pokemon_v2_abilityname_bool_exp!]\\r\\n  ability_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_ability: pokemon_v2_ability_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_abilityname_max_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_max_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_abilityname_min_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_min_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_abilityname\\\\\\\".\\r\\ninput pokemon_v2_abilityname_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_ability: pokemon_v2_ability_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\nenum pokemon_v2_abilityname_select_column {\\r\\n  # column name\\r\\n  ability_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_abilityname_stddev_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_stddev_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_abilityname_stddev_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_stddev_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_abilityname_stddev_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_stddev_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_abilityname_sum_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_sum_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_abilityname_var_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_var_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_abilityname_var_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_var_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_abilityname_variance_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\ninput pokemon_v2_abilityname_variance_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ntype pokemon_v2_berry {\\r\\n  berry_firmness_id: Int\\r\\n  growth_time: Int!\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  max_harvest: Int!\\r\\n  name: String!\\r\\n  natural_gift_power: Int!\\r\\n  natural_gift_type_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_berryfirmness: pokemon_v2_berryfirmness\\r\\n  # An array relationship\\r\\n  pokemon_v2_berryflavormaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): [pokemon_v2_berryflavormap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berryflavormaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): pokemon_v2_berryflavormap_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  size: Int!\\r\\n  smoothness: Int!\\r\\n  soil_dryness: Int!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ntype pokemon_v2_berry_aggregate {\\r\\n  aggregate: pokemon_v2_berry_aggregate_fields\\r\\n  nodes: [pokemon_v2_berry!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ntype pokemon_v2_berry_aggregate_fields {\\r\\n  avg: pokemon_v2_berry_avg_fields\\r\\n  count(columns: [pokemon_v2_berry_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_berry_max_fields\\r\\n  min: pokemon_v2_berry_min_fields\\r\\n  stddev: pokemon_v2_berry_stddev_fields\\r\\n  stddev_pop: pokemon_v2_berry_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_berry_stddev_samp_fields\\r\\n  sum: pokemon_v2_berry_sum_fields\\r\\n  var_pop: pokemon_v2_berry_var_pop_fields\\r\\n  var_samp: pokemon_v2_berry_var_samp_fields\\r\\n  variance: pokemon_v2_berry_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_aggregate_order_by {\\r\\n  avg: pokemon_v2_berry_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_berry_max_order_by\\r\\n  min: pokemon_v2_berry_min_order_by\\r\\n  stddev: pokemon_v2_berry_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_berry_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_berry_stddev_samp_order_by\\r\\n  sum: pokemon_v2_berry_sum_order_by\\r\\n  var_pop: pokemon_v2_berry_var_pop_order_by\\r\\n  var_samp: pokemon_v2_berry_var_samp_order_by\\r\\n  variance: pokemon_v2_berry_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_berry_avg_fields {\\r\\n  berry_firmness_id: Float\\r\\n  growth_time: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  max_harvest: Float\\r\\n  natural_gift_power: Float\\r\\n  natural_gift_type_id: Float\\r\\n  size: Float\\r\\n  smoothness: Float\\r\\n  soil_dryness: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_avg_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_berry\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_berry_bool_exp {\\r\\n  _and: [pokemon_v2_berry_bool_exp!]\\r\\n  _not: pokemon_v2_berry_bool_exp\\r\\n  _or: [pokemon_v2_berry_bool_exp!]\\r\\n  berry_firmness_id: Int_comparison_exp\\r\\n  growth_time: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  max_harvest: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  natural_gift_power: Int_comparison_exp\\r\\n  natural_gift_type_id: Int_comparison_exp\\r\\n  pokemon_v2_berryfirmness: pokemon_v2_berryfirmness_bool_exp\\r\\n  pokemon_v2_berryflavormaps: pokemon_v2_berryflavormap_bool_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  size: Int_comparison_exp\\r\\n  smoothness: Int_comparison_exp\\r\\n  soil_dryness: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_berry_max_fields {\\r\\n  berry_firmness_id: Int\\r\\n  growth_time: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  max_harvest: Int\\r\\n  name: String\\r\\n  natural_gift_power: Int\\r\\n  natural_gift_type_id: Int\\r\\n  size: Int\\r\\n  smoothness: Int\\r\\n  soil_dryness: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_max_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  name: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_berry_min_fields {\\r\\n  berry_firmness_id: Int\\r\\n  growth_time: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  max_harvest: Int\\r\\n  name: String\\r\\n  natural_gift_power: Int\\r\\n  natural_gift_type_id: Int\\r\\n  size: Int\\r\\n  smoothness: Int\\r\\n  soil_dryness: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_min_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  name: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_berry\\\\\\\".\\r\\ninput pokemon_v2_berry_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  name: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  pokemon_v2_berryfirmness: pokemon_v2_berryfirmness_order_by\\r\\n  pokemon_v2_berryflavormaps_aggregate: pokemon_v2_berryflavormap_aggregate_order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\nenum pokemon_v2_berry_select_column {\\r\\n  # column name\\r\\n  berry_firmness_id\\r\\n  # column name\\r\\n  growth_time\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n  # column name\\r\\n  max_harvest\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  natural_gift_power\\r\\n  # column name\\r\\n  natural_gift_type_id\\r\\n  # column name\\r\\n  size\\r\\n  # column name\\r\\n  smoothness\\r\\n  # column name\\r\\n  soil_dryness\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_berry_stddev_fields {\\r\\n  berry_firmness_id: Float\\r\\n  growth_time: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  max_harvest: Float\\r\\n  natural_gift_power: Float\\r\\n  natural_gift_type_id: Float\\r\\n  size: Float\\r\\n  smoothness: Float\\r\\n  soil_dryness: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_stddev_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_berry_stddev_pop_fields {\\r\\n  berry_firmness_id: Float\\r\\n  growth_time: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  max_harvest: Float\\r\\n  natural_gift_power: Float\\r\\n  natural_gift_type_id: Float\\r\\n  size: Float\\r\\n  smoothness: Float\\r\\n  soil_dryness: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_stddev_pop_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_berry_stddev_samp_fields {\\r\\n  berry_firmness_id: Float\\r\\n  growth_time: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  max_harvest: Float\\r\\n  natural_gift_power: Float\\r\\n  natural_gift_type_id: Float\\r\\n  size: Float\\r\\n  smoothness: Float\\r\\n  soil_dryness: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_stddev_samp_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_berry_sum_fields {\\r\\n  berry_firmness_id: Int\\r\\n  growth_time: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  max_harvest: Int\\r\\n  natural_gift_power: Int\\r\\n  natural_gift_type_id: Int\\r\\n  size: Int\\r\\n  smoothness: Int\\r\\n  soil_dryness: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_sum_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_berry_var_pop_fields {\\r\\n  berry_firmness_id: Float\\r\\n  growth_time: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  max_harvest: Float\\r\\n  natural_gift_power: Float\\r\\n  natural_gift_type_id: Float\\r\\n  size: Float\\r\\n  smoothness: Float\\r\\n  soil_dryness: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_var_pop_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_berry_var_samp_fields {\\r\\n  berry_firmness_id: Float\\r\\n  growth_time: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  max_harvest: Float\\r\\n  natural_gift_power: Float\\r\\n  natural_gift_type_id: Float\\r\\n  size: Float\\r\\n  smoothness: Float\\r\\n  soil_dryness: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_var_samp_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_berry_variance_fields {\\r\\n  berry_firmness_id: Float\\r\\n  growth_time: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  max_harvest: Float\\r\\n  natural_gift_power: Float\\r\\n  natural_gift_type_id: Float\\r\\n  size: Float\\r\\n  smoothness: Float\\r\\n  soil_dryness: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\ninput pokemon_v2_berry_variance_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  growth_time: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  max_harvest: order_by\\r\\n  natural_gift_power: order_by\\r\\n  natural_gift_type_id: order_by\\r\\n  size: order_by\\r\\n  smoothness: order_by\\r\\n  soil_dryness: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\ntype pokemon_v2_berryfirmness {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berries(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): [pokemon_v2_berry!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berries_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): pokemon_v2_berry_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berryfirmnessnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): [pokemon_v2_berryfirmnessname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berryfirmnessnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): pokemon_v2_berryfirmnessname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\ntype pokemon_v2_berryfirmness_aggregate {\\r\\n  aggregate: pokemon_v2_berryfirmness_aggregate_fields\\r\\n  nodes: [pokemon_v2_berryfirmness!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\ntype pokemon_v2_berryfirmness_aggregate_fields {\\r\\n  avg: pokemon_v2_berryfirmness_avg_fields\\r\\n  count(columns: [pokemon_v2_berryfirmness_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_berryfirmness_max_fields\\r\\n  min: pokemon_v2_berryfirmness_min_fields\\r\\n  stddev: pokemon_v2_berryfirmness_stddev_fields\\r\\n  stddev_pop: pokemon_v2_berryfirmness_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_berryfirmness_stddev_samp_fields\\r\\n  sum: pokemon_v2_berryfirmness_sum_fields\\r\\n  var_pop: pokemon_v2_berryfirmness_var_pop_fields\\r\\n  var_samp: pokemon_v2_berryfirmness_var_samp_fields\\r\\n  variance: pokemon_v2_berryfirmness_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_berryfirmness_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_berryfirmness\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_berryfirmness_bool_exp {\\r\\n  _and: [pokemon_v2_berryfirmness_bool_exp!]\\r\\n  _not: pokemon_v2_berryfirmness_bool_exp\\r\\n  _or: [pokemon_v2_berryfirmness_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_berries: pokemon_v2_berry_bool_exp\\r\\n  pokemon_v2_berryfirmnessnames: pokemon_v2_berryfirmnessname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_berryfirmness_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_berryfirmness_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_berryfirmness\\\\\\\".\\r\\ninput pokemon_v2_berryfirmness_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_berries_aggregate: pokemon_v2_berry_aggregate_order_by\\r\\n  pokemon_v2_berryfirmnessnames_aggregate: pokemon_v2_berryfirmnessname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\nenum pokemon_v2_berryfirmness_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_berryfirmness_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_berryfirmness_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_berryfirmness_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_berryfirmness_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_berryfirmness_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_berryfirmness_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_berryfirmness_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ntype pokemon_v2_berryfirmnessname {\\r\\n  berry_firmness_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_berryfirmness: pokemon_v2_berryfirmness\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ntype pokemon_v2_berryfirmnessname_aggregate {\\r\\n  aggregate: pokemon_v2_berryfirmnessname_aggregate_fields\\r\\n  nodes: [pokemon_v2_berryfirmnessname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ntype pokemon_v2_berryfirmnessname_aggregate_fields {\\r\\n  avg: pokemon_v2_berryfirmnessname_avg_fields\\r\\n  count(columns: [pokemon_v2_berryfirmnessname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_berryfirmnessname_max_fields\\r\\n  min: pokemon_v2_berryfirmnessname_min_fields\\r\\n  stddev: pokemon_v2_berryfirmnessname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_berryfirmnessname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_berryfirmnessname_stddev_samp_fields\\r\\n  sum: pokemon_v2_berryfirmnessname_sum_fields\\r\\n  var_pop: pokemon_v2_berryfirmnessname_var_pop_fields\\r\\n  var_samp: pokemon_v2_berryfirmnessname_var_samp_fields\\r\\n  variance: pokemon_v2_berryfirmnessname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_aggregate_order_by {\\r\\n  avg: pokemon_v2_berryfirmnessname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_berryfirmnessname_max_order_by\\r\\n  min: pokemon_v2_berryfirmnessname_min_order_by\\r\\n  stddev: pokemon_v2_berryfirmnessname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_berryfirmnessname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_berryfirmnessname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_berryfirmnessname_sum_order_by\\r\\n  var_pop: pokemon_v2_berryfirmnessname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_berryfirmnessname_var_samp_order_by\\r\\n  variance: pokemon_v2_berryfirmnessname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_berryfirmnessname_avg_fields {\\r\\n  berry_firmness_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_avg_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_berryfirmnessname_bool_exp {\\r\\n  _and: [pokemon_v2_berryfirmnessname_bool_exp!]\\r\\n  _not: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  _or: [pokemon_v2_berryfirmnessname_bool_exp!]\\r\\n  berry_firmness_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_berryfirmness: pokemon_v2_berryfirmness_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_berryfirmnessname_max_fields {\\r\\n  berry_firmness_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_max_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_berryfirmnessname_min_fields {\\r\\n  berry_firmness_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_min_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\".\\r\\ninput pokemon_v2_berryfirmnessname_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_berryfirmness: pokemon_v2_berryfirmness_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\nenum pokemon_v2_berryfirmnessname_select_column {\\r\\n  # column name\\r\\n  berry_firmness_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_berryfirmnessname_stddev_fields {\\r\\n  berry_firmness_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_stddev_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_berryfirmnessname_stddev_pop_fields {\\r\\n  berry_firmness_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_stddev_pop_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_berryfirmnessname_stddev_samp_fields {\\r\\n  berry_firmness_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_stddev_samp_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_berryfirmnessname_sum_fields {\\r\\n  berry_firmness_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_sum_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_berryfirmnessname_var_pop_fields {\\r\\n  berry_firmness_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_var_pop_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_berryfirmnessname_var_samp_fields {\\r\\n  berry_firmness_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_var_samp_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_berryfirmnessname_variance_fields {\\r\\n  berry_firmness_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\ninput pokemon_v2_berryfirmnessname_variance_order_by {\\r\\n  berry_firmness_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ntype pokemon_v2_berryflavor {\\r\\n  contest_type_id: Int\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemonV2NaturesByLikesFlavorId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): [pokemon_v2_nature!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2NaturesByLikesFlavorId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): pokemon_v2_nature_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berryflavormaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): [pokemon_v2_berryflavormap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berryflavormaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): pokemon_v2_berryflavormap_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berryflavornames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): [pokemon_v2_berryflavorname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berryflavornames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): pokemon_v2_berryflavorname_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype\\r\\n  # An array relationship\\r\\n  pokemon_v2_natures(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): [pokemon_v2_nature!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_natures_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): pokemon_v2_nature_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ntype pokemon_v2_berryflavor_aggregate {\\r\\n  aggregate: pokemon_v2_berryflavor_aggregate_fields\\r\\n  nodes: [pokemon_v2_berryflavor!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ntype pokemon_v2_berryflavor_aggregate_fields {\\r\\n  avg: pokemon_v2_berryflavor_avg_fields\\r\\n  count(columns: [pokemon_v2_berryflavor_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_berryflavor_max_fields\\r\\n  min: pokemon_v2_berryflavor_min_fields\\r\\n  stddev: pokemon_v2_berryflavor_stddev_fields\\r\\n  stddev_pop: pokemon_v2_berryflavor_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_berryflavor_stddev_samp_fields\\r\\n  sum: pokemon_v2_berryflavor_sum_fields\\r\\n  var_pop: pokemon_v2_berryflavor_var_pop_fields\\r\\n  var_samp: pokemon_v2_berryflavor_var_samp_fields\\r\\n  variance: pokemon_v2_berryflavor_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_aggregate_order_by {\\r\\n  avg: pokemon_v2_berryflavor_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_berryflavor_max_order_by\\r\\n  min: pokemon_v2_berryflavor_min_order_by\\r\\n  stddev: pokemon_v2_berryflavor_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_berryflavor_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_berryflavor_stddev_samp_order_by\\r\\n  sum: pokemon_v2_berryflavor_sum_order_by\\r\\n  var_pop: pokemon_v2_berryflavor_var_pop_order_by\\r\\n  var_samp: pokemon_v2_berryflavor_var_samp_order_by\\r\\n  variance: pokemon_v2_berryflavor_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_berryflavor_avg_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_avg_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_berryflavor\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_berryflavor_bool_exp {\\r\\n  _and: [pokemon_v2_berryflavor_bool_exp!]\\r\\n  _not: pokemon_v2_berryflavor_bool_exp\\r\\n  _or: [pokemon_v2_berryflavor_bool_exp!]\\r\\n  contest_type_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemonV2NaturesByLikesFlavorId: pokemon_v2_nature_bool_exp\\r\\n  pokemon_v2_berryflavormaps: pokemon_v2_berryflavormap_bool_exp\\r\\n  pokemon_v2_berryflavornames: pokemon_v2_berryflavorname_bool_exp\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype_bool_exp\\r\\n  pokemon_v2_natures: pokemon_v2_nature_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_berryflavor_max_fields {\\r\\n  contest_type_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_max_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_berryflavor_min_fields {\\r\\n  contest_type_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_min_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_berryflavor\\\\\\\".\\r\\ninput pokemon_v2_berryflavor_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemonV2NaturesByLikesFlavorId_aggregate: pokemon_v2_nature_aggregate_order_by\\r\\n  pokemon_v2_berryflavormaps_aggregate: pokemon_v2_berryflavormap_aggregate_order_by\\r\\n  pokemon_v2_berryflavornames_aggregate: pokemon_v2_berryflavorname_aggregate_order_by\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype_order_by\\r\\n  pokemon_v2_natures_aggregate: pokemon_v2_nature_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\nenum pokemon_v2_berryflavor_select_column {\\r\\n  # column name\\r\\n  contest_type_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_berryflavor_stddev_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_stddev_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_berryflavor_stddev_pop_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_stddev_pop_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_berryflavor_stddev_samp_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_stddev_samp_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_berryflavor_sum_fields {\\r\\n  contest_type_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_sum_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_berryflavor_var_pop_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_var_pop_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_berryflavor_var_samp_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_var_samp_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_berryflavor_variance_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\ninput pokemon_v2_berryflavor_variance_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ntype pokemon_v2_berryflavormap {\\r\\n  berry_flavor_id: Int\\r\\n  berry_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_berry: pokemon_v2_berry\\r\\n  # An object relationship\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor\\r\\n  potency: Int!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ntype pokemon_v2_berryflavormap_aggregate {\\r\\n  aggregate: pokemon_v2_berryflavormap_aggregate_fields\\r\\n  nodes: [pokemon_v2_berryflavormap!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ntype pokemon_v2_berryflavormap_aggregate_fields {\\r\\n  avg: pokemon_v2_berryflavormap_avg_fields\\r\\n  count(columns: [pokemon_v2_berryflavormap_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_berryflavormap_max_fields\\r\\n  min: pokemon_v2_berryflavormap_min_fields\\r\\n  stddev: pokemon_v2_berryflavormap_stddev_fields\\r\\n  stddev_pop: pokemon_v2_berryflavormap_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_berryflavormap_stddev_samp_fields\\r\\n  sum: pokemon_v2_berryflavormap_sum_fields\\r\\n  var_pop: pokemon_v2_berryflavormap_var_pop_fields\\r\\n  var_samp: pokemon_v2_berryflavormap_var_samp_fields\\r\\n  variance: pokemon_v2_berryflavormap_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_aggregate_order_by {\\r\\n  avg: pokemon_v2_berryflavormap_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_berryflavormap_max_order_by\\r\\n  min: pokemon_v2_berryflavormap_min_order_by\\r\\n  stddev: pokemon_v2_berryflavormap_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_berryflavormap_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_berryflavormap_stddev_samp_order_by\\r\\n  sum: pokemon_v2_berryflavormap_sum_order_by\\r\\n  var_pop: pokemon_v2_berryflavormap_var_pop_order_by\\r\\n  var_samp: pokemon_v2_berryflavormap_var_samp_order_by\\r\\n  variance: pokemon_v2_berryflavormap_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_berryflavormap_avg_fields {\\r\\n  berry_flavor_id: Float\\r\\n  berry_id: Float\\r\\n  id: Float\\r\\n  potency: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_avg_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_berryflavormap_bool_exp {\\r\\n  _and: [pokemon_v2_berryflavormap_bool_exp!]\\r\\n  _not: pokemon_v2_berryflavormap_bool_exp\\r\\n  _or: [pokemon_v2_berryflavormap_bool_exp!]\\r\\n  berry_flavor_id: Int_comparison_exp\\r\\n  berry_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_berry: pokemon_v2_berry_bool_exp\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor_bool_exp\\r\\n  potency: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_berryflavormap_max_fields {\\r\\n  berry_flavor_id: Int\\r\\n  berry_id: Int\\r\\n  id: Int\\r\\n  potency: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_max_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_berryflavormap_min_fields {\\r\\n  berry_flavor_id: Int\\r\\n  berry_id: Int\\r\\n  id: Int\\r\\n  potency: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_min_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_berryflavormap\\\\\\\".\\r\\ninput pokemon_v2_berryflavormap_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_berry: pokemon_v2_berry_order_by\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor_order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\nenum pokemon_v2_berryflavormap_select_column {\\r\\n  # column name\\r\\n  berry_flavor_id\\r\\n  # column name\\r\\n  berry_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  potency\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_berryflavormap_stddev_fields {\\r\\n  berry_flavor_id: Float\\r\\n  berry_id: Float\\r\\n  id: Float\\r\\n  potency: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_stddev_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_berryflavormap_stddev_pop_fields {\\r\\n  berry_flavor_id: Float\\r\\n  berry_id: Float\\r\\n  id: Float\\r\\n  potency: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_stddev_pop_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_berryflavormap_stddev_samp_fields {\\r\\n  berry_flavor_id: Float\\r\\n  berry_id: Float\\r\\n  id: Float\\r\\n  potency: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_stddev_samp_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_berryflavormap_sum_fields {\\r\\n  berry_flavor_id: Int\\r\\n  berry_id: Int\\r\\n  id: Int\\r\\n  potency: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_sum_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_berryflavormap_var_pop_fields {\\r\\n  berry_flavor_id: Float\\r\\n  berry_id: Float\\r\\n  id: Float\\r\\n  potency: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_var_pop_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_berryflavormap_var_samp_fields {\\r\\n  berry_flavor_id: Float\\r\\n  berry_id: Float\\r\\n  id: Float\\r\\n  potency: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_var_samp_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_berryflavormap_variance_fields {\\r\\n  berry_flavor_id: Float\\r\\n  berry_id: Float\\r\\n  id: Float\\r\\n  potency: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\ninput pokemon_v2_berryflavormap_variance_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  berry_id: order_by\\r\\n  id: order_by\\r\\n  potency: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ntype pokemon_v2_berryflavorname {\\r\\n  berry_flavor_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ntype pokemon_v2_berryflavorname_aggregate {\\r\\n  aggregate: pokemon_v2_berryflavorname_aggregate_fields\\r\\n  nodes: [pokemon_v2_berryflavorname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ntype pokemon_v2_berryflavorname_aggregate_fields {\\r\\n  avg: pokemon_v2_berryflavorname_avg_fields\\r\\n  count(columns: [pokemon_v2_berryflavorname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_berryflavorname_max_fields\\r\\n  min: pokemon_v2_berryflavorname_min_fields\\r\\n  stddev: pokemon_v2_berryflavorname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_berryflavorname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_berryflavorname_stddev_samp_fields\\r\\n  sum: pokemon_v2_berryflavorname_sum_fields\\r\\n  var_pop: pokemon_v2_berryflavorname_var_pop_fields\\r\\n  var_samp: pokemon_v2_berryflavorname_var_samp_fields\\r\\n  variance: pokemon_v2_berryflavorname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_aggregate_order_by {\\r\\n  avg: pokemon_v2_berryflavorname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_berryflavorname_max_order_by\\r\\n  min: pokemon_v2_berryflavorname_min_order_by\\r\\n  stddev: pokemon_v2_berryflavorname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_berryflavorname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_berryflavorname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_berryflavorname_sum_order_by\\r\\n  var_pop: pokemon_v2_berryflavorname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_berryflavorname_var_samp_order_by\\r\\n  variance: pokemon_v2_berryflavorname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_berryflavorname_avg_fields {\\r\\n  berry_flavor_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_avg_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_berryflavorname_bool_exp {\\r\\n  _and: [pokemon_v2_berryflavorname_bool_exp!]\\r\\n  _not: pokemon_v2_berryflavorname_bool_exp\\r\\n  _or: [pokemon_v2_berryflavorname_bool_exp!]\\r\\n  berry_flavor_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_berryflavorname_max_fields {\\r\\n  berry_flavor_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_max_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_berryflavorname_min_fields {\\r\\n  berry_flavor_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_min_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_berryflavorname\\\\\\\".\\r\\ninput pokemon_v2_berryflavorname_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\nenum pokemon_v2_berryflavorname_select_column {\\r\\n  # column name\\r\\n  berry_flavor_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_berryflavorname_stddev_fields {\\r\\n  berry_flavor_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_stddev_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_berryflavorname_stddev_pop_fields {\\r\\n  berry_flavor_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_stddev_pop_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_berryflavorname_stddev_samp_fields {\\r\\n  berry_flavor_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_stddev_samp_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_berryflavorname_sum_fields {\\r\\n  berry_flavor_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_sum_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_berryflavorname_var_pop_fields {\\r\\n  berry_flavor_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_var_pop_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_berryflavorname_var_samp_fields {\\r\\n  berry_flavor_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_var_samp_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_berryflavorname_variance_fields {\\r\\n  berry_flavor_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\ninput pokemon_v2_berryflavorname_variance_order_by {\\r\\n  berry_flavor_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ntype pokemon_v2_characteristic {\\r\\n  gene_mod_5: Int!\\r\\n  id: Int!\\r\\n  # An array relationship\\r\\n  pokemon_v2_characteristicdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): [pokemon_v2_characteristicdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_characteristicdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): pokemon_v2_characteristicdescription_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_stat: pokemon_v2_stat\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ntype pokemon_v2_characteristic_aggregate {\\r\\n  aggregate: pokemon_v2_characteristic_aggregate_fields\\r\\n  nodes: [pokemon_v2_characteristic!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ntype pokemon_v2_characteristic_aggregate_fields {\\r\\n  avg: pokemon_v2_characteristic_avg_fields\\r\\n  count(columns: [pokemon_v2_characteristic_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_characteristic_max_fields\\r\\n  min: pokemon_v2_characteristic_min_fields\\r\\n  stddev: pokemon_v2_characteristic_stddev_fields\\r\\n  stddev_pop: pokemon_v2_characteristic_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_characteristic_stddev_samp_fields\\r\\n  sum: pokemon_v2_characteristic_sum_fields\\r\\n  var_pop: pokemon_v2_characteristic_var_pop_fields\\r\\n  var_samp: pokemon_v2_characteristic_var_samp_fields\\r\\n  variance: pokemon_v2_characteristic_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_aggregate_order_by {\\r\\n  avg: pokemon_v2_characteristic_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_characteristic_max_order_by\\r\\n  min: pokemon_v2_characteristic_min_order_by\\r\\n  stddev: pokemon_v2_characteristic_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_characteristic_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_characteristic_stddev_samp_order_by\\r\\n  sum: pokemon_v2_characteristic_sum_order_by\\r\\n  var_pop: pokemon_v2_characteristic_var_pop_order_by\\r\\n  var_samp: pokemon_v2_characteristic_var_samp_order_by\\r\\n  variance: pokemon_v2_characteristic_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_characteristic_avg_fields {\\r\\n  gene_mod_5: Float\\r\\n  id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_avg_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_characteristic\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_characteristic_bool_exp {\\r\\n  _and: [pokemon_v2_characteristic_bool_exp!]\\r\\n  _not: pokemon_v2_characteristic_bool_exp\\r\\n  _or: [pokemon_v2_characteristic_bool_exp!]\\r\\n  gene_mod_5: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_characteristicdescriptions: pokemon_v2_characteristicdescription_bool_exp\\r\\n  pokemon_v2_stat: pokemon_v2_stat_bool_exp\\r\\n  stat_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_characteristic_max_fields {\\r\\n  gene_mod_5: Int\\r\\n  id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_max_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_characteristic_min_fields {\\r\\n  gene_mod_5: Int\\r\\n  id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_min_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_characteristic\\\\\\\".\\r\\ninput pokemon_v2_characteristic_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_characteristicdescriptions_aggregate: pokemon_v2_characteristicdescription_aggregate_order_by\\r\\n  pokemon_v2_stat: pokemon_v2_stat_order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\nenum pokemon_v2_characteristic_select_column {\\r\\n  # column name\\r\\n  gene_mod_5\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  stat_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_characteristic_stddev_fields {\\r\\n  gene_mod_5: Float\\r\\n  id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_stddev_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_characteristic_stddev_pop_fields {\\r\\n  gene_mod_5: Float\\r\\n  id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_stddev_pop_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_characteristic_stddev_samp_fields {\\r\\n  gene_mod_5: Float\\r\\n  id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_stddev_samp_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_characteristic_sum_fields {\\r\\n  gene_mod_5: Int\\r\\n  id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_sum_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_characteristic_var_pop_fields {\\r\\n  gene_mod_5: Float\\r\\n  id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_var_pop_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_characteristic_var_samp_fields {\\r\\n  gene_mod_5: Float\\r\\n  id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_var_samp_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_characteristic_variance_fields {\\r\\n  gene_mod_5: Float\\r\\n  id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\ninput pokemon_v2_characteristic_variance_order_by {\\r\\n  gene_mod_5: order_by\\r\\n  id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ntype pokemon_v2_characteristicdescription {\\r\\n  characteristic_id: Int\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_characteristic: pokemon_v2_characteristic\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ntype pokemon_v2_characteristicdescription_aggregate {\\r\\n  aggregate: pokemon_v2_characteristicdescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_characteristicdescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ntype pokemon_v2_characteristicdescription_aggregate_fields {\\r\\n  avg: pokemon_v2_characteristicdescription_avg_fields\\r\\n  count(columns: [pokemon_v2_characteristicdescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_characteristicdescription_max_fields\\r\\n  min: pokemon_v2_characteristicdescription_min_fields\\r\\n  stddev: pokemon_v2_characteristicdescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_characteristicdescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_characteristicdescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_characteristicdescription_sum_fields\\r\\n  var_pop: pokemon_v2_characteristicdescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_characteristicdescription_var_samp_fields\\r\\n  variance: pokemon_v2_characteristicdescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_characteristicdescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_characteristicdescription_max_order_by\\r\\n  min: pokemon_v2_characteristicdescription_min_order_by\\r\\n  stddev: pokemon_v2_characteristicdescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_characteristicdescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_characteristicdescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_characteristicdescription_sum_order_by\\r\\n  var_pop: pokemon_v2_characteristicdescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_characteristicdescription_var_samp_order_by\\r\\n  variance: pokemon_v2_characteristicdescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_characteristicdescription_avg_fields {\\r\\n  characteristic_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_avg_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_characteristicdescription_bool_exp {\\r\\n  _and: [pokemon_v2_characteristicdescription_bool_exp!]\\r\\n  _not: pokemon_v2_characteristicdescription_bool_exp\\r\\n  _or: [pokemon_v2_characteristicdescription_bool_exp!]\\r\\n  characteristic_id: Int_comparison_exp\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_characteristic: pokemon_v2_characteristic_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_characteristicdescription_max_fields {\\r\\n  characteristic_id: Int\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_max_order_by {\\r\\n  characteristic_id: order_by\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_characteristicdescription_min_fields {\\r\\n  characteristic_id: Int\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_min_order_by {\\r\\n  characteristic_id: order_by\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\".\\r\\ninput pokemon_v2_characteristicdescription_order_by {\\r\\n  characteristic_id: order_by\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_characteristic: pokemon_v2_characteristic_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\nenum pokemon_v2_characteristicdescription_select_column {\\r\\n  # column name\\r\\n  characteristic_id\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_characteristicdescription_stddev_fields {\\r\\n  characteristic_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_stddev_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_characteristicdescription_stddev_pop_fields {\\r\\n  characteristic_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_stddev_pop_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_characteristicdescription_stddev_samp_fields {\\r\\n  characteristic_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_stddev_samp_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_characteristicdescription_sum_fields {\\r\\n  characteristic_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_sum_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_characteristicdescription_var_pop_fields {\\r\\n  characteristic_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_var_pop_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_characteristicdescription_var_samp_fields {\\r\\n  characteristic_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_var_samp_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_characteristicdescription_variance_fields {\\r\\n  characteristic_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\ninput pokemon_v2_characteristicdescription_variance_order_by {\\r\\n  characteristic_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ntype pokemon_v2_contestcombo {\\r\\n  first_move_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemonV2MoveBySecondMoveId: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ntype pokemon_v2_contestcombo_aggregate {\\r\\n  aggregate: pokemon_v2_contestcombo_aggregate_fields\\r\\n  nodes: [pokemon_v2_contestcombo!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ntype pokemon_v2_contestcombo_aggregate_fields {\\r\\n  avg: pokemon_v2_contestcombo_avg_fields\\r\\n  count(columns: [pokemon_v2_contestcombo_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_contestcombo_max_fields\\r\\n  min: pokemon_v2_contestcombo_min_fields\\r\\n  stddev: pokemon_v2_contestcombo_stddev_fields\\r\\n  stddev_pop: pokemon_v2_contestcombo_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_contestcombo_stddev_samp_fields\\r\\n  sum: pokemon_v2_contestcombo_sum_fields\\r\\n  var_pop: pokemon_v2_contestcombo_var_pop_fields\\r\\n  var_samp: pokemon_v2_contestcombo_var_samp_fields\\r\\n  variance: pokemon_v2_contestcombo_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_aggregate_order_by {\\r\\n  avg: pokemon_v2_contestcombo_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_contestcombo_max_order_by\\r\\n  min: pokemon_v2_contestcombo_min_order_by\\r\\n  stddev: pokemon_v2_contestcombo_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_contestcombo_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_contestcombo_stddev_samp_order_by\\r\\n  sum: pokemon_v2_contestcombo_sum_order_by\\r\\n  var_pop: pokemon_v2_contestcombo_var_pop_order_by\\r\\n  var_samp: pokemon_v2_contestcombo_var_samp_order_by\\r\\n  variance: pokemon_v2_contestcombo_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_contestcombo_avg_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_avg_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_contestcombo\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_contestcombo_bool_exp {\\r\\n  _and: [pokemon_v2_contestcombo_bool_exp!]\\r\\n  _not: pokemon_v2_contestcombo_bool_exp\\r\\n  _or: [pokemon_v2_contestcombo_bool_exp!]\\r\\n  first_move_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemonV2MoveBySecondMoveId: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  second_move_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_contestcombo_max_fields {\\r\\n  first_move_id: Int\\r\\n  id: Int\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_max_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_contestcombo_min_fields {\\r\\n  first_move_id: Int\\r\\n  id: Int\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_min_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_contestcombo\\\\\\\".\\r\\ninput pokemon_v2_contestcombo_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  pokemonV2MoveBySecondMoveId: pokemon_v2_move_order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\nenum pokemon_v2_contestcombo_select_column {\\r\\n  # column name\\r\\n  first_move_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  second_move_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_contestcombo_stddev_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_stddev_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_contestcombo_stddev_pop_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_stddev_pop_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_contestcombo_stddev_samp_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_stddev_samp_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_contestcombo_sum_fields {\\r\\n  first_move_id: Int\\r\\n  id: Int\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_sum_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_contestcombo_var_pop_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_var_pop_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_contestcombo_var_samp_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_var_samp_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_contestcombo_variance_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\ninput pokemon_v2_contestcombo_variance_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\ntype pokemon_v2_contesteffect {\\r\\n  appeal: Int!\\r\\n  id: Int!\\r\\n  jam: Int!\\r\\n  # An array relationship\\r\\n  pokemon_v2_contesteffecteffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_contesteffecteffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_contesteffecteffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_contesteffecteffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_contesteffectflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_contesteffectflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_contesteffectflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_contesteffectflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\ntype pokemon_v2_contesteffect_aggregate {\\r\\n  aggregate: pokemon_v2_contesteffect_aggregate_fields\\r\\n  nodes: [pokemon_v2_contesteffect!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\ntype pokemon_v2_contesteffect_aggregate_fields {\\r\\n  avg: pokemon_v2_contesteffect_avg_fields\\r\\n  count(columns: [pokemon_v2_contesteffect_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_contesteffect_max_fields\\r\\n  min: pokemon_v2_contesteffect_min_fields\\r\\n  stddev: pokemon_v2_contesteffect_stddev_fields\\r\\n  stddev_pop: pokemon_v2_contesteffect_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_contesteffect_stddev_samp_fields\\r\\n  sum: pokemon_v2_contesteffect_sum_fields\\r\\n  var_pop: pokemon_v2_contesteffect_var_pop_fields\\r\\n  var_samp: pokemon_v2_contesteffect_var_samp_fields\\r\\n  variance: pokemon_v2_contesteffect_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_contesteffect_avg_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n  jam: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_contesteffect\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_contesteffect_bool_exp {\\r\\n  _and: [pokemon_v2_contesteffect_bool_exp!]\\r\\n  _not: pokemon_v2_contesteffect_bool_exp\\r\\n  _or: [pokemon_v2_contesteffect_bool_exp!]\\r\\n  appeal: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  jam: Int_comparison_exp\\r\\n  pokemon_v2_contesteffecteffecttexts: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  pokemon_v2_contesteffectflavortexts: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_contesteffect_max_fields {\\r\\n  appeal: Int\\r\\n  id: Int\\r\\n  jam: Int\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_contesteffect_min_fields {\\r\\n  appeal: Int\\r\\n  id: Int\\r\\n  jam: Int\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_contesteffect\\\\\\\".\\r\\ninput pokemon_v2_contesteffect_order_by {\\r\\n  appeal: order_by\\r\\n  id: order_by\\r\\n  jam: order_by\\r\\n  pokemon_v2_contesteffecteffecttexts_aggregate: pokemon_v2_contesteffecteffecttext_aggregate_order_by\\r\\n  pokemon_v2_contesteffectflavortexts_aggregate: pokemon_v2_contesteffectflavortext_aggregate_order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\nenum pokemon_v2_contesteffect_select_column {\\r\\n  # column name\\r\\n  appeal\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  jam\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_contesteffect_stddev_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n  jam: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_contesteffect_stddev_pop_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n  jam: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_contesteffect_stddev_samp_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n  jam: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_contesteffect_sum_fields {\\r\\n  appeal: Int\\r\\n  id: Int\\r\\n  jam: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_contesteffect_var_pop_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n  jam: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_contesteffect_var_samp_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n  jam: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_contesteffect_variance_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n  jam: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_contesteffecteffecttext {\\r\\n  contest_effect_id: Int\\r\\n  effect: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_contesteffecteffecttext_aggregate {\\r\\n  aggregate: pokemon_v2_contesteffecteffecttext_aggregate_fields\\r\\n  nodes: [pokemon_v2_contesteffecteffecttext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_contesteffecteffecttext_aggregate_fields {\\r\\n  avg: pokemon_v2_contesteffecteffecttext_avg_fields\\r\\n  count(columns: [pokemon_v2_contesteffecteffecttext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_contesteffecteffecttext_max_fields\\r\\n  min: pokemon_v2_contesteffecteffecttext_min_fields\\r\\n  stddev: pokemon_v2_contesteffecteffecttext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_contesteffecteffecttext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_contesteffecteffecttext_stddev_samp_fields\\r\\n  sum: pokemon_v2_contesteffecteffecttext_sum_fields\\r\\n  var_pop: pokemon_v2_contesteffecteffecttext_var_pop_fields\\r\\n  var_samp: pokemon_v2_contesteffecteffecttext_var_samp_fields\\r\\n  variance: pokemon_v2_contesteffecteffecttext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_aggregate_order_by {\\r\\n  avg: pokemon_v2_contesteffecteffecttext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_contesteffecteffecttext_max_order_by\\r\\n  min: pokemon_v2_contesteffecteffecttext_min_order_by\\r\\n  stddev: pokemon_v2_contesteffecteffecttext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_contesteffecteffecttext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_contesteffecteffecttext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_contesteffecteffecttext_sum_order_by\\r\\n  var_pop: pokemon_v2_contesteffecteffecttext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_contesteffecteffecttext_var_samp_order_by\\r\\n  variance: pokemon_v2_contesteffecteffecttext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_avg_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_avg_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_contesteffecteffecttext_bool_exp {\\r\\n  _and: [pokemon_v2_contesteffecteffecttext_bool_exp!]\\r\\n  _not: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  _or: [pokemon_v2_contesteffecteffecttext_bool_exp!]\\r\\n  contest_effect_id: Int_comparison_exp\\r\\n  effect: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_max_fields {\\r\\n  contest_effect_id: Int\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_max_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_min_fields {\\r\\n  contest_effect_id: Int\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_min_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\".\\r\\ninput pokemon_v2_contesteffecteffecttext_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\nenum pokemon_v2_contesteffecteffecttext_select_column {\\r\\n  # column name\\r\\n  contest_effect_id\\r\\n  # column name\\r\\n  effect\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_stddev_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_stddev_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_stddev_pop_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_stddev_pop_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_stddev_samp_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_stddev_samp_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_sum_fields {\\r\\n  contest_effect_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_sum_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_var_pop_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_var_pop_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_var_samp_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_var_samp_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_contesteffecteffecttext_variance_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_contesteffecteffecttext_variance_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ntype pokemon_v2_contesteffectflavortext {\\r\\n  contest_effect_id: Int\\r\\n  flavor_text: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ntype pokemon_v2_contesteffectflavortext_aggregate {\\r\\n  aggregate: pokemon_v2_contesteffectflavortext_aggregate_fields\\r\\n  nodes: [pokemon_v2_contesteffectflavortext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ntype pokemon_v2_contesteffectflavortext_aggregate_fields {\\r\\n  avg: pokemon_v2_contesteffectflavortext_avg_fields\\r\\n  count(columns: [pokemon_v2_contesteffectflavortext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_contesteffectflavortext_max_fields\\r\\n  min: pokemon_v2_contesteffectflavortext_min_fields\\r\\n  stddev: pokemon_v2_contesteffectflavortext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_contesteffectflavortext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_contesteffectflavortext_stddev_samp_fields\\r\\n  sum: pokemon_v2_contesteffectflavortext_sum_fields\\r\\n  var_pop: pokemon_v2_contesteffectflavortext_var_pop_fields\\r\\n  var_samp: pokemon_v2_contesteffectflavortext_var_samp_fields\\r\\n  variance: pokemon_v2_contesteffectflavortext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_aggregate_order_by {\\r\\n  avg: pokemon_v2_contesteffectflavortext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_contesteffectflavortext_max_order_by\\r\\n  min: pokemon_v2_contesteffectflavortext_min_order_by\\r\\n  stddev: pokemon_v2_contesteffectflavortext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_contesteffectflavortext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_contesteffectflavortext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_contesteffectflavortext_sum_order_by\\r\\n  var_pop: pokemon_v2_contesteffectflavortext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_contesteffectflavortext_var_samp_order_by\\r\\n  variance: pokemon_v2_contesteffectflavortext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_contesteffectflavortext_avg_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_avg_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_contesteffectflavortext_bool_exp {\\r\\n  _and: [pokemon_v2_contesteffectflavortext_bool_exp!]\\r\\n  _not: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  _or: [pokemon_v2_contesteffectflavortext_bool_exp!]\\r\\n  contest_effect_id: Int_comparison_exp\\r\\n  flavor_text: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_contesteffectflavortext_max_fields {\\r\\n  contest_effect_id: Int\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_max_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_contesteffectflavortext_min_fields {\\r\\n  contest_effect_id: Int\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_min_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\".\\r\\ninput pokemon_v2_contesteffectflavortext_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\nenum pokemon_v2_contesteffectflavortext_select_column {\\r\\n  # column name\\r\\n  contest_effect_id\\r\\n  # column name\\r\\n  flavor_text\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_contesteffectflavortext_stddev_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_stddev_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_contesteffectflavortext_stddev_pop_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_stddev_pop_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_contesteffectflavortext_stddev_samp_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_stddev_samp_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_contesteffectflavortext_sum_fields {\\r\\n  contest_effect_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_sum_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_contesteffectflavortext_var_pop_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_var_pop_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_contesteffectflavortext_var_samp_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_var_samp_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_contesteffectflavortext_variance_fields {\\r\\n  contest_effect_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_contesteffectflavortext_variance_order_by {\\r\\n  contest_effect_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\ntype pokemon_v2_contesttype {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berryflavors(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavor_bool_exp\\r\\n  ): [pokemon_v2_berryflavor!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berryflavors_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavor_bool_exp\\r\\n  ): pokemon_v2_berryflavor_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_contesttypenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): [pokemon_v2_contesttypename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_contesttypenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): pokemon_v2_contesttypename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\ntype pokemon_v2_contesttype_aggregate {\\r\\n  aggregate: pokemon_v2_contesttype_aggregate_fields\\r\\n  nodes: [pokemon_v2_contesttype!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\ntype pokemon_v2_contesttype_aggregate_fields {\\r\\n  avg: pokemon_v2_contesttype_avg_fields\\r\\n  count(columns: [pokemon_v2_contesttype_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_contesttype_max_fields\\r\\n  min: pokemon_v2_contesttype_min_fields\\r\\n  stddev: pokemon_v2_contesttype_stddev_fields\\r\\n  stddev_pop: pokemon_v2_contesttype_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_contesttype_stddev_samp_fields\\r\\n  sum: pokemon_v2_contesttype_sum_fields\\r\\n  var_pop: pokemon_v2_contesttype_var_pop_fields\\r\\n  var_samp: pokemon_v2_contesttype_var_samp_fields\\r\\n  variance: pokemon_v2_contesttype_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_contesttype_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_contesttype\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_contesttype_bool_exp {\\r\\n  _and: [pokemon_v2_contesttype_bool_exp!]\\r\\n  _not: pokemon_v2_contesttype_bool_exp\\r\\n  _or: [pokemon_v2_contesttype_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_berryflavors: pokemon_v2_berryflavor_bool_exp\\r\\n  pokemon_v2_contesttypenames: pokemon_v2_contesttypename_bool_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_contesttype_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_contesttype_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_contesttype\\\\\\\".\\r\\ninput pokemon_v2_contesttype_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_berryflavors_aggregate: pokemon_v2_berryflavor_aggregate_order_by\\r\\n  pokemon_v2_contesttypenames_aggregate: pokemon_v2_contesttypename_aggregate_order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\nenum pokemon_v2_contesttype_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_contesttype_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_contesttype_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_contesttype_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_contesttype_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_contesttype_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_contesttype_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_contesttype_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ntype pokemon_v2_contesttypename {\\r\\n  color: String!\\r\\n  contest_type_id: Int\\r\\n  flavor: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ntype pokemon_v2_contesttypename_aggregate {\\r\\n  aggregate: pokemon_v2_contesttypename_aggregate_fields\\r\\n  nodes: [pokemon_v2_contesttypename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ntype pokemon_v2_contesttypename_aggregate_fields {\\r\\n  avg: pokemon_v2_contesttypename_avg_fields\\r\\n  count(columns: [pokemon_v2_contesttypename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_contesttypename_max_fields\\r\\n  min: pokemon_v2_contesttypename_min_fields\\r\\n  stddev: pokemon_v2_contesttypename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_contesttypename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_contesttypename_stddev_samp_fields\\r\\n  sum: pokemon_v2_contesttypename_sum_fields\\r\\n  var_pop: pokemon_v2_contesttypename_var_pop_fields\\r\\n  var_samp: pokemon_v2_contesttypename_var_samp_fields\\r\\n  variance: pokemon_v2_contesttypename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_aggregate_order_by {\\r\\n  avg: pokemon_v2_contesttypename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_contesttypename_max_order_by\\r\\n  min: pokemon_v2_contesttypename_min_order_by\\r\\n  stddev: pokemon_v2_contesttypename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_contesttypename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_contesttypename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_contesttypename_sum_order_by\\r\\n  var_pop: pokemon_v2_contesttypename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_contesttypename_var_samp_order_by\\r\\n  variance: pokemon_v2_contesttypename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_contesttypename_avg_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_avg_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_contesttypename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_contesttypename_bool_exp {\\r\\n  _and: [pokemon_v2_contesttypename_bool_exp!]\\r\\n  _not: pokemon_v2_contesttypename_bool_exp\\r\\n  _or: [pokemon_v2_contesttypename_bool_exp!]\\r\\n  color: String_comparison_exp\\r\\n  contest_type_id: Int_comparison_exp\\r\\n  flavor: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_contesttypename_max_fields {\\r\\n  color: String\\r\\n  contest_type_id: Int\\r\\n  flavor: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_max_order_by {\\r\\n  color: order_by\\r\\n  contest_type_id: order_by\\r\\n  flavor: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_contesttypename_min_fields {\\r\\n  color: String\\r\\n  contest_type_id: Int\\r\\n  flavor: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_min_order_by {\\r\\n  color: order_by\\r\\n  contest_type_id: order_by\\r\\n  flavor: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_contesttypename\\\\\\\".\\r\\ninput pokemon_v2_contesttypename_order_by {\\r\\n  color: order_by\\r\\n  contest_type_id: order_by\\r\\n  flavor: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\nenum pokemon_v2_contesttypename_select_column {\\r\\n  # column name\\r\\n  color\\r\\n  # column name\\r\\n  contest_type_id\\r\\n  # column name\\r\\n  flavor\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_contesttypename_stddev_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_stddev_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_contesttypename_stddev_pop_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_stddev_pop_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_contesttypename_stddev_samp_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_stddev_samp_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_contesttypename_sum_fields {\\r\\n  contest_type_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_sum_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_contesttypename_var_pop_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_var_pop_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_contesttypename_var_samp_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_var_samp_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_contesttypename_variance_fields {\\r\\n  contest_type_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\ninput pokemon_v2_contesttypename_variance_order_by {\\r\\n  contest_type_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\ntype pokemon_v2_egggroup {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_egggroupnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): [pokemon_v2_egggroupname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_egggroupnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): pokemon_v2_egggroupname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonegggroups(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): [pokemon_v2_pokemonegggroup!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonegggroups_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): pokemon_v2_pokemonegggroup_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\ntype pokemon_v2_egggroup_aggregate {\\r\\n  aggregate: pokemon_v2_egggroup_aggregate_fields\\r\\n  nodes: [pokemon_v2_egggroup!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\ntype pokemon_v2_egggroup_aggregate_fields {\\r\\n  avg: pokemon_v2_egggroup_avg_fields\\r\\n  count(columns: [pokemon_v2_egggroup_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_egggroup_max_fields\\r\\n  min: pokemon_v2_egggroup_min_fields\\r\\n  stddev: pokemon_v2_egggroup_stddev_fields\\r\\n  stddev_pop: pokemon_v2_egggroup_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_egggroup_stddev_samp_fields\\r\\n  sum: pokemon_v2_egggroup_sum_fields\\r\\n  var_pop: pokemon_v2_egggroup_var_pop_fields\\r\\n  var_samp: pokemon_v2_egggroup_var_samp_fields\\r\\n  variance: pokemon_v2_egggroup_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_egggroup_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_egggroup\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_egggroup_bool_exp {\\r\\n  _and: [pokemon_v2_egggroup_bool_exp!]\\r\\n  _not: pokemon_v2_egggroup_bool_exp\\r\\n  _or: [pokemon_v2_egggroup_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_egggroupnames: pokemon_v2_egggroupname_bool_exp\\r\\n  pokemon_v2_pokemonegggroups: pokemon_v2_pokemonegggroup_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_egggroup_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_egggroup_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_egggroup\\\\\\\".\\r\\ninput pokemon_v2_egggroup_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_egggroupnames_aggregate: pokemon_v2_egggroupname_aggregate_order_by\\r\\n  pokemon_v2_pokemonegggroups_aggregate: pokemon_v2_pokemonegggroup_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\nenum pokemon_v2_egggroup_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_egggroup_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_egggroup_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_egggroup_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_egggroup_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_egggroup_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_egggroup_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_egggroup_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ntype pokemon_v2_egggroupname {\\r\\n  egg_group_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_egggroup: pokemon_v2_egggroup\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ntype pokemon_v2_egggroupname_aggregate {\\r\\n  aggregate: pokemon_v2_egggroupname_aggregate_fields\\r\\n  nodes: [pokemon_v2_egggroupname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ntype pokemon_v2_egggroupname_aggregate_fields {\\r\\n  avg: pokemon_v2_egggroupname_avg_fields\\r\\n  count(columns: [pokemon_v2_egggroupname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_egggroupname_max_fields\\r\\n  min: pokemon_v2_egggroupname_min_fields\\r\\n  stddev: pokemon_v2_egggroupname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_egggroupname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_egggroupname_stddev_samp_fields\\r\\n  sum: pokemon_v2_egggroupname_sum_fields\\r\\n  var_pop: pokemon_v2_egggroupname_var_pop_fields\\r\\n  var_samp: pokemon_v2_egggroupname_var_samp_fields\\r\\n  variance: pokemon_v2_egggroupname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_aggregate_order_by {\\r\\n  avg: pokemon_v2_egggroupname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_egggroupname_max_order_by\\r\\n  min: pokemon_v2_egggroupname_min_order_by\\r\\n  stddev: pokemon_v2_egggroupname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_egggroupname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_egggroupname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_egggroupname_sum_order_by\\r\\n  var_pop: pokemon_v2_egggroupname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_egggroupname_var_samp_order_by\\r\\n  variance: pokemon_v2_egggroupname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_egggroupname_avg_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_avg_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_egggroupname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_egggroupname_bool_exp {\\r\\n  _and: [pokemon_v2_egggroupname_bool_exp!]\\r\\n  _not: pokemon_v2_egggroupname_bool_exp\\r\\n  _or: [pokemon_v2_egggroupname_bool_exp!]\\r\\n  egg_group_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_egggroup: pokemon_v2_egggroup_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_egggroupname_max_fields {\\r\\n  egg_group_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_max_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_egggroupname_min_fields {\\r\\n  egg_group_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_min_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_egggroupname\\\\\\\".\\r\\ninput pokemon_v2_egggroupname_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_egggroup: pokemon_v2_egggroup_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\nenum pokemon_v2_egggroupname_select_column {\\r\\n  # column name\\r\\n  egg_group_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_egggroupname_stddev_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_stddev_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_egggroupname_stddev_pop_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_stddev_pop_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_egggroupname_stddev_samp_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_stddev_samp_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_egggroupname_sum_fields {\\r\\n  egg_group_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_sum_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_egggroupname_var_pop_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_var_pop_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_egggroupname_var_samp_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_var_samp_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_egggroupname_variance_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\ninput pokemon_v2_egggroupname_variance_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ntype pokemon_v2_encounter {\\r\\n  encounter_slot_id: Int\\r\\n  id: Int!\\r\\n  location_area_id: Int\\r\\n  max_level: Int!\\r\\n  min_level: Int!\\r\\n  pokemon_id: Int\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterconditionvaluemaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluemap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterconditionvaluemaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluemap_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_encounterslot: pokemon_v2_encounterslot\\r\\n  # An object relationship\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An object relationship\\r\\n  pokemon_v2_version: pokemon_v2_version\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ntype pokemon_v2_encounter_aggregate {\\r\\n  aggregate: pokemon_v2_encounter_aggregate_fields\\r\\n  nodes: [pokemon_v2_encounter!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ntype pokemon_v2_encounter_aggregate_fields {\\r\\n  avg: pokemon_v2_encounter_avg_fields\\r\\n  count(columns: [pokemon_v2_encounter_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encounter_max_fields\\r\\n  min: pokemon_v2_encounter_min_fields\\r\\n  stddev: pokemon_v2_encounter_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encounter_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encounter_stddev_samp_fields\\r\\n  sum: pokemon_v2_encounter_sum_fields\\r\\n  var_pop: pokemon_v2_encounter_var_pop_fields\\r\\n  var_samp: pokemon_v2_encounter_var_samp_fields\\r\\n  variance: pokemon_v2_encounter_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_aggregate_order_by {\\r\\n  avg: pokemon_v2_encounter_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_encounter_max_order_by\\r\\n  min: pokemon_v2_encounter_min_order_by\\r\\n  stddev: pokemon_v2_encounter_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_encounter_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_encounter_stddev_samp_order_by\\r\\n  sum: pokemon_v2_encounter_sum_order_by\\r\\n  var_pop: pokemon_v2_encounter_var_pop_order_by\\r\\n  var_samp: pokemon_v2_encounter_var_samp_order_by\\r\\n  variance: pokemon_v2_encounter_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encounter_avg_fields {\\r\\n  encounter_slot_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  max_level: Float\\r\\n  min_level: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_avg_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encounter\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encounter_bool_exp {\\r\\n  _and: [pokemon_v2_encounter_bool_exp!]\\r\\n  _not: pokemon_v2_encounter_bool_exp\\r\\n  _or: [pokemon_v2_encounter_bool_exp!]\\r\\n  encounter_slot_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  location_area_id: Int_comparison_exp\\r\\n  max_level: Int_comparison_exp\\r\\n  min_level: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_encounterconditionvaluemaps: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  pokemon_v2_encounterslot: pokemon_v2_encounterslot_bool_exp\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea_bool_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_version: pokemon_v2_version_bool_exp\\r\\n  version_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encounter_max_fields {\\r\\n  encounter_slot_id: Int\\r\\n  id: Int\\r\\n  location_area_id: Int\\r\\n  max_level: Int\\r\\n  min_level: Int\\r\\n  pokemon_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_max_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encounter_min_fields {\\r\\n  encounter_slot_id: Int\\r\\n  id: Int\\r\\n  location_area_id: Int\\r\\n  max_level: Int\\r\\n  min_level: Int\\r\\n  pokemon_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_min_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encounter\\\\\\\".\\r\\ninput pokemon_v2_encounter_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_encounterconditionvaluemaps_aggregate: pokemon_v2_encounterconditionvaluemap_aggregate_order_by\\r\\n  pokemon_v2_encounterslot: pokemon_v2_encounterslot_order_by\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea_order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_version: pokemon_v2_version_order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\nenum pokemon_v2_encounter_select_column {\\r\\n  # column name\\r\\n  encounter_slot_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  location_area_id\\r\\n  # column name\\r\\n  max_level\\r\\n  # column name\\r\\n  min_level\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  version_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encounter_stddev_fields {\\r\\n  encounter_slot_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  max_level: Float\\r\\n  min_level: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_stddev_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encounter_stddev_pop_fields {\\r\\n  encounter_slot_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  max_level: Float\\r\\n  min_level: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_stddev_pop_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encounter_stddev_samp_fields {\\r\\n  encounter_slot_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  max_level: Float\\r\\n  min_level: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_stddev_samp_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encounter_sum_fields {\\r\\n  encounter_slot_id: Int\\r\\n  id: Int\\r\\n  location_area_id: Int\\r\\n  max_level: Int\\r\\n  min_level: Int\\r\\n  pokemon_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_sum_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encounter_var_pop_fields {\\r\\n  encounter_slot_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  max_level: Float\\r\\n  min_level: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_var_pop_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encounter_var_samp_fields {\\r\\n  encounter_slot_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  max_level: Float\\r\\n  min_level: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_var_samp_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encounter_variance_fields {\\r\\n  encounter_slot_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  max_level: Float\\r\\n  min_level: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\ninput pokemon_v2_encounter_variance_order_by {\\r\\n  encounter_slot_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  max_level: order_by\\r\\n  min_level: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\ntype pokemon_v2_encountercondition {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterconditionnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterconditionnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): pokemon_v2_encounterconditionname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterconditionvalues(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvalue_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvalue_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvalue!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterconditionvalues_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvalue_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvalue_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvalue_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\ntype pokemon_v2_encountercondition_aggregate {\\r\\n  aggregate: pokemon_v2_encountercondition_aggregate_fields\\r\\n  nodes: [pokemon_v2_encountercondition!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\ntype pokemon_v2_encountercondition_aggregate_fields {\\r\\n  avg: pokemon_v2_encountercondition_avg_fields\\r\\n  count(columns: [pokemon_v2_encountercondition_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encountercondition_max_fields\\r\\n  min: pokemon_v2_encountercondition_min_fields\\r\\n  stddev: pokemon_v2_encountercondition_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encountercondition_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encountercondition_stddev_samp_fields\\r\\n  sum: pokemon_v2_encountercondition_sum_fields\\r\\n  var_pop: pokemon_v2_encountercondition_var_pop_fields\\r\\n  var_samp: pokemon_v2_encountercondition_var_samp_fields\\r\\n  variance: pokemon_v2_encountercondition_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encountercondition_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encountercondition\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encountercondition_bool_exp {\\r\\n  _and: [pokemon_v2_encountercondition_bool_exp!]\\r\\n  _not: pokemon_v2_encountercondition_bool_exp\\r\\n  _or: [pokemon_v2_encountercondition_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_encounterconditionnames: pokemon_v2_encounterconditionname_bool_exp\\r\\n  pokemon_v2_encounterconditionvalues: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encountercondition_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encountercondition_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encountercondition\\\\\\\".\\r\\ninput pokemon_v2_encountercondition_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_encounterconditionnames_aggregate: pokemon_v2_encounterconditionname_aggregate_order_by\\r\\n  pokemon_v2_encounterconditionvalues_aggregate: pokemon_v2_encounterconditionvalue_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\nenum pokemon_v2_encountercondition_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encountercondition_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encountercondition_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encountercondition_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encountercondition_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encountercondition_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encountercondition_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encountercondition_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionname {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_encountercondition: pokemon_v2_encountercondition\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionname_aggregate {\\r\\n  aggregate: pokemon_v2_encounterconditionname_aggregate_fields\\r\\n  nodes: [pokemon_v2_encounterconditionname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionname_aggregate_fields {\\r\\n  avg: pokemon_v2_encounterconditionname_avg_fields\\r\\n  count(columns: [pokemon_v2_encounterconditionname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encounterconditionname_max_fields\\r\\n  min: pokemon_v2_encounterconditionname_min_fields\\r\\n  stddev: pokemon_v2_encounterconditionname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encounterconditionname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encounterconditionname_stddev_samp_fields\\r\\n  sum: pokemon_v2_encounterconditionname_sum_fields\\r\\n  var_pop: pokemon_v2_encounterconditionname_var_pop_fields\\r\\n  var_samp: pokemon_v2_encounterconditionname_var_samp_fields\\r\\n  variance: pokemon_v2_encounterconditionname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_aggregate_order_by {\\r\\n  avg: pokemon_v2_encounterconditionname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_encounterconditionname_max_order_by\\r\\n  min: pokemon_v2_encounterconditionname_min_order_by\\r\\n  stddev: pokemon_v2_encounterconditionname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_encounterconditionname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_encounterconditionname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_encounterconditionname_sum_order_by\\r\\n  var_pop: pokemon_v2_encounterconditionname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_encounterconditionname_var_samp_order_by\\r\\n  variance: pokemon_v2_encounterconditionname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encounterconditionname_avg_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_avg_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encounterconditionname_bool_exp {\\r\\n  _and: [pokemon_v2_encounterconditionname_bool_exp!]\\r\\n  _not: pokemon_v2_encounterconditionname_bool_exp\\r\\n  _or: [pokemon_v2_encounterconditionname_bool_exp!]\\r\\n  encounter_condition_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_encountercondition: pokemon_v2_encountercondition_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encounterconditionname_max_fields {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_max_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encounterconditionname_min_fields {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_min_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\".\\r\\ninput pokemon_v2_encounterconditionname_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_encountercondition: pokemon_v2_encountercondition_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\nenum pokemon_v2_encounterconditionname_select_column {\\r\\n  # column name\\r\\n  encounter_condition_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encounterconditionname_stddev_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_stddev_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encounterconditionname_stddev_pop_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_stddev_pop_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encounterconditionname_stddev_samp_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_stddev_samp_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encounterconditionname_sum_fields {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_sum_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encounterconditionname_var_pop_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_var_pop_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encounterconditionname_var_samp_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_var_samp_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encounterconditionname_variance_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionname_variance_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvalue {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int!\\r\\n  is_default: Boolean!\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_encountercondition: pokemon_v2_encountercondition\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterconditionvaluemaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluemap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterconditionvaluemaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluemap_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterconditionvaluenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterconditionvaluenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluename_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvalue_aggregate {\\r\\n  aggregate: pokemon_v2_encounterconditionvalue_aggregate_fields\\r\\n  nodes: [pokemon_v2_encounterconditionvalue!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvalue_aggregate_fields {\\r\\n  avg: pokemon_v2_encounterconditionvalue_avg_fields\\r\\n  count(columns: [pokemon_v2_encounterconditionvalue_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encounterconditionvalue_max_fields\\r\\n  min: pokemon_v2_encounterconditionvalue_min_fields\\r\\n  stddev: pokemon_v2_encounterconditionvalue_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encounterconditionvalue_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encounterconditionvalue_stddev_samp_fields\\r\\n  sum: pokemon_v2_encounterconditionvalue_sum_fields\\r\\n  var_pop: pokemon_v2_encounterconditionvalue_var_pop_fields\\r\\n  var_samp: pokemon_v2_encounterconditionvalue_var_samp_fields\\r\\n  variance: pokemon_v2_encounterconditionvalue_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_aggregate_order_by {\\r\\n  avg: pokemon_v2_encounterconditionvalue_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_encounterconditionvalue_max_order_by\\r\\n  min: pokemon_v2_encounterconditionvalue_min_order_by\\r\\n  stddev: pokemon_v2_encounterconditionvalue_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_encounterconditionvalue_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_encounterconditionvalue_stddev_samp_order_by\\r\\n  sum: pokemon_v2_encounterconditionvalue_sum_order_by\\r\\n  var_pop: pokemon_v2_encounterconditionvalue_var_pop_order_by\\r\\n  var_samp: pokemon_v2_encounterconditionvalue_var_samp_order_by\\r\\n  variance: pokemon_v2_encounterconditionvalue_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encounterconditionvalue_avg_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_avg_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encounterconditionvalue_bool_exp {\\r\\n  _and: [pokemon_v2_encounterconditionvalue_bool_exp!]\\r\\n  _not: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  _or: [pokemon_v2_encounterconditionvalue_bool_exp!]\\r\\n  encounter_condition_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  is_default: Boolean_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_encountercondition: pokemon_v2_encountercondition_bool_exp\\r\\n  pokemon_v2_encounterconditionvaluemaps: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  pokemon_v2_encounterconditionvaluenames: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encounterconditionvalue_max_fields {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_max_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encounterconditionvalue_min_fields {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_min_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\".\\r\\ninput pokemon_v2_encounterconditionvalue_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n  is_default: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_encountercondition: pokemon_v2_encountercondition_order_by\\r\\n  pokemon_v2_encounterconditionvaluemaps_aggregate: pokemon_v2_encounterconditionvaluemap_aggregate_order_by\\r\\n  pokemon_v2_encounterconditionvaluenames_aggregate: pokemon_v2_encounterconditionvaluename_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\nenum pokemon_v2_encounterconditionvalue_select_column {\\r\\n  # column name\\r\\n  encounter_condition_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_default\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encounterconditionvalue_stddev_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_stddev_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encounterconditionvalue_stddev_pop_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_stddev_pop_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encounterconditionvalue_stddev_samp_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_stddev_samp_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encounterconditionvalue_sum_fields {\\r\\n  encounter_condition_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_sum_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encounterconditionvalue_var_pop_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_var_pop_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encounterconditionvalue_var_samp_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_var_samp_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encounterconditionvalue_variance_fields {\\r\\n  encounter_condition_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvalue_variance_order_by {\\r\\n  encounter_condition_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvaluemap {\\r\\n  encounter_condition_value_id: Int\\r\\n  encounter_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_encounter: pokemon_v2_encounter\\r\\n  # An object relationship\\r\\n  pokemon_v2_encounterconditionvalue: pokemon_v2_encounterconditionvalue\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvaluemap_aggregate {\\r\\n  aggregate: pokemon_v2_encounterconditionvaluemap_aggregate_fields\\r\\n  nodes: [pokemon_v2_encounterconditionvaluemap!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvaluemap_aggregate_fields {\\r\\n  avg: pokemon_v2_encounterconditionvaluemap_avg_fields\\r\\n  count(columns: [pokemon_v2_encounterconditionvaluemap_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encounterconditionvaluemap_max_fields\\r\\n  min: pokemon_v2_encounterconditionvaluemap_min_fields\\r\\n  stddev: pokemon_v2_encounterconditionvaluemap_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encounterconditionvaluemap_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encounterconditionvaluemap_stddev_samp_fields\\r\\n  sum: pokemon_v2_encounterconditionvaluemap_sum_fields\\r\\n  var_pop: pokemon_v2_encounterconditionvaluemap_var_pop_fields\\r\\n  var_samp: pokemon_v2_encounterconditionvaluemap_var_samp_fields\\r\\n  variance: pokemon_v2_encounterconditionvaluemap_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_aggregate_order_by {\\r\\n  avg: pokemon_v2_encounterconditionvaluemap_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_encounterconditionvaluemap_max_order_by\\r\\n  min: pokemon_v2_encounterconditionvaluemap_min_order_by\\r\\n  stddev: pokemon_v2_encounterconditionvaluemap_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_encounterconditionvaluemap_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_encounterconditionvaluemap_stddev_samp_order_by\\r\\n  sum: pokemon_v2_encounterconditionvaluemap_sum_order_by\\r\\n  var_pop: pokemon_v2_encounterconditionvaluemap_var_pop_order_by\\r\\n  var_samp: pokemon_v2_encounterconditionvaluemap_var_samp_order_by\\r\\n  variance: pokemon_v2_encounterconditionvaluemap_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_avg_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  encounter_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_avg_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encounterconditionvaluemap_bool_exp {\\r\\n  _and: [pokemon_v2_encounterconditionvaluemap_bool_exp!]\\r\\n  _not: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  _or: [pokemon_v2_encounterconditionvaluemap_bool_exp!]\\r\\n  encounter_condition_value_id: Int_comparison_exp\\r\\n  encounter_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_encounter: pokemon_v2_encounter_bool_exp\\r\\n  pokemon_v2_encounterconditionvalue: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_max_fields {\\r\\n  encounter_condition_value_id: Int\\r\\n  encounter_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_max_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_min_fields {\\r\\n  encounter_condition_value_id: Int\\r\\n  encounter_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_min_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\".\\r\\ninput pokemon_v2_encounterconditionvaluemap_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_encounter: pokemon_v2_encounter_order_by\\r\\n  pokemon_v2_encounterconditionvalue: pokemon_v2_encounterconditionvalue_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\nenum pokemon_v2_encounterconditionvaluemap_select_column {\\r\\n  # column name\\r\\n  encounter_condition_value_id\\r\\n  # column name\\r\\n  encounter_id\\r\\n  # column name\\r\\n  id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_stddev_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  encounter_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_stddev_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_stddev_pop_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  encounter_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_stddev_pop_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_stddev_samp_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  encounter_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_stddev_samp_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_sum_fields {\\r\\n  encounter_condition_value_id: Int\\r\\n  encounter_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_sum_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_var_pop_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  encounter_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_var_pop_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_var_samp_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  encounter_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_var_samp_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encounterconditionvaluemap_variance_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  encounter_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluemap_variance_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  encounter_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvaluename {\\r\\n  encounter_condition_value_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_encounterconditionvalue: pokemon_v2_encounterconditionvalue\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvaluename_aggregate {\\r\\n  aggregate: pokemon_v2_encounterconditionvaluename_aggregate_fields\\r\\n  nodes: [pokemon_v2_encounterconditionvaluename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ntype pokemon_v2_encounterconditionvaluename_aggregate_fields {\\r\\n  avg: pokemon_v2_encounterconditionvaluename_avg_fields\\r\\n  count(columns: [pokemon_v2_encounterconditionvaluename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encounterconditionvaluename_max_fields\\r\\n  min: pokemon_v2_encounterconditionvaluename_min_fields\\r\\n  stddev: pokemon_v2_encounterconditionvaluename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encounterconditionvaluename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encounterconditionvaluename_stddev_samp_fields\\r\\n  sum: pokemon_v2_encounterconditionvaluename_sum_fields\\r\\n  var_pop: pokemon_v2_encounterconditionvaluename_var_pop_fields\\r\\n  var_samp: pokemon_v2_encounterconditionvaluename_var_samp_fields\\r\\n  variance: pokemon_v2_encounterconditionvaluename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_aggregate_order_by {\\r\\n  avg: pokemon_v2_encounterconditionvaluename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_encounterconditionvaluename_max_order_by\\r\\n  min: pokemon_v2_encounterconditionvaluename_min_order_by\\r\\n  stddev: pokemon_v2_encounterconditionvaluename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_encounterconditionvaluename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_encounterconditionvaluename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_encounterconditionvaluename_sum_order_by\\r\\n  var_pop: pokemon_v2_encounterconditionvaluename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_encounterconditionvaluename_var_samp_order_by\\r\\n  variance: pokemon_v2_encounterconditionvaluename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_avg_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_avg_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encounterconditionvaluename_bool_exp {\\r\\n  _and: [pokemon_v2_encounterconditionvaluename_bool_exp!]\\r\\n  _not: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  _or: [pokemon_v2_encounterconditionvaluename_bool_exp!]\\r\\n  encounter_condition_value_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_encounterconditionvalue: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_max_fields {\\r\\n  encounter_condition_value_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_max_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_min_fields {\\r\\n  encounter_condition_value_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_min_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\".\\r\\ninput pokemon_v2_encounterconditionvaluename_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_encounterconditionvalue: pokemon_v2_encounterconditionvalue_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\nenum pokemon_v2_encounterconditionvaluename_select_column {\\r\\n  # column name\\r\\n  encounter_condition_value_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_stddev_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_stddev_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_stddev_pop_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_stddev_pop_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_stddev_samp_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_stddev_samp_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_sum_fields {\\r\\n  encounter_condition_value_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_sum_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_var_pop_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_var_pop_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_var_samp_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_var_samp_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encounterconditionvaluename_variance_fields {\\r\\n  encounter_condition_value_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\ninput pokemon_v2_encounterconditionvaluename_variance_order_by {\\r\\n  encounter_condition_value_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\ntype pokemon_v2_encountermethod {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  order: Int\\r\\n  # An array relationship\\r\\n  pokemon_v2_encountermethodnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): [pokemon_v2_encountermethodname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encountermethodnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): pokemon_v2_encountermethodname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterslots(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): [pokemon_v2_encounterslot!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterslots_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): pokemon_v2_encounterslot_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationareaencounterrates(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): [pokemon_v2_locationareaencounterrate!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationareaencounterrates_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): pokemon_v2_locationareaencounterrate_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\ntype pokemon_v2_encountermethod_aggregate {\\r\\n  aggregate: pokemon_v2_encountermethod_aggregate_fields\\r\\n  nodes: [pokemon_v2_encountermethod!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\ntype pokemon_v2_encountermethod_aggregate_fields {\\r\\n  avg: pokemon_v2_encountermethod_avg_fields\\r\\n  count(columns: [pokemon_v2_encountermethod_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encountermethod_max_fields\\r\\n  min: pokemon_v2_encountermethod_min_fields\\r\\n  stddev: pokemon_v2_encountermethod_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encountermethod_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encountermethod_stddev_samp_fields\\r\\n  sum: pokemon_v2_encountermethod_sum_fields\\r\\n  var_pop: pokemon_v2_encountermethod_var_pop_fields\\r\\n  var_samp: pokemon_v2_encountermethod_var_samp_fields\\r\\n  variance: pokemon_v2_encountermethod_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encountermethod_avg_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encountermethod\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encountermethod_bool_exp {\\r\\n  _and: [pokemon_v2_encountermethod_bool_exp!]\\r\\n  _not: pokemon_v2_encountermethod_bool_exp\\r\\n  _or: [pokemon_v2_encountermethod_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  order: Int_comparison_exp\\r\\n  pokemon_v2_encountermethodnames: pokemon_v2_encountermethodname_bool_exp\\r\\n  pokemon_v2_encounterslots: pokemon_v2_encounterslot_bool_exp\\r\\n  pokemon_v2_locationareaencounterrates: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encountermethod_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encountermethod_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encountermethod\\\\\\\".\\r\\ninput pokemon_v2_encountermethod_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_v2_encountermethodnames_aggregate: pokemon_v2_encountermethodname_aggregate_order_by\\r\\n  pokemon_v2_encounterslots_aggregate: pokemon_v2_encounterslot_aggregate_order_by\\r\\n  pokemon_v2_locationareaencounterrates_aggregate: pokemon_v2_locationareaencounterrate_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\nenum pokemon_v2_encountermethod_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  order\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encountermethod_stddev_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encountermethod_stddev_pop_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encountermethod_stddev_samp_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encountermethod_sum_fields {\\r\\n  id: Int\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encountermethod_var_pop_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encountermethod_var_samp_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encountermethod_variance_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ntype pokemon_v2_encountermethodname {\\r\\n  encounter_method_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ntype pokemon_v2_encountermethodname_aggregate {\\r\\n  aggregate: pokemon_v2_encountermethodname_aggregate_fields\\r\\n  nodes: [pokemon_v2_encountermethodname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ntype pokemon_v2_encountermethodname_aggregate_fields {\\r\\n  avg: pokemon_v2_encountermethodname_avg_fields\\r\\n  count(columns: [pokemon_v2_encountermethodname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encountermethodname_max_fields\\r\\n  min: pokemon_v2_encountermethodname_min_fields\\r\\n  stddev: pokemon_v2_encountermethodname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encountermethodname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encountermethodname_stddev_samp_fields\\r\\n  sum: pokemon_v2_encountermethodname_sum_fields\\r\\n  var_pop: pokemon_v2_encountermethodname_var_pop_fields\\r\\n  var_samp: pokemon_v2_encountermethodname_var_samp_fields\\r\\n  variance: pokemon_v2_encountermethodname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_aggregate_order_by {\\r\\n  avg: pokemon_v2_encountermethodname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_encountermethodname_max_order_by\\r\\n  min: pokemon_v2_encountermethodname_min_order_by\\r\\n  stddev: pokemon_v2_encountermethodname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_encountermethodname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_encountermethodname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_encountermethodname_sum_order_by\\r\\n  var_pop: pokemon_v2_encountermethodname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_encountermethodname_var_samp_order_by\\r\\n  variance: pokemon_v2_encountermethodname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encountermethodname_avg_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_avg_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encountermethodname_bool_exp {\\r\\n  _and: [pokemon_v2_encountermethodname_bool_exp!]\\r\\n  _not: pokemon_v2_encountermethodname_bool_exp\\r\\n  _or: [pokemon_v2_encountermethodname_bool_exp!]\\r\\n  encounter_method_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encountermethodname_max_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_max_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encountermethodname_min_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_min_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encountermethodname\\\\\\\".\\r\\ninput pokemon_v2_encountermethodname_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\nenum pokemon_v2_encountermethodname_select_column {\\r\\n  # column name\\r\\n  encounter_method_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encountermethodname_stddev_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_stddev_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encountermethodname_stddev_pop_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_stddev_pop_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encountermethodname_stddev_samp_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_stddev_samp_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encountermethodname_sum_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_sum_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encountermethodname_var_pop_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_var_pop_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encountermethodname_var_samp_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_var_samp_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encountermethodname_variance_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\ninput pokemon_v2_encountermethodname_variance_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ntype pokemon_v2_encounterslot {\\r\\n  encounter_method_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounters(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): [pokemon_v2_encounter!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounters_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): pokemon_v2_encounter_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  rarity: Int!\\r\\n  slot: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ntype pokemon_v2_encounterslot_aggregate {\\r\\n  aggregate: pokemon_v2_encounterslot_aggregate_fields\\r\\n  nodes: [pokemon_v2_encounterslot!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ntype pokemon_v2_encounterslot_aggregate_fields {\\r\\n  avg: pokemon_v2_encounterslot_avg_fields\\r\\n  count(columns: [pokemon_v2_encounterslot_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_encounterslot_max_fields\\r\\n  min: pokemon_v2_encounterslot_min_fields\\r\\n  stddev: pokemon_v2_encounterslot_stddev_fields\\r\\n  stddev_pop: pokemon_v2_encounterslot_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_encounterslot_stddev_samp_fields\\r\\n  sum: pokemon_v2_encounterslot_sum_fields\\r\\n  var_pop: pokemon_v2_encounterslot_var_pop_fields\\r\\n  var_samp: pokemon_v2_encounterslot_var_samp_fields\\r\\n  variance: pokemon_v2_encounterslot_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_aggregate_order_by {\\r\\n  avg: pokemon_v2_encounterslot_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_encounterslot_max_order_by\\r\\n  min: pokemon_v2_encounterslot_min_order_by\\r\\n  stddev: pokemon_v2_encounterslot_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_encounterslot_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_encounterslot_stddev_samp_order_by\\r\\n  sum: pokemon_v2_encounterslot_sum_order_by\\r\\n  var_pop: pokemon_v2_encounterslot_var_pop_order_by\\r\\n  var_samp: pokemon_v2_encounterslot_var_samp_order_by\\r\\n  variance: pokemon_v2_encounterslot_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_encounterslot_avg_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  rarity: Float\\r\\n  slot: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_avg_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_encounterslot\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_encounterslot_bool_exp {\\r\\n  _and: [pokemon_v2_encounterslot_bool_exp!]\\r\\n  _not: pokemon_v2_encounterslot_bool_exp\\r\\n  _or: [pokemon_v2_encounterslot_bool_exp!]\\r\\n  encounter_method_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod_bool_exp\\r\\n  pokemon_v2_encounters: pokemon_v2_encounter_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  rarity: Int_comparison_exp\\r\\n  slot: Int_comparison_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_encounterslot_max_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  rarity: Int\\r\\n  slot: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_max_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_encounterslot_min_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  rarity: Int\\r\\n  slot: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_min_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_encounterslot\\\\\\\".\\r\\ninput pokemon_v2_encounterslot_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod_order_by\\r\\n  pokemon_v2_encounters_aggregate: pokemon_v2_encounter_aggregate_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\nenum pokemon_v2_encounterslot_select_column {\\r\\n  # column name\\r\\n  encounter_method_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  rarity\\r\\n  # column name\\r\\n  slot\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_encounterslot_stddev_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  rarity: Float\\r\\n  slot: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_stddev_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_encounterslot_stddev_pop_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  rarity: Float\\r\\n  slot: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_stddev_pop_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_encounterslot_stddev_samp_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  rarity: Float\\r\\n  slot: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_stddev_samp_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_encounterslot_sum_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  rarity: Int\\r\\n  slot: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_sum_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_encounterslot_var_pop_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  rarity: Float\\r\\n  slot: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_var_pop_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_encounterslot_var_samp_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  rarity: Float\\r\\n  slot: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_var_samp_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_encounterslot_variance_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  rarity: Float\\r\\n  slot: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\ninput pokemon_v2_encounterslot_variance_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  rarity: order_by\\r\\n  slot: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ntype pokemon_v2_evolutionchain {\\r\\n  baby_trigger_item_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ntype pokemon_v2_evolutionchain_aggregate {\\r\\n  aggregate: pokemon_v2_evolutionchain_aggregate_fields\\r\\n  nodes: [pokemon_v2_evolutionchain!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ntype pokemon_v2_evolutionchain_aggregate_fields {\\r\\n  avg: pokemon_v2_evolutionchain_avg_fields\\r\\n  count(columns: [pokemon_v2_evolutionchain_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_evolutionchain_max_fields\\r\\n  min: pokemon_v2_evolutionchain_min_fields\\r\\n  stddev: pokemon_v2_evolutionchain_stddev_fields\\r\\n  stddev_pop: pokemon_v2_evolutionchain_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_evolutionchain_stddev_samp_fields\\r\\n  sum: pokemon_v2_evolutionchain_sum_fields\\r\\n  var_pop: pokemon_v2_evolutionchain_var_pop_fields\\r\\n  var_samp: pokemon_v2_evolutionchain_var_samp_fields\\r\\n  variance: pokemon_v2_evolutionchain_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_aggregate_order_by {\\r\\n  avg: pokemon_v2_evolutionchain_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_evolutionchain_max_order_by\\r\\n  min: pokemon_v2_evolutionchain_min_order_by\\r\\n  stddev: pokemon_v2_evolutionchain_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_evolutionchain_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_evolutionchain_stddev_samp_order_by\\r\\n  sum: pokemon_v2_evolutionchain_sum_order_by\\r\\n  var_pop: pokemon_v2_evolutionchain_var_pop_order_by\\r\\n  var_samp: pokemon_v2_evolutionchain_var_samp_order_by\\r\\n  variance: pokemon_v2_evolutionchain_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_evolutionchain_avg_fields {\\r\\n  baby_trigger_item_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_avg_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_evolutionchain_bool_exp {\\r\\n  _and: [pokemon_v2_evolutionchain_bool_exp!]\\r\\n  _not: pokemon_v2_evolutionchain_bool_exp\\r\\n  _or: [pokemon_v2_evolutionchain_bool_exp!]\\r\\n  baby_trigger_item_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_pokemonspecies: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_evolutionchain_max_fields {\\r\\n  baby_trigger_item_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_max_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_evolutionchain_min_fields {\\r\\n  baby_trigger_item_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_min_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_evolutionchain\\\\\\\".\\r\\ninput pokemon_v2_evolutionchain_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_pokemonspecies_aggregate: pokemon_v2_pokemonspecies_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\nenum pokemon_v2_evolutionchain_select_column {\\r\\n  # column name\\r\\n  baby_trigger_item_id\\r\\n  # column name\\r\\n  id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_evolutionchain_stddev_fields {\\r\\n  baby_trigger_item_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_stddev_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_evolutionchain_stddev_pop_fields {\\r\\n  baby_trigger_item_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_stddev_pop_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_evolutionchain_stddev_samp_fields {\\r\\n  baby_trigger_item_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_stddev_samp_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_evolutionchain_sum_fields {\\r\\n  baby_trigger_item_id: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_sum_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_evolutionchain_var_pop_fields {\\r\\n  baby_trigger_item_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_var_pop_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_evolutionchain_var_samp_fields {\\r\\n  baby_trigger_item_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_var_samp_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_evolutionchain_variance_fields {\\r\\n  baby_trigger_item_id: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\ninput pokemon_v2_evolutionchain_variance_order_by {\\r\\n  baby_trigger_item_id: order_by\\r\\n  id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\ntype pokemon_v2_evolutiontrigger {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_evolutiontriggernames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): [pokemon_v2_evolutiontriggername!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_evolutiontriggernames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): pokemon_v2_evolutiontriggername_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonevolutions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonevolutions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\ntype pokemon_v2_evolutiontrigger_aggregate {\\r\\n  aggregate: pokemon_v2_evolutiontrigger_aggregate_fields\\r\\n  nodes: [pokemon_v2_evolutiontrigger!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\ntype pokemon_v2_evolutiontrigger_aggregate_fields {\\r\\n  avg: pokemon_v2_evolutiontrigger_avg_fields\\r\\n  count(columns: [pokemon_v2_evolutiontrigger_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_evolutiontrigger_max_fields\\r\\n  min: pokemon_v2_evolutiontrigger_min_fields\\r\\n  stddev: pokemon_v2_evolutiontrigger_stddev_fields\\r\\n  stddev_pop: pokemon_v2_evolutiontrigger_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_evolutiontrigger_stddev_samp_fields\\r\\n  sum: pokemon_v2_evolutiontrigger_sum_fields\\r\\n  var_pop: pokemon_v2_evolutiontrigger_var_pop_fields\\r\\n  var_samp: pokemon_v2_evolutiontrigger_var_samp_fields\\r\\n  variance: pokemon_v2_evolutiontrigger_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_evolutiontrigger_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_evolutiontrigger_bool_exp {\\r\\n  _and: [pokemon_v2_evolutiontrigger_bool_exp!]\\r\\n  _not: pokemon_v2_evolutiontrigger_bool_exp\\r\\n  _or: [pokemon_v2_evolutiontrigger_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_evolutiontriggernames: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  pokemon_v2_pokemonevolutions: pokemon_v2_pokemonevolution_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_evolutiontrigger_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_evolutiontrigger_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\".\\r\\ninput pokemon_v2_evolutiontrigger_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_evolutiontriggernames_aggregate: pokemon_v2_evolutiontriggername_aggregate_order_by\\r\\n  pokemon_v2_pokemonevolutions_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\nenum pokemon_v2_evolutiontrigger_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_evolutiontrigger_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_evolutiontrigger_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_evolutiontrigger_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_evolutiontrigger_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_evolutiontrigger_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_evolutiontrigger_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_evolutiontrigger_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ntype pokemon_v2_evolutiontriggername {\\r\\n  evolution_trigger_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_evolutiontrigger: pokemon_v2_evolutiontrigger\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ntype pokemon_v2_evolutiontriggername_aggregate {\\r\\n  aggregate: pokemon_v2_evolutiontriggername_aggregate_fields\\r\\n  nodes: [pokemon_v2_evolutiontriggername!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ntype pokemon_v2_evolutiontriggername_aggregate_fields {\\r\\n  avg: pokemon_v2_evolutiontriggername_avg_fields\\r\\n  count(columns: [pokemon_v2_evolutiontriggername_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_evolutiontriggername_max_fields\\r\\n  min: pokemon_v2_evolutiontriggername_min_fields\\r\\n  stddev: pokemon_v2_evolutiontriggername_stddev_fields\\r\\n  stddev_pop: pokemon_v2_evolutiontriggername_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_evolutiontriggername_stddev_samp_fields\\r\\n  sum: pokemon_v2_evolutiontriggername_sum_fields\\r\\n  var_pop: pokemon_v2_evolutiontriggername_var_pop_fields\\r\\n  var_samp: pokemon_v2_evolutiontriggername_var_samp_fields\\r\\n  variance: pokemon_v2_evolutiontriggername_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_aggregate_order_by {\\r\\n  avg: pokemon_v2_evolutiontriggername_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_evolutiontriggername_max_order_by\\r\\n  min: pokemon_v2_evolutiontriggername_min_order_by\\r\\n  stddev: pokemon_v2_evolutiontriggername_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_evolutiontriggername_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_evolutiontriggername_stddev_samp_order_by\\r\\n  sum: pokemon_v2_evolutiontriggername_sum_order_by\\r\\n  var_pop: pokemon_v2_evolutiontriggername_var_pop_order_by\\r\\n  var_samp: pokemon_v2_evolutiontriggername_var_samp_order_by\\r\\n  variance: pokemon_v2_evolutiontriggername_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_evolutiontriggername_avg_fields {\\r\\n  evolution_trigger_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_avg_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_evolutiontriggername_bool_exp {\\r\\n  _and: [pokemon_v2_evolutiontriggername_bool_exp!]\\r\\n  _not: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  _or: [pokemon_v2_evolutiontriggername_bool_exp!]\\r\\n  evolution_trigger_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_evolutiontrigger: pokemon_v2_evolutiontrigger_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_evolutiontriggername_max_fields {\\r\\n  evolution_trigger_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_max_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_evolutiontriggername_min_fields {\\r\\n  evolution_trigger_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_min_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\".\\r\\ninput pokemon_v2_evolutiontriggername_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_evolutiontrigger: pokemon_v2_evolutiontrigger_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\nenum pokemon_v2_evolutiontriggername_select_column {\\r\\n  # column name\\r\\n  evolution_trigger_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_evolutiontriggername_stddev_fields {\\r\\n  evolution_trigger_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_stddev_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_evolutiontriggername_stddev_pop_fields {\\r\\n  evolution_trigger_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_stddev_pop_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_evolutiontriggername_stddev_samp_fields {\\r\\n  evolution_trigger_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_stddev_samp_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_evolutiontriggername_sum_fields {\\r\\n  evolution_trigger_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_sum_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_evolutiontriggername_var_pop_fields {\\r\\n  evolution_trigger_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_var_pop_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_evolutiontriggername_var_samp_fields {\\r\\n  evolution_trigger_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_var_samp_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_evolutiontriggername_variance_fields {\\r\\n  evolution_trigger_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\ninput pokemon_v2_evolutiontriggername_variance_order_by {\\r\\n  evolution_trigger_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ntype pokemon_v2_experience {\\r\\n  experience: Int!\\r\\n  growth_rate_id: Int\\r\\n  id: Int!\\r\\n  level: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ntype pokemon_v2_experience_aggregate {\\r\\n  aggregate: pokemon_v2_experience_aggregate_fields\\r\\n  nodes: [pokemon_v2_experience!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ntype pokemon_v2_experience_aggregate_fields {\\r\\n  avg: pokemon_v2_experience_avg_fields\\r\\n  count(columns: [pokemon_v2_experience_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_experience_max_fields\\r\\n  min: pokemon_v2_experience_min_fields\\r\\n  stddev: pokemon_v2_experience_stddev_fields\\r\\n  stddev_pop: pokemon_v2_experience_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_experience_stddev_samp_fields\\r\\n  sum: pokemon_v2_experience_sum_fields\\r\\n  var_pop: pokemon_v2_experience_var_pop_fields\\r\\n  var_samp: pokemon_v2_experience_var_samp_fields\\r\\n  variance: pokemon_v2_experience_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_aggregate_order_by {\\r\\n  avg: pokemon_v2_experience_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_experience_max_order_by\\r\\n  min: pokemon_v2_experience_min_order_by\\r\\n  stddev: pokemon_v2_experience_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_experience_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_experience_stddev_samp_order_by\\r\\n  sum: pokemon_v2_experience_sum_order_by\\r\\n  var_pop: pokemon_v2_experience_var_pop_order_by\\r\\n  var_samp: pokemon_v2_experience_var_samp_order_by\\r\\n  variance: pokemon_v2_experience_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_experience_avg_fields {\\r\\n  experience: Float\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  level: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_avg_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_experience\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_experience_bool_exp {\\r\\n  _and: [pokemon_v2_experience_bool_exp!]\\r\\n  _not: pokemon_v2_experience_bool_exp\\r\\n  _or: [pokemon_v2_experience_bool_exp!]\\r\\n  experience: Int_comparison_exp\\r\\n  growth_rate_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  level: Int_comparison_exp\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_experience_max_fields {\\r\\n  experience: Int\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  level: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_max_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_experience_min_fields {\\r\\n  experience: Int\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  level: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_min_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_experience\\\\\\\".\\r\\ninput pokemon_v2_experience_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\nenum pokemon_v2_experience_select_column {\\r\\n  # column name\\r\\n  experience\\r\\n  # column name\\r\\n  growth_rate_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  level\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_experience_stddev_fields {\\r\\n  experience: Float\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  level: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_stddev_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_experience_stddev_pop_fields {\\r\\n  experience: Float\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  level: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_stddev_pop_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_experience_stddev_samp_fields {\\r\\n  experience: Float\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  level: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_stddev_samp_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_experience_sum_fields {\\r\\n  experience: Int\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  level: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_sum_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_experience_var_pop_fields {\\r\\n  experience: Float\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  level: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_var_pop_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_experience_var_samp_fields {\\r\\n  experience: Float\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  level: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_var_samp_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_experience_variance_fields {\\r\\n  experience: Float\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  level: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\ninput pokemon_v2_experience_variance_order_by {\\r\\n  experience: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\ntype pokemon_v2_gender {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonevolutions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonevolutions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\ntype pokemon_v2_gender_aggregate {\\r\\n  aggregate: pokemon_v2_gender_aggregate_fields\\r\\n  nodes: [pokemon_v2_gender!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\ntype pokemon_v2_gender_aggregate_fields {\\r\\n  avg: pokemon_v2_gender_avg_fields\\r\\n  count(columns: [pokemon_v2_gender_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_gender_max_fields\\r\\n  min: pokemon_v2_gender_min_fields\\r\\n  stddev: pokemon_v2_gender_stddev_fields\\r\\n  stddev_pop: pokemon_v2_gender_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_gender_stddev_samp_fields\\r\\n  sum: pokemon_v2_gender_sum_fields\\r\\n  var_pop: pokemon_v2_gender_var_pop_fields\\r\\n  var_samp: pokemon_v2_gender_var_samp_fields\\r\\n  variance: pokemon_v2_gender_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_gender_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_gender\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_gender_bool_exp {\\r\\n  _and: [pokemon_v2_gender_bool_exp!]\\r\\n  _not: pokemon_v2_gender_bool_exp\\r\\n  _or: [pokemon_v2_gender_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_pokemonevolutions: pokemon_v2_pokemonevolution_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_gender_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_gender_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_gender\\\\\\\".\\r\\ninput pokemon_v2_gender_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_pokemonevolutions_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\nenum pokemon_v2_gender_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_gender_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_gender_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_gender_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_gender_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_gender_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_gender_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_gender_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ntype pokemon_v2_generation {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilities(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_ability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_ability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_ability_bool_exp\\r\\n  ): [pokemon_v2_ability!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilities_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_ability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_ability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_ability_bool_exp\\r\\n  ): pokemon_v2_ability_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_generationnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): [pokemon_v2_generationname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_generationnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): pokemon_v2_generationname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemgameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): [pokemon_v2_itemgameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemgameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): pokemon_v2_itemgameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationgameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): [pokemon_v2_locationgameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationgameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): pokemon_v2_locationgameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformgenerations(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): [pokemon_v2_pokemonformgeneration!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformgenerations_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): pokemon_v2_pokemonformgeneration_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemontypepasts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): [pokemon_v2_pokemontypepast!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemontypepasts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): pokemon_v2_pokemontypepast_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_region: pokemon_v2_region\\r\\n  # An array relationship\\r\\n  pokemon_v2_typegameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): [pokemon_v2_typegameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_typegameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): pokemon_v2_typegameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_types(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): [pokemon_v2_type!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_types_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): pokemon_v2_type_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_versiongroups(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroup_bool_exp\\r\\n  ): [pokemon_v2_versiongroup!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versiongroups_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroup_bool_exp\\r\\n  ): pokemon_v2_versiongroup_aggregate!\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ntype pokemon_v2_generation_aggregate {\\r\\n  aggregate: pokemon_v2_generation_aggregate_fields\\r\\n  nodes: [pokemon_v2_generation!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ntype pokemon_v2_generation_aggregate_fields {\\r\\n  avg: pokemon_v2_generation_avg_fields\\r\\n  count(columns: [pokemon_v2_generation_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_generation_max_fields\\r\\n  min: pokemon_v2_generation_min_fields\\r\\n  stddev: pokemon_v2_generation_stddev_fields\\r\\n  stddev_pop: pokemon_v2_generation_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_generation_stddev_samp_fields\\r\\n  sum: pokemon_v2_generation_sum_fields\\r\\n  var_pop: pokemon_v2_generation_var_pop_fields\\r\\n  var_samp: pokemon_v2_generation_var_samp_fields\\r\\n  variance: pokemon_v2_generation_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_aggregate_order_by {\\r\\n  avg: pokemon_v2_generation_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_generation_max_order_by\\r\\n  min: pokemon_v2_generation_min_order_by\\r\\n  stddev: pokemon_v2_generation_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_generation_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_generation_stddev_samp_order_by\\r\\n  sum: pokemon_v2_generation_sum_order_by\\r\\n  var_pop: pokemon_v2_generation_var_pop_order_by\\r\\n  var_samp: pokemon_v2_generation_var_samp_order_by\\r\\n  variance: pokemon_v2_generation_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_generation_avg_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_avg_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_generation\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_generation_bool_exp {\\r\\n  _and: [pokemon_v2_generation_bool_exp!]\\r\\n  _not: pokemon_v2_generation_bool_exp\\r\\n  _or: [pokemon_v2_generation_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_abilities: pokemon_v2_ability_bool_exp\\r\\n  pokemon_v2_generationnames: pokemon_v2_generationname_bool_exp\\r\\n  pokemon_v2_itemgameindices: pokemon_v2_itemgameindex_bool_exp\\r\\n  pokemon_v2_locationgameindices: pokemon_v2_locationgameindex_bool_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_pokemonformgenerations: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  pokemon_v2_pokemonspecies: pokemon_v2_pokemonspecies_bool_exp\\r\\n  pokemon_v2_pokemontypepasts: pokemon_v2_pokemontypepast_bool_exp\\r\\n  pokemon_v2_region: pokemon_v2_region_bool_exp\\r\\n  pokemon_v2_typegameindices: pokemon_v2_typegameindex_bool_exp\\r\\n  pokemon_v2_types: pokemon_v2_type_bool_exp\\r\\n  pokemon_v2_versiongroups: pokemon_v2_versiongroup_bool_exp\\r\\n  region_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_generation_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_max_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_generation_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_min_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_generation\\\\\\\".\\r\\ninput pokemon_v2_generation_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_abilities_aggregate: pokemon_v2_ability_aggregate_order_by\\r\\n  pokemon_v2_generationnames_aggregate: pokemon_v2_generationname_aggregate_order_by\\r\\n  pokemon_v2_itemgameindices_aggregate: pokemon_v2_itemgameindex_aggregate_order_by\\r\\n  pokemon_v2_locationgameindices_aggregate: pokemon_v2_locationgameindex_aggregate_order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n  pokemon_v2_pokemonformgenerations_aggregate: pokemon_v2_pokemonformgeneration_aggregate_order_by\\r\\n  pokemon_v2_pokemonspecies_aggregate: pokemon_v2_pokemonspecies_aggregate_order_by\\r\\n  pokemon_v2_pokemontypepasts_aggregate: pokemon_v2_pokemontypepast_aggregate_order_by\\r\\n  pokemon_v2_region: pokemon_v2_region_order_by\\r\\n  pokemon_v2_typegameindices_aggregate: pokemon_v2_typegameindex_aggregate_order_by\\r\\n  pokemon_v2_types_aggregate: pokemon_v2_type_aggregate_order_by\\r\\n  pokemon_v2_versiongroups_aggregate: pokemon_v2_versiongroup_aggregate_order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\nenum pokemon_v2_generation_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  region_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_generation_stddev_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_stddev_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_generation_stddev_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_generation_stddev_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_generation_sum_fields {\\r\\n  id: Int\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_sum_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_generation_var_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_var_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_generation_var_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_var_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_generation_variance_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\ninput pokemon_v2_generation_variance_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ntype pokemon_v2_generationname {\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ntype pokemon_v2_generationname_aggregate {\\r\\n  aggregate: pokemon_v2_generationname_aggregate_fields\\r\\n  nodes: [pokemon_v2_generationname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ntype pokemon_v2_generationname_aggregate_fields {\\r\\n  avg: pokemon_v2_generationname_avg_fields\\r\\n  count(columns: [pokemon_v2_generationname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_generationname_max_fields\\r\\n  min: pokemon_v2_generationname_min_fields\\r\\n  stddev: pokemon_v2_generationname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_generationname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_generationname_stddev_samp_fields\\r\\n  sum: pokemon_v2_generationname_sum_fields\\r\\n  var_pop: pokemon_v2_generationname_var_pop_fields\\r\\n  var_samp: pokemon_v2_generationname_var_samp_fields\\r\\n  variance: pokemon_v2_generationname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_aggregate_order_by {\\r\\n  avg: pokemon_v2_generationname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_generationname_max_order_by\\r\\n  min: pokemon_v2_generationname_min_order_by\\r\\n  stddev: pokemon_v2_generationname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_generationname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_generationname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_generationname_sum_order_by\\r\\n  var_pop: pokemon_v2_generationname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_generationname_var_samp_order_by\\r\\n  variance: pokemon_v2_generationname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_generationname_avg_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_avg_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_generationname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_generationname_bool_exp {\\r\\n  _and: [pokemon_v2_generationname_bool_exp!]\\r\\n  _not: pokemon_v2_generationname_bool_exp\\r\\n  _or: [pokemon_v2_generationname_bool_exp!]\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_generationname_max_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_max_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_generationname_min_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_min_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_generationname\\\\\\\".\\r\\ninput pokemon_v2_generationname_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\nenum pokemon_v2_generationname_select_column {\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_generationname_stddev_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_stddev_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_generationname_stddev_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_stddev_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_generationname_stddev_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_stddev_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_generationname_sum_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_sum_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_generationname_var_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_var_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_generationname_var_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_var_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_generationname_variance_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\ninput pokemon_v2_generationname_variance_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\ntype pokemon_v2_growthrate {\\r\\n  formula: String!\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_experiences(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_experience_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_experience_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_experience_bool_exp\\r\\n  ): [pokemon_v2_experience!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_experiences_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_experience_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_experience_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_experience_bool_exp\\r\\n  ): pokemon_v2_experience_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_growthratedescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): [pokemon_v2_growthratedescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_growthratedescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): pokemon_v2_growthratedescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_machines(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): [pokemon_v2_machine!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_machines_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): pokemon_v2_machine_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\ntype pokemon_v2_growthrate_aggregate {\\r\\n  aggregate: pokemon_v2_growthrate_aggregate_fields\\r\\n  nodes: [pokemon_v2_growthrate!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\ntype pokemon_v2_growthrate_aggregate_fields {\\r\\n  avg: pokemon_v2_growthrate_avg_fields\\r\\n  count(columns: [pokemon_v2_growthrate_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_growthrate_max_fields\\r\\n  min: pokemon_v2_growthrate_min_fields\\r\\n  stddev: pokemon_v2_growthrate_stddev_fields\\r\\n  stddev_pop: pokemon_v2_growthrate_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_growthrate_stddev_samp_fields\\r\\n  sum: pokemon_v2_growthrate_sum_fields\\r\\n  var_pop: pokemon_v2_growthrate_var_pop_fields\\r\\n  var_samp: pokemon_v2_growthrate_var_samp_fields\\r\\n  variance: pokemon_v2_growthrate_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_growthrate_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_growthrate\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_growthrate_bool_exp {\\r\\n  _and: [pokemon_v2_growthrate_bool_exp!]\\r\\n  _not: pokemon_v2_growthrate_bool_exp\\r\\n  _or: [pokemon_v2_growthrate_bool_exp!]\\r\\n  formula: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_experiences: pokemon_v2_experience_bool_exp\\r\\n  pokemon_v2_growthratedescriptions: pokemon_v2_growthratedescription_bool_exp\\r\\n  pokemon_v2_machines: pokemon_v2_machine_bool_exp\\r\\n  pokemon_v2_pokemonspecies: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_growthrate_max_fields {\\r\\n  formula: String\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_growthrate_min_fields {\\r\\n  formula: String\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_growthrate\\\\\\\".\\r\\ninput pokemon_v2_growthrate_order_by {\\r\\n  formula: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_experiences_aggregate: pokemon_v2_experience_aggregate_order_by\\r\\n  pokemon_v2_growthratedescriptions_aggregate: pokemon_v2_growthratedescription_aggregate_order_by\\r\\n  pokemon_v2_machines_aggregate: pokemon_v2_machine_aggregate_order_by\\r\\n  pokemon_v2_pokemonspecies_aggregate: pokemon_v2_pokemonspecies_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\nenum pokemon_v2_growthrate_select_column {\\r\\n  # column name\\r\\n  formula\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_growthrate_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_growthrate_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_growthrate_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_growthrate_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_growthrate_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_growthrate_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_growthrate_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ntype pokemon_v2_growthratedescription {\\r\\n  description: String!\\r\\n  growth_rate_id: Int\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ntype pokemon_v2_growthratedescription_aggregate {\\r\\n  aggregate: pokemon_v2_growthratedescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_growthratedescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ntype pokemon_v2_growthratedescription_aggregate_fields {\\r\\n  avg: pokemon_v2_growthratedescription_avg_fields\\r\\n  count(columns: [pokemon_v2_growthratedescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_growthratedescription_max_fields\\r\\n  min: pokemon_v2_growthratedescription_min_fields\\r\\n  stddev: pokemon_v2_growthratedescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_growthratedescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_growthratedescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_growthratedescription_sum_fields\\r\\n  var_pop: pokemon_v2_growthratedescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_growthratedescription_var_samp_fields\\r\\n  variance: pokemon_v2_growthratedescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_growthratedescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_growthratedescription_max_order_by\\r\\n  min: pokemon_v2_growthratedescription_min_order_by\\r\\n  stddev: pokemon_v2_growthratedescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_growthratedescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_growthratedescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_growthratedescription_sum_order_by\\r\\n  var_pop: pokemon_v2_growthratedescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_growthratedescription_var_samp_order_by\\r\\n  variance: pokemon_v2_growthratedescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_growthratedescription_avg_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_avg_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_growthratedescription_bool_exp {\\r\\n  _and: [pokemon_v2_growthratedescription_bool_exp!]\\r\\n  _not: pokemon_v2_growthratedescription_bool_exp\\r\\n  _or: [pokemon_v2_growthratedescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  growth_rate_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_growthratedescription_max_fields {\\r\\n  description: String\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_max_order_by {\\r\\n  description: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_growthratedescription_min_fields {\\r\\n  description: String\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_min_order_by {\\r\\n  description: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_growthratedescription\\\\\\\".\\r\\ninput pokemon_v2_growthratedescription_order_by {\\r\\n  description: order_by\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\nenum pokemon_v2_growthratedescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  growth_rate_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_growthratedescription_stddev_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_stddev_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_growthratedescription_stddev_pop_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_stddev_pop_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_growthratedescription_stddev_samp_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_stddev_samp_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_growthratedescription_sum_fields {\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_sum_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_growthratedescription_var_pop_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_var_pop_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_growthratedescription_var_samp_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_var_samp_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_growthratedescription_variance_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\ninput pokemon_v2_growthratedescription_variance_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ntype pokemon_v2_item {\\r\\n  cost: Int\\r\\n  fling_power: Int\\r\\n  id: Int!\\r\\n  item_category_id: Int\\r\\n  item_fling_effect_id: Int\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemonV2PokemonevolutionsByHeldItemId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2PokemonevolutionsByHeldItemId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berries(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): [pokemon_v2_berry!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berries_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): pokemon_v2_berry_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_evolutionchains(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutionchain_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutionchain_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutionchain_bool_exp\\r\\n  ): [pokemon_v2_evolutionchain!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_evolutionchains_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutionchain_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutionchain_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutionchain_bool_exp\\r\\n  ): pokemon_v2_evolutionchain_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemattributemaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): [pokemon_v2_itemattributemap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemattributemaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): pokemon_v2_itemattributemap_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_itemcategory: pokemon_v2_itemcategory\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): pokemon_v2_itemeffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): [pokemon_v2_itemflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): pokemon_v2_itemflavortext_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_itemflingeffect: pokemon_v2_itemflingeffect\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemgameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): [pokemon_v2_itemgameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemgameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): pokemon_v2_itemgameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): [pokemon_v2_itemname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): pokemon_v2_itemname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemsprites_bool_exp\\r\\n  ): [pokemon_v2_itemsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemsprites_bool_exp\\r\\n  ): pokemon_v2_itemsprites_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_machines(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): [pokemon_v2_machine!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_machines_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): pokemon_v2_machine_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonevolutions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonevolutions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonitems(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): [pokemon_v2_pokemonitem!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonitems_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): pokemon_v2_pokemonitem_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ntype pokemon_v2_item_aggregate {\\r\\n  aggregate: pokemon_v2_item_aggregate_fields\\r\\n  nodes: [pokemon_v2_item!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ntype pokemon_v2_item_aggregate_fields {\\r\\n  avg: pokemon_v2_item_avg_fields\\r\\n  count(columns: [pokemon_v2_item_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_item_max_fields\\r\\n  min: pokemon_v2_item_min_fields\\r\\n  stddev: pokemon_v2_item_stddev_fields\\r\\n  stddev_pop: pokemon_v2_item_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_item_stddev_samp_fields\\r\\n  sum: pokemon_v2_item_sum_fields\\r\\n  var_pop: pokemon_v2_item_var_pop_fields\\r\\n  var_samp: pokemon_v2_item_var_samp_fields\\r\\n  variance: pokemon_v2_item_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_aggregate_order_by {\\r\\n  avg: pokemon_v2_item_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_item_max_order_by\\r\\n  min: pokemon_v2_item_min_order_by\\r\\n  stddev: pokemon_v2_item_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_item_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_item_stddev_samp_order_by\\r\\n  sum: pokemon_v2_item_sum_order_by\\r\\n  var_pop: pokemon_v2_item_var_pop_order_by\\r\\n  var_samp: pokemon_v2_item_var_samp_order_by\\r\\n  variance: pokemon_v2_item_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_item_avg_fields {\\r\\n  cost: Float\\r\\n  fling_power: Float\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  item_fling_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_avg_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_item\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_item_bool_exp {\\r\\n  _and: [pokemon_v2_item_bool_exp!]\\r\\n  _not: pokemon_v2_item_bool_exp\\r\\n  _or: [pokemon_v2_item_bool_exp!]\\r\\n  cost: Int_comparison_exp\\r\\n  fling_power: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_category_id: Int_comparison_exp\\r\\n  item_fling_effect_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemonV2PokemonevolutionsByHeldItemId: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemon_v2_berries: pokemon_v2_berry_bool_exp\\r\\n  pokemon_v2_evolutionchains: pokemon_v2_evolutionchain_bool_exp\\r\\n  pokemon_v2_itemattributemaps: pokemon_v2_itemattributemap_bool_exp\\r\\n  pokemon_v2_itemcategory: pokemon_v2_itemcategory_bool_exp\\r\\n  pokemon_v2_itemeffecttexts: pokemon_v2_itemeffecttext_bool_exp\\r\\n  pokemon_v2_itemflavortexts: pokemon_v2_itemflavortext_bool_exp\\r\\n  pokemon_v2_itemflingeffect: pokemon_v2_itemflingeffect_bool_exp\\r\\n  pokemon_v2_itemgameindices: pokemon_v2_itemgameindex_bool_exp\\r\\n  pokemon_v2_itemnames: pokemon_v2_itemname_bool_exp\\r\\n  pokemon_v2_itemsprites: pokemon_v2_itemsprites_bool_exp\\r\\n  pokemon_v2_machines: pokemon_v2_machine_bool_exp\\r\\n  pokemon_v2_pokemonevolutions: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemon_v2_pokemonitems: pokemon_v2_pokemonitem_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_item_max_fields {\\r\\n  cost: Int\\r\\n  fling_power: Int\\r\\n  id: Int\\r\\n  item_category_id: Int\\r\\n  item_fling_effect_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_max_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_item_min_fields {\\r\\n  cost: Int\\r\\n  fling_power: Int\\r\\n  id: Int\\r\\n  item_category_id: Int\\r\\n  item_fling_effect_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_min_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_item\\\\\\\".\\r\\ninput pokemon_v2_item_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  name: order_by\\r\\n  pokemonV2PokemonevolutionsByHeldItemId_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemon_v2_berries_aggregate: pokemon_v2_berry_aggregate_order_by\\r\\n  pokemon_v2_evolutionchains_aggregate: pokemon_v2_evolutionchain_aggregate_order_by\\r\\n  pokemon_v2_itemattributemaps_aggregate: pokemon_v2_itemattributemap_aggregate_order_by\\r\\n  pokemon_v2_itemcategory: pokemon_v2_itemcategory_order_by\\r\\n  pokemon_v2_itemeffecttexts_aggregate: pokemon_v2_itemeffecttext_aggregate_order_by\\r\\n  pokemon_v2_itemflavortexts_aggregate: pokemon_v2_itemflavortext_aggregate_order_by\\r\\n  pokemon_v2_itemflingeffect: pokemon_v2_itemflingeffect_order_by\\r\\n  pokemon_v2_itemgameindices_aggregate: pokemon_v2_itemgameindex_aggregate_order_by\\r\\n  pokemon_v2_itemnames_aggregate: pokemon_v2_itemname_aggregate_order_by\\r\\n  pokemon_v2_itemsprites_aggregate: pokemon_v2_itemsprites_aggregate_order_by\\r\\n  pokemon_v2_machines_aggregate: pokemon_v2_machine_aggregate_order_by\\r\\n  pokemon_v2_pokemonevolutions_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemon_v2_pokemonitems_aggregate: pokemon_v2_pokemonitem_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\nenum pokemon_v2_item_select_column {\\r\\n  # column name\\r\\n  cost\\r\\n  # column name\\r\\n  fling_power\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_category_id\\r\\n  # column name\\r\\n  item_fling_effect_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_item_stddev_fields {\\r\\n  cost: Float\\r\\n  fling_power: Float\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  item_fling_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_stddev_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_item_stddev_pop_fields {\\r\\n  cost: Float\\r\\n  fling_power: Float\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  item_fling_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_stddev_pop_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_item_stddev_samp_fields {\\r\\n  cost: Float\\r\\n  fling_power: Float\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  item_fling_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_stddev_samp_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_item_sum_fields {\\r\\n  cost: Int\\r\\n  fling_power: Int\\r\\n  id: Int\\r\\n  item_category_id: Int\\r\\n  item_fling_effect_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_sum_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_item_var_pop_fields {\\r\\n  cost: Float\\r\\n  fling_power: Float\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  item_fling_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_var_pop_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_item_var_samp_fields {\\r\\n  cost: Float\\r\\n  fling_power: Float\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  item_fling_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_var_samp_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_item_variance_fields {\\r\\n  cost: Float\\r\\n  fling_power: Float\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  item_fling_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\ninput pokemon_v2_item_variance_order_by {\\r\\n  cost: order_by\\r\\n  fling_power: order_by\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\ntype pokemon_v2_itemattribute {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemattributedescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): [pokemon_v2_itemattributedescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemattributedescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): pokemon_v2_itemattributedescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemattributemaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): [pokemon_v2_itemattributemap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemattributemaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): pokemon_v2_itemattributemap_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemattributenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): [pokemon_v2_itemattributename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemattributenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): pokemon_v2_itemattributename_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\ntype pokemon_v2_itemattribute_aggregate {\\r\\n  aggregate: pokemon_v2_itemattribute_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemattribute!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\ntype pokemon_v2_itemattribute_aggregate_fields {\\r\\n  avg: pokemon_v2_itemattribute_avg_fields\\r\\n  count(columns: [pokemon_v2_itemattribute_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemattribute_max_fields\\r\\n  min: pokemon_v2_itemattribute_min_fields\\r\\n  stddev: pokemon_v2_itemattribute_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemattribute_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemattribute_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemattribute_sum_fields\\r\\n  var_pop: pokemon_v2_itemattribute_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemattribute_var_samp_fields\\r\\n  variance: pokemon_v2_itemattribute_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemattribute_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemattribute\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemattribute_bool_exp {\\r\\n  _and: [pokemon_v2_itemattribute_bool_exp!]\\r\\n  _not: pokemon_v2_itemattribute_bool_exp\\r\\n  _or: [pokemon_v2_itemattribute_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_itemattributedescriptions: pokemon_v2_itemattributedescription_bool_exp\\r\\n  pokemon_v2_itemattributemaps: pokemon_v2_itemattributemap_bool_exp\\r\\n  pokemon_v2_itemattributenames: pokemon_v2_itemattributename_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemattribute_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemattribute_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemattribute\\\\\\\".\\r\\ninput pokemon_v2_itemattribute_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_itemattributedescriptions_aggregate: pokemon_v2_itemattributedescription_aggregate_order_by\\r\\n  pokemon_v2_itemattributemaps_aggregate: pokemon_v2_itemattributemap_aggregate_order_by\\r\\n  pokemon_v2_itemattributenames_aggregate: pokemon_v2_itemattributename_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\nenum pokemon_v2_itemattribute_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemattribute_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemattribute_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemattribute_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemattribute_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemattribute_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemattribute_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemattribute_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ntype pokemon_v2_itemattributedescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ntype pokemon_v2_itemattributedescription_aggregate {\\r\\n  aggregate: pokemon_v2_itemattributedescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemattributedescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ntype pokemon_v2_itemattributedescription_aggregate_fields {\\r\\n  avg: pokemon_v2_itemattributedescription_avg_fields\\r\\n  count(columns: [pokemon_v2_itemattributedescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemattributedescription_max_fields\\r\\n  min: pokemon_v2_itemattributedescription_min_fields\\r\\n  stddev: pokemon_v2_itemattributedescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemattributedescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemattributedescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemattributedescription_sum_fields\\r\\n  var_pop: pokemon_v2_itemattributedescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemattributedescription_var_samp_fields\\r\\n  variance: pokemon_v2_itemattributedescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemattributedescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemattributedescription_max_order_by\\r\\n  min: pokemon_v2_itemattributedescription_min_order_by\\r\\n  stddev: pokemon_v2_itemattributedescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemattributedescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemattributedescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemattributedescription_sum_order_by\\r\\n  var_pop: pokemon_v2_itemattributedescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemattributedescription_var_samp_order_by\\r\\n  variance: pokemon_v2_itemattributedescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemattributedescription_avg_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_avg_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemattributedescription_bool_exp {\\r\\n  _and: [pokemon_v2_itemattributedescription_bool_exp!]\\r\\n  _not: pokemon_v2_itemattributedescription_bool_exp\\r\\n  _or: [pokemon_v2_itemattributedescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_attribute_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemattributedescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemattributedescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\".\\r\\ninput pokemon_v2_itemattributedescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\nenum pokemon_v2_itemattributedescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_attribute_id\\r\\n  # column name\\r\\n  language_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemattributedescription_stddev_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemattributedescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemattributedescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemattributedescription_sum_fields {\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_sum_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemattributedescription_var_pop_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemattributedescription_var_samp_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemattributedescription_variance_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\ninput pokemon_v2_itemattributedescription_variance_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ntype pokemon_v2_itemattributemap {\\r\\n  id: Int!\\r\\n  item_attribute_id: Int\\r\\n  item_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ntype pokemon_v2_itemattributemap_aggregate {\\r\\n  aggregate: pokemon_v2_itemattributemap_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemattributemap!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ntype pokemon_v2_itemattributemap_aggregate_fields {\\r\\n  avg: pokemon_v2_itemattributemap_avg_fields\\r\\n  count(columns: [pokemon_v2_itemattributemap_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemattributemap_max_fields\\r\\n  min: pokemon_v2_itemattributemap_min_fields\\r\\n  stddev: pokemon_v2_itemattributemap_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemattributemap_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemattributemap_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemattributemap_sum_fields\\r\\n  var_pop: pokemon_v2_itemattributemap_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemattributemap_var_samp_fields\\r\\n  variance: pokemon_v2_itemattributemap_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemattributemap_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemattributemap_max_order_by\\r\\n  min: pokemon_v2_itemattributemap_min_order_by\\r\\n  stddev: pokemon_v2_itemattributemap_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemattributemap_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemattributemap_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemattributemap_sum_order_by\\r\\n  var_pop: pokemon_v2_itemattributemap_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemattributemap_var_samp_order_by\\r\\n  variance: pokemon_v2_itemattributemap_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemattributemap_avg_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_avg_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemattributemap_bool_exp {\\r\\n  _and: [pokemon_v2_itemattributemap_bool_exp!]\\r\\n  _not: pokemon_v2_itemattributemap_bool_exp\\r\\n  _or: [pokemon_v2_itemattributemap_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_attribute_id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemattributemap_max_fields {\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  item_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_max_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemattributemap_min_fields {\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  item_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_min_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemattributemap\\\\\\\".\\r\\ninput pokemon_v2_itemattributemap_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\nenum pokemon_v2_itemattributemap_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_attribute_id\\r\\n  # column name\\r\\n  item_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemattributemap_stddev_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemattributemap_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemattributemap_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemattributemap_sum_fields {\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  item_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_sum_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemattributemap_var_pop_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemattributemap_var_samp_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemattributemap_variance_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\ninput pokemon_v2_itemattributemap_variance_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ntype pokemon_v2_itemattributename {\\r\\n  id: Int!\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ntype pokemon_v2_itemattributename_aggregate {\\r\\n  aggregate: pokemon_v2_itemattributename_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemattributename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ntype pokemon_v2_itemattributename_aggregate_fields {\\r\\n  avg: pokemon_v2_itemattributename_avg_fields\\r\\n  count(columns: [pokemon_v2_itemattributename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemattributename_max_fields\\r\\n  min: pokemon_v2_itemattributename_min_fields\\r\\n  stddev: pokemon_v2_itemattributename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemattributename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemattributename_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemattributename_sum_fields\\r\\n  var_pop: pokemon_v2_itemattributename_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemattributename_var_samp_fields\\r\\n  variance: pokemon_v2_itemattributename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemattributename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemattributename_max_order_by\\r\\n  min: pokemon_v2_itemattributename_min_order_by\\r\\n  stddev: pokemon_v2_itemattributename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemattributename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemattributename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemattributename_sum_order_by\\r\\n  var_pop: pokemon_v2_itemattributename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemattributename_var_samp_order_by\\r\\n  variance: pokemon_v2_itemattributename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemattributename_avg_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_avg_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemattributename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemattributename_bool_exp {\\r\\n  _and: [pokemon_v2_itemattributename_bool_exp!]\\r\\n  _not: pokemon_v2_itemattributename_bool_exp\\r\\n  _or: [pokemon_v2_itemattributename_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_attribute_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemattributename_max_fields {\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_max_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemattributename_min_fields {\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_min_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemattributename\\\\\\\".\\r\\ninput pokemon_v2_itemattributename_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_itemattribute: pokemon_v2_itemattribute_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\nenum pokemon_v2_itemattributename_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_attribute_id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemattributename_stddev_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemattributename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemattributename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemattributename_sum_fields {\\r\\n  id: Int\\r\\n  item_attribute_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_sum_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemattributename_var_pop_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemattributename_var_samp_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemattributename_variance_fields {\\r\\n  id: Float\\r\\n  item_attribute_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\ninput pokemon_v2_itemattributename_variance_order_by {\\r\\n  id: order_by\\r\\n  item_attribute_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ntype pokemon_v2_itemcategory {\\r\\n  id: Int!\\r\\n  item_pocket_id: Int\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemcategorynames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): [pokemon_v2_itemcategoryname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemcategorynames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): pokemon_v2_itemcategoryname_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_itempocket: pokemon_v2_itempocket\\r\\n  # An array relationship\\r\\n  pokemon_v2_items(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): [pokemon_v2_item!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_items_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): pokemon_v2_item_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ntype pokemon_v2_itemcategory_aggregate {\\r\\n  aggregate: pokemon_v2_itemcategory_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemcategory!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ntype pokemon_v2_itemcategory_aggregate_fields {\\r\\n  avg: pokemon_v2_itemcategory_avg_fields\\r\\n  count(columns: [pokemon_v2_itemcategory_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemcategory_max_fields\\r\\n  min: pokemon_v2_itemcategory_min_fields\\r\\n  stddev: pokemon_v2_itemcategory_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemcategory_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemcategory_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemcategory_sum_fields\\r\\n  var_pop: pokemon_v2_itemcategory_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemcategory_var_samp_fields\\r\\n  variance: pokemon_v2_itemcategory_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemcategory_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemcategory_max_order_by\\r\\n  min: pokemon_v2_itemcategory_min_order_by\\r\\n  stddev: pokemon_v2_itemcategory_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemcategory_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemcategory_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemcategory_sum_order_by\\r\\n  var_pop: pokemon_v2_itemcategory_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemcategory_var_samp_order_by\\r\\n  variance: pokemon_v2_itemcategory_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemcategory_avg_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_avg_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemcategory\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemcategory_bool_exp {\\r\\n  _and: [pokemon_v2_itemcategory_bool_exp!]\\r\\n  _not: pokemon_v2_itemcategory_bool_exp\\r\\n  _or: [pokemon_v2_itemcategory_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_pocket_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_itemcategorynames: pokemon_v2_itemcategoryname_bool_exp\\r\\n  pokemon_v2_itempocket: pokemon_v2_itempocket_bool_exp\\r\\n  pokemon_v2_items: pokemon_v2_item_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemcategory_max_fields {\\r\\n  id: Int\\r\\n  item_pocket_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_max_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemcategory_min_fields {\\r\\n  id: Int\\r\\n  item_pocket_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_min_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemcategory\\\\\\\".\\r\\ninput pokemon_v2_itemcategory_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_itemcategorynames_aggregate: pokemon_v2_itemcategoryname_aggregate_order_by\\r\\n  pokemon_v2_itempocket: pokemon_v2_itempocket_order_by\\r\\n  pokemon_v2_items_aggregate: pokemon_v2_item_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\nenum pokemon_v2_itemcategory_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_pocket_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemcategory_stddev_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemcategory_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemcategory_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemcategory_sum_fields {\\r\\n  id: Int\\r\\n  item_pocket_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_sum_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemcategory_var_pop_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemcategory_var_samp_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemcategory_variance_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\ninput pokemon_v2_itemcategory_variance_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ntype pokemon_v2_itemcategoryname {\\r\\n  id: Int!\\r\\n  item_category_id: Int\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_itemcategory: pokemon_v2_itemcategory\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ntype pokemon_v2_itemcategoryname_aggregate {\\r\\n  aggregate: pokemon_v2_itemcategoryname_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemcategoryname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ntype pokemon_v2_itemcategoryname_aggregate_fields {\\r\\n  avg: pokemon_v2_itemcategoryname_avg_fields\\r\\n  count(columns: [pokemon_v2_itemcategoryname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemcategoryname_max_fields\\r\\n  min: pokemon_v2_itemcategoryname_min_fields\\r\\n  stddev: pokemon_v2_itemcategoryname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemcategoryname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemcategoryname_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemcategoryname_sum_fields\\r\\n  var_pop: pokemon_v2_itemcategoryname_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemcategoryname_var_samp_fields\\r\\n  variance: pokemon_v2_itemcategoryname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemcategoryname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemcategoryname_max_order_by\\r\\n  min: pokemon_v2_itemcategoryname_min_order_by\\r\\n  stddev: pokemon_v2_itemcategoryname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemcategoryname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemcategoryname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemcategoryname_sum_order_by\\r\\n  var_pop: pokemon_v2_itemcategoryname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemcategoryname_var_samp_order_by\\r\\n  variance: pokemon_v2_itemcategoryname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemcategoryname_avg_fields {\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_avg_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemcategoryname_bool_exp {\\r\\n  _and: [pokemon_v2_itemcategoryname_bool_exp!]\\r\\n  _not: pokemon_v2_itemcategoryname_bool_exp\\r\\n  _or: [pokemon_v2_itemcategoryname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_category_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_itemcategory: pokemon_v2_itemcategory_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemcategoryname_max_fields {\\r\\n  id: Int\\r\\n  item_category_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_max_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemcategoryname_min_fields {\\r\\n  id: Int\\r\\n  item_category_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_min_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\".\\r\\ninput pokemon_v2_itemcategoryname_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_itemcategory: pokemon_v2_itemcategory_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\nenum pokemon_v2_itemcategoryname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_category_id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemcategoryname_stddev_fields {\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemcategoryname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemcategoryname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemcategoryname_sum_fields {\\r\\n  id: Int\\r\\n  item_category_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_sum_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemcategoryname_var_pop_fields {\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemcategoryname_var_samp_fields {\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemcategoryname_variance_fields {\\r\\n  id: Float\\r\\n  item_category_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\ninput pokemon_v2_itemcategoryname_variance_order_by {\\r\\n  id: order_by\\r\\n  item_category_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ntype pokemon_v2_itemeffecttext {\\r\\n  effect: String!\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  short_effect: String!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ntype pokemon_v2_itemeffecttext_aggregate {\\r\\n  aggregate: pokemon_v2_itemeffecttext_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemeffecttext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ntype pokemon_v2_itemeffecttext_aggregate_fields {\\r\\n  avg: pokemon_v2_itemeffecttext_avg_fields\\r\\n  count(columns: [pokemon_v2_itemeffecttext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemeffecttext_max_fields\\r\\n  min: pokemon_v2_itemeffecttext_min_fields\\r\\n  stddev: pokemon_v2_itemeffecttext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemeffecttext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemeffecttext_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemeffecttext_sum_fields\\r\\n  var_pop: pokemon_v2_itemeffecttext_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemeffecttext_var_samp_fields\\r\\n  variance: pokemon_v2_itemeffecttext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemeffecttext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemeffecttext_max_order_by\\r\\n  min: pokemon_v2_itemeffecttext_min_order_by\\r\\n  stddev: pokemon_v2_itemeffecttext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemeffecttext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemeffecttext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemeffecttext_sum_order_by\\r\\n  var_pop: pokemon_v2_itemeffecttext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemeffecttext_var_samp_order_by\\r\\n  variance: pokemon_v2_itemeffecttext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemeffecttext_avg_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_avg_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemeffecttext_bool_exp {\\r\\n  _and: [pokemon_v2_itemeffecttext_bool_exp!]\\r\\n  _not: pokemon_v2_itemeffecttext_bool_exp\\r\\n  _or: [pokemon_v2_itemeffecttext_bool_exp!]\\r\\n  effect: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  short_effect: String_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemeffecttext_max_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  short_effect: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_max_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemeffecttext_min_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  short_effect: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_min_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\".\\r\\ninput pokemon_v2_itemeffecttext_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\nenum pokemon_v2_itemeffecttext_select_column {\\r\\n  # column name\\r\\n  effect\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  short_effect\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemeffecttext_stddev_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemeffecttext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemeffecttext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemeffecttext_sum_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_sum_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemeffecttext_var_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemeffecttext_var_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemeffecttext_variance_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemeffecttext_variance_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ntype pokemon_v2_itemflavortext {\\r\\n  flavor_text: String!\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ntype pokemon_v2_itemflavortext_aggregate {\\r\\n  aggregate: pokemon_v2_itemflavortext_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemflavortext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ntype pokemon_v2_itemflavortext_aggregate_fields {\\r\\n  avg: pokemon_v2_itemflavortext_avg_fields\\r\\n  count(columns: [pokemon_v2_itemflavortext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemflavortext_max_fields\\r\\n  min: pokemon_v2_itemflavortext_min_fields\\r\\n  stddev: pokemon_v2_itemflavortext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemflavortext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemflavortext_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemflavortext_sum_fields\\r\\n  var_pop: pokemon_v2_itemflavortext_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemflavortext_var_samp_fields\\r\\n  variance: pokemon_v2_itemflavortext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemflavortext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemflavortext_max_order_by\\r\\n  min: pokemon_v2_itemflavortext_min_order_by\\r\\n  stddev: pokemon_v2_itemflavortext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemflavortext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemflavortext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemflavortext_sum_order_by\\r\\n  var_pop: pokemon_v2_itemflavortext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemflavortext_var_samp_order_by\\r\\n  variance: pokemon_v2_itemflavortext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemflavortext_avg_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_avg_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemflavortext_bool_exp {\\r\\n  _and: [pokemon_v2_itemflavortext_bool_exp!]\\r\\n  _not: pokemon_v2_itemflavortext_bool_exp\\r\\n  _or: [pokemon_v2_itemflavortext_bool_exp!]\\r\\n  flavor_text: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemflavortext_max_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_max_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemflavortext_min_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_min_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemflavortext\\\\\\\".\\r\\ninput pokemon_v2_itemflavortext_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\nenum pokemon_v2_itemflavortext_select_column {\\r\\n  # column name\\r\\n  flavor_text\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemflavortext_stddev_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemflavortext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemflavortext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemflavortext_sum_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_sum_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemflavortext_var_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemflavortext_var_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemflavortext_variance_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\ninput pokemon_v2_itemflavortext_variance_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\ntype pokemon_v2_itemflingeffect {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemflingeffecteffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemflingeffecteffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemflingeffecteffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_itemflingeffecteffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_items(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): [pokemon_v2_item!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_items_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): pokemon_v2_item_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\ntype pokemon_v2_itemflingeffect_aggregate {\\r\\n  aggregate: pokemon_v2_itemflingeffect_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemflingeffect!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\ntype pokemon_v2_itemflingeffect_aggregate_fields {\\r\\n  avg: pokemon_v2_itemflingeffect_avg_fields\\r\\n  count(columns: [pokemon_v2_itemflingeffect_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemflingeffect_max_fields\\r\\n  min: pokemon_v2_itemflingeffect_min_fields\\r\\n  stddev: pokemon_v2_itemflingeffect_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemflingeffect_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemflingeffect_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemflingeffect_sum_fields\\r\\n  var_pop: pokemon_v2_itemflingeffect_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemflingeffect_var_samp_fields\\r\\n  variance: pokemon_v2_itemflingeffect_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemflingeffect_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemflingeffect_bool_exp {\\r\\n  _and: [pokemon_v2_itemflingeffect_bool_exp!]\\r\\n  _not: pokemon_v2_itemflingeffect_bool_exp\\r\\n  _or: [pokemon_v2_itemflingeffect_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_itemflingeffecteffecttexts: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  pokemon_v2_items: pokemon_v2_item_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemflingeffect_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemflingeffect_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\".\\r\\ninput pokemon_v2_itemflingeffect_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_itemflingeffecteffecttexts_aggregate: pokemon_v2_itemflingeffecteffecttext_aggregate_order_by\\r\\n  pokemon_v2_items_aggregate: pokemon_v2_item_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\nenum pokemon_v2_itemflingeffect_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemflingeffect_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemflingeffect_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemflingeffect_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemflingeffect_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemflingeffect_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemflingeffect_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemflingeffect_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_itemflingeffecteffecttext {\\r\\n  effect: String!\\r\\n  id: Int!\\r\\n  item_fling_effect_id: Int\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_itemflingeffect: pokemon_v2_itemflingeffect\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_itemflingeffecteffecttext_aggregate {\\r\\n  aggregate: pokemon_v2_itemflingeffecteffecttext_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemflingeffecteffecttext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_itemflingeffecteffecttext_aggregate_fields {\\r\\n  avg: pokemon_v2_itemflingeffecteffecttext_avg_fields\\r\\n  count(columns: [pokemon_v2_itemflingeffecteffecttext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemflingeffecteffecttext_max_fields\\r\\n  min: pokemon_v2_itemflingeffecteffecttext_min_fields\\r\\n  stddev: pokemon_v2_itemflingeffecteffecttext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemflingeffecteffecttext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemflingeffecteffecttext_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemflingeffecteffecttext_sum_fields\\r\\n  var_pop: pokemon_v2_itemflingeffecteffecttext_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemflingeffecteffecttext_var_samp_fields\\r\\n  variance: pokemon_v2_itemflingeffecteffecttext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemflingeffecteffecttext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemflingeffecteffecttext_max_order_by\\r\\n  min: pokemon_v2_itemflingeffecteffecttext_min_order_by\\r\\n  stddev: pokemon_v2_itemflingeffecteffecttext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemflingeffecteffecttext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemflingeffecteffecttext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemflingeffecteffecttext_sum_order_by\\r\\n  var_pop: pokemon_v2_itemflingeffecteffecttext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemflingeffecteffecttext_var_samp_order_by\\r\\n  variance: pokemon_v2_itemflingeffecteffecttext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_avg_fields {\\r\\n  id: Float\\r\\n  item_fling_effect_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_avg_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemflingeffecteffecttext_bool_exp {\\r\\n  _and: [pokemon_v2_itemflingeffecteffecttext_bool_exp!]\\r\\n  _not: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  _or: [pokemon_v2_itemflingeffecteffecttext_bool_exp!]\\r\\n  effect: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_fling_effect_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_itemflingeffect: pokemon_v2_itemflingeffect_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_max_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  item_fling_effect_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_max_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_min_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  item_fling_effect_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_min_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\".\\r\\ninput pokemon_v2_itemflingeffecteffecttext_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_itemflingeffect: pokemon_v2_itemflingeffect_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\nenum pokemon_v2_itemflingeffecteffecttext_select_column {\\r\\n  # column name\\r\\n  effect\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_fling_effect_id\\r\\n  # column name\\r\\n  language_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_stddev_fields {\\r\\n  id: Float\\r\\n  item_fling_effect_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_fling_effect_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_fling_effect_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_sum_fields {\\r\\n  id: Int\\r\\n  item_fling_effect_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_sum_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_var_pop_fields {\\r\\n  id: Float\\r\\n  item_fling_effect_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_var_samp_fields {\\r\\n  id: Float\\r\\n  item_fling_effect_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemflingeffecteffecttext_variance_fields {\\r\\n  id: Float\\r\\n  item_fling_effect_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_itemflingeffecteffecttext_variance_order_by {\\r\\n  id: order_by\\r\\n  item_fling_effect_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ntype pokemon_v2_itemgameindex {\\r\\n  game_index: Int!\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ntype pokemon_v2_itemgameindex_aggregate {\\r\\n  aggregate: pokemon_v2_itemgameindex_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemgameindex!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ntype pokemon_v2_itemgameindex_aggregate_fields {\\r\\n  avg: pokemon_v2_itemgameindex_avg_fields\\r\\n  count(columns: [pokemon_v2_itemgameindex_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemgameindex_max_fields\\r\\n  min: pokemon_v2_itemgameindex_min_fields\\r\\n  stddev: pokemon_v2_itemgameindex_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemgameindex_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemgameindex_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemgameindex_sum_fields\\r\\n  var_pop: pokemon_v2_itemgameindex_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemgameindex_var_samp_fields\\r\\n  variance: pokemon_v2_itemgameindex_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemgameindex_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemgameindex_max_order_by\\r\\n  min: pokemon_v2_itemgameindex_min_order_by\\r\\n  stddev: pokemon_v2_itemgameindex_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemgameindex_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemgameindex_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemgameindex_sum_order_by\\r\\n  var_pop: pokemon_v2_itemgameindex_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemgameindex_var_samp_order_by\\r\\n  variance: pokemon_v2_itemgameindex_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemgameindex_avg_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_avg_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemgameindex_bool_exp {\\r\\n  _and: [pokemon_v2_itemgameindex_bool_exp!]\\r\\n  _not: pokemon_v2_itemgameindex_bool_exp\\r\\n  _or: [pokemon_v2_itemgameindex_bool_exp!]\\r\\n  game_index: Int_comparison_exp\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemgameindex_max_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_max_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemgameindex_min_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_min_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemgameindex\\\\\\\".\\r\\ninput pokemon_v2_itemgameindex_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\nenum pokemon_v2_itemgameindex_select_column {\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemgameindex_stddev_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_stddev_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemgameindex_stddev_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_stddev_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemgameindex_stddev_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_stddev_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemgameindex_sum_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_sum_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemgameindex_var_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_var_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemgameindex_var_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_var_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemgameindex_variance_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\ninput pokemon_v2_itemgameindex_variance_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ntype pokemon_v2_itemname {\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ntype pokemon_v2_itemname_aggregate {\\r\\n  aggregate: pokemon_v2_itemname_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ntype pokemon_v2_itemname_aggregate_fields {\\r\\n  avg: pokemon_v2_itemname_avg_fields\\r\\n  count(columns: [pokemon_v2_itemname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemname_max_fields\\r\\n  min: pokemon_v2_itemname_min_fields\\r\\n  stddev: pokemon_v2_itemname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemname_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemname_sum_fields\\r\\n  var_pop: pokemon_v2_itemname_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemname_var_samp_fields\\r\\n  variance: pokemon_v2_itemname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemname_max_order_by\\r\\n  min: pokemon_v2_itemname_min_order_by\\r\\n  stddev: pokemon_v2_itemname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemname_sum_order_by\\r\\n  var_pop: pokemon_v2_itemname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemname_var_samp_order_by\\r\\n  variance: pokemon_v2_itemname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemname_avg_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_avg_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemname_bool_exp {\\r\\n  _and: [pokemon_v2_itemname_bool_exp!]\\r\\n  _not: pokemon_v2_itemname_bool_exp\\r\\n  _or: [pokemon_v2_itemname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemname_max_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_max_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemname_min_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_min_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemname\\\\\\\".\\r\\ninput pokemon_v2_itemname_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\nenum pokemon_v2_itemname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemname_stddev_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemname_sum_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_sum_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemname_var_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemname_var_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemname_variance_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\ninput pokemon_v2_itemname_variance_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\ntype pokemon_v2_itempocket {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemcategories(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategory_bool_exp\\r\\n  ): [pokemon_v2_itemcategory!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemcategories_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategory_bool_exp\\r\\n  ): pokemon_v2_itemcategory_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itempocketnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): [pokemon_v2_itempocketname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itempocketnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): pokemon_v2_itempocketname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\ntype pokemon_v2_itempocket_aggregate {\\r\\n  aggregate: pokemon_v2_itempocket_aggregate_fields\\r\\n  nodes: [pokemon_v2_itempocket!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\ntype pokemon_v2_itempocket_aggregate_fields {\\r\\n  avg: pokemon_v2_itempocket_avg_fields\\r\\n  count(columns: [pokemon_v2_itempocket_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itempocket_max_fields\\r\\n  min: pokemon_v2_itempocket_min_fields\\r\\n  stddev: pokemon_v2_itempocket_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itempocket_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itempocket_stddev_samp_fields\\r\\n  sum: pokemon_v2_itempocket_sum_fields\\r\\n  var_pop: pokemon_v2_itempocket_var_pop_fields\\r\\n  var_samp: pokemon_v2_itempocket_var_samp_fields\\r\\n  variance: pokemon_v2_itempocket_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itempocket_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itempocket\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itempocket_bool_exp {\\r\\n  _and: [pokemon_v2_itempocket_bool_exp!]\\r\\n  _not: pokemon_v2_itempocket_bool_exp\\r\\n  _or: [pokemon_v2_itempocket_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_itemcategories: pokemon_v2_itemcategory_bool_exp\\r\\n  pokemon_v2_itempocketnames: pokemon_v2_itempocketname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itempocket_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itempocket_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itempocket\\\\\\\".\\r\\ninput pokemon_v2_itempocket_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_itemcategories_aggregate: pokemon_v2_itemcategory_aggregate_order_by\\r\\n  pokemon_v2_itempocketnames_aggregate: pokemon_v2_itempocketname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\nenum pokemon_v2_itempocket_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itempocket_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itempocket_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itempocket_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itempocket_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itempocket_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itempocket_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itempocket_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ntype pokemon_v2_itempocketname {\\r\\n  id: Int!\\r\\n  item_pocket_id: Int\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_itempocket: pokemon_v2_itempocket\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ntype pokemon_v2_itempocketname_aggregate {\\r\\n  aggregate: pokemon_v2_itempocketname_aggregate_fields\\r\\n  nodes: [pokemon_v2_itempocketname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ntype pokemon_v2_itempocketname_aggregate_fields {\\r\\n  avg: pokemon_v2_itempocketname_avg_fields\\r\\n  count(columns: [pokemon_v2_itempocketname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itempocketname_max_fields\\r\\n  min: pokemon_v2_itempocketname_min_fields\\r\\n  stddev: pokemon_v2_itempocketname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itempocketname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itempocketname_stddev_samp_fields\\r\\n  sum: pokemon_v2_itempocketname_sum_fields\\r\\n  var_pop: pokemon_v2_itempocketname_var_pop_fields\\r\\n  var_samp: pokemon_v2_itempocketname_var_samp_fields\\r\\n  variance: pokemon_v2_itempocketname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_aggregate_order_by {\\r\\n  avg: pokemon_v2_itempocketname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itempocketname_max_order_by\\r\\n  min: pokemon_v2_itempocketname_min_order_by\\r\\n  stddev: pokemon_v2_itempocketname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itempocketname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itempocketname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itempocketname_sum_order_by\\r\\n  var_pop: pokemon_v2_itempocketname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itempocketname_var_samp_order_by\\r\\n  variance: pokemon_v2_itempocketname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itempocketname_avg_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_avg_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itempocketname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itempocketname_bool_exp {\\r\\n  _and: [pokemon_v2_itempocketname_bool_exp!]\\r\\n  _not: pokemon_v2_itempocketname_bool_exp\\r\\n  _or: [pokemon_v2_itempocketname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_pocket_id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_itempocket: pokemon_v2_itempocket_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itempocketname_max_fields {\\r\\n  id: Int\\r\\n  item_pocket_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_max_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itempocketname_min_fields {\\r\\n  id: Int\\r\\n  item_pocket_id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_min_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itempocketname\\\\\\\".\\r\\ninput pokemon_v2_itempocketname_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_itempocket: pokemon_v2_itempocket_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\nenum pokemon_v2_itempocketname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_pocket_id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itempocketname_stddev_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itempocketname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itempocketname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itempocketname_sum_fields {\\r\\n  id: Int\\r\\n  item_pocket_id: Int\\r\\n  language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_sum_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itempocketname_var_pop_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itempocketname_var_samp_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itempocketname_variance_fields {\\r\\n  id: Float\\r\\n  item_pocket_id: Float\\r\\n  language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\ninput pokemon_v2_itempocketname_variance_order_by {\\r\\n  id: order_by\\r\\n  item_pocket_id: order_by\\r\\n  language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ntype pokemon_v2_itemsprites {\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  sprites: String!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ntype pokemon_v2_itemsprites_aggregate {\\r\\n  aggregate: pokemon_v2_itemsprites_aggregate_fields\\r\\n  nodes: [pokemon_v2_itemsprites!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ntype pokemon_v2_itemsprites_aggregate_fields {\\r\\n  avg: pokemon_v2_itemsprites_avg_fields\\r\\n  count(columns: [pokemon_v2_itemsprites_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_itemsprites_max_fields\\r\\n  min: pokemon_v2_itemsprites_min_fields\\r\\n  stddev: pokemon_v2_itemsprites_stddev_fields\\r\\n  stddev_pop: pokemon_v2_itemsprites_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_itemsprites_stddev_samp_fields\\r\\n  sum: pokemon_v2_itemsprites_sum_fields\\r\\n  var_pop: pokemon_v2_itemsprites_var_pop_fields\\r\\n  var_samp: pokemon_v2_itemsprites_var_samp_fields\\r\\n  variance: pokemon_v2_itemsprites_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_aggregate_order_by {\\r\\n  avg: pokemon_v2_itemsprites_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_itemsprites_max_order_by\\r\\n  min: pokemon_v2_itemsprites_min_order_by\\r\\n  stddev: pokemon_v2_itemsprites_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_itemsprites_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_itemsprites_stddev_samp_order_by\\r\\n  sum: pokemon_v2_itemsprites_sum_order_by\\r\\n  var_pop: pokemon_v2_itemsprites_var_pop_order_by\\r\\n  var_samp: pokemon_v2_itemsprites_var_samp_order_by\\r\\n  variance: pokemon_v2_itemsprites_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_itemsprites_avg_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_avg_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_itemsprites\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_itemsprites_bool_exp {\\r\\n  _and: [pokemon_v2_itemsprites_bool_exp!]\\r\\n  _not: pokemon_v2_itemsprites_bool_exp\\r\\n  _or: [pokemon_v2_itemsprites_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  sprites: String_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_itemsprites_max_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  sprites: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_max_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_itemsprites_min_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  sprites: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_min_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_itemsprites\\\\\\\".\\r\\ninput pokemon_v2_itemsprites_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\nenum pokemon_v2_itemsprites_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n  # column name\\r\\n  sprites\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_itemsprites_stddev_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_itemsprites_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_itemsprites_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_itemsprites_sum_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_sum_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_itemsprites_var_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_itemsprites_var_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_itemsprites_variance_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_itemsprites\\\\\\\"\\r\\ninput pokemon_v2_itemsprites_variance_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\ntype pokemon_v2_language {\\r\\n  id: Int!\\r\\n  iso3166: String!\\r\\n  iso639: String!\\r\\n  name: String!\\r\\n  official: Boolean!\\r\\n  order: Int\\r\\n  # An array relationship\\r\\n  pokemonV2LanguagenamesByLocalLanguageId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): [pokemon_v2_languagename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2LanguagenamesByLocalLanguageId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): pokemon_v2_languagename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilitychangeeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilitychangeeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilitychangeeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilitychangeeffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilityeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilityeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilityeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilityeffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilityflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): [pokemon_v2_abilityflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilityflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): pokemon_v2_abilityflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilitynames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): [pokemon_v2_abilityname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilitynames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): pokemon_v2_abilityname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berryfirmnessnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): [pokemon_v2_berryfirmnessname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berryfirmnessnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): pokemon_v2_berryfirmnessname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berryflavornames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): [pokemon_v2_berryflavorname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berryflavornames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): pokemon_v2_berryflavorname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_characteristicdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): [pokemon_v2_characteristicdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_characteristicdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): pokemon_v2_characteristicdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_contesteffecteffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_contesteffecteffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_contesteffecteffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_contesteffecteffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_contesteffectflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_contesteffectflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_contesteffectflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_contesteffectflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_contesttypenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): [pokemon_v2_contesttypename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_contesttypenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): pokemon_v2_contesttypename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_egggroupnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): [pokemon_v2_egggroupname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_egggroupnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): pokemon_v2_egggroupname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterconditionnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterconditionnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): pokemon_v2_encounterconditionname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterconditionvaluenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterconditionvaluenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encountermethodnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): [pokemon_v2_encountermethodname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encountermethodnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): pokemon_v2_encountermethodname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_evolutiontriggernames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): [pokemon_v2_evolutiontriggername!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_evolutiontriggernames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): pokemon_v2_evolutiontriggername_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_generationnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): [pokemon_v2_generationname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_generationnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): pokemon_v2_generationname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_growthratedescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): [pokemon_v2_growthratedescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_growthratedescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): pokemon_v2_growthratedescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemattributedescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): [pokemon_v2_itemattributedescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemattributedescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): pokemon_v2_itemattributedescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemattributenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): [pokemon_v2_itemattributename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemattributenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): pokemon_v2_itemattributename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemcategorynames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): [pokemon_v2_itemcategoryname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemcategorynames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): pokemon_v2_itemcategoryname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): pokemon_v2_itemeffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): [pokemon_v2_itemflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): pokemon_v2_itemflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemflingeffecteffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemflingeffecteffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemflingeffecteffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_itemflingeffecteffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): [pokemon_v2_itemname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): pokemon_v2_itemname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_itempocketnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): [pokemon_v2_itempocketname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itempocketnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): pokemon_v2_itempocketname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_languagenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): [pokemon_v2_languagename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_languagenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): pokemon_v2_languagename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationareanames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): [pokemon_v2_locationareaname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationareanames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): pokemon_v2_locationareaname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): [pokemon_v2_locationname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): pokemon_v2_locationname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveattributedescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): [pokemon_v2_moveattributedescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveattributedescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): pokemon_v2_moveattributedescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveattributenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): [pokemon_v2_moveattributename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveattributenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): pokemon_v2_moveattributename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movebattlestylenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): [pokemon_v2_movebattlestylename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movebattlestylenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): pokemon_v2_movebattlestylename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movedamageclassdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movedamageclassdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): pokemon_v2_movedamageclassdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movedamageclassnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movedamageclassnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): pokemon_v2_movedamageclassname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveeffectchangeeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchangeeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveeffectchangeeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffectchangeeffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveeffecteffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffecteffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveeffecteffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffecteffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): [pokemon_v2_moveflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): pokemon_v2_moveflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movelearnmethoddescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethoddescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movelearnmethoddescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): pokemon_v2_movelearnmethoddescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movelearnmethodnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethodname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movelearnmethodnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): pokemon_v2_movelearnmethodname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemetaailmentnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): [pokemon_v2_movemetaailmentname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemetaailmentnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): pokemon_v2_movemetaailmentname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemetacategorydescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): [pokemon_v2_movemetacategorydescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemetacategorydescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): pokemon_v2_movemetacategorydescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): [pokemon_v2_movename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): pokemon_v2_movename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movetargetdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): [pokemon_v2_movetargetdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movetargetdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): pokemon_v2_movetargetdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movetargetnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): [pokemon_v2_movetargetname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movetargetnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): pokemon_v2_movetargetname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_naturenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): [pokemon_v2_naturename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_naturenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): pokemon_v2_naturename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_palparkareanames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): [pokemon_v2_palparkareaname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_palparkareanames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): pokemon_v2_palparkareaname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokeathlonstatnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): [pokemon_v2_pokeathlonstatname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokeathlonstatnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): pokemon_v2_pokeathlonstatname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokedexdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): [pokemon_v2_pokedexdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokedexdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): pokemon_v2_pokedexdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokedexnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): [pokemon_v2_pokedexname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokedexnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): pokemon_v2_pokedexname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemoncolornames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): [pokemon_v2_pokemoncolorname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemoncolornames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): pokemon_v2_pokemoncolorname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): [pokemon_v2_pokemonformname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): pokemon_v2_pokemonformname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonhabitatnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): [pokemon_v2_pokemonhabitatname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonhabitatnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): pokemon_v2_pokemonhabitatname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonshapenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): [pokemon_v2_pokemonshapename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonshapenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): pokemon_v2_pokemonshapename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspeciesdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspeciesdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspeciesflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspeciesflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspeciesnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspeciesnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_regionnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): [pokemon_v2_regionname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_regionnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): pokemon_v2_regionname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_statnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): [pokemon_v2_statname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_statnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): pokemon_v2_statname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_supercontesteffectflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_supercontesteffectflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_supercontesteffectflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_supercontesteffectflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_typenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): [pokemon_v2_typename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_typenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): pokemon_v2_typename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_versionnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): [pokemon_v2_versionname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versionnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): pokemon_v2_versionname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\ntype pokemon_v2_language_aggregate {\\r\\n  aggregate: pokemon_v2_language_aggregate_fields\\r\\n  nodes: [pokemon_v2_language!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\ntype pokemon_v2_language_aggregate_fields {\\r\\n  avg: pokemon_v2_language_avg_fields\\r\\n  count(columns: [pokemon_v2_language_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_language_max_fields\\r\\n  min: pokemon_v2_language_min_fields\\r\\n  stddev: pokemon_v2_language_stddev_fields\\r\\n  stddev_pop: pokemon_v2_language_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_language_stddev_samp_fields\\r\\n  sum: pokemon_v2_language_sum_fields\\r\\n  var_pop: pokemon_v2_language_var_pop_fields\\r\\n  var_samp: pokemon_v2_language_var_samp_fields\\r\\n  variance: pokemon_v2_language_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_language_avg_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_language\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_language_bool_exp {\\r\\n  _and: [pokemon_v2_language_bool_exp!]\\r\\n  _not: pokemon_v2_language_bool_exp\\r\\n  _or: [pokemon_v2_language_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  iso3166: String_comparison_exp\\r\\n  iso639: String_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  official: Boolean_comparison_exp\\r\\n  order: Int_comparison_exp\\r\\n  pokemonV2LanguagenamesByLocalLanguageId: pokemon_v2_languagename_bool_exp\\r\\n  pokemon_v2_abilitychangeeffecttexts: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  pokemon_v2_abilityeffecttexts: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  pokemon_v2_abilityflavortexts: pokemon_v2_abilityflavortext_bool_exp\\r\\n  pokemon_v2_abilitynames: pokemon_v2_abilityname_bool_exp\\r\\n  pokemon_v2_berryfirmnessnames: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  pokemon_v2_berryflavornames: pokemon_v2_berryflavorname_bool_exp\\r\\n  pokemon_v2_characteristicdescriptions: pokemon_v2_characteristicdescription_bool_exp\\r\\n  pokemon_v2_contesteffecteffecttexts: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  pokemon_v2_contesteffectflavortexts: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  pokemon_v2_contesttypenames: pokemon_v2_contesttypename_bool_exp\\r\\n  pokemon_v2_egggroupnames: pokemon_v2_egggroupname_bool_exp\\r\\n  pokemon_v2_encounterconditionnames: pokemon_v2_encounterconditionname_bool_exp\\r\\n  pokemon_v2_encounterconditionvaluenames: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  pokemon_v2_encountermethodnames: pokemon_v2_encountermethodname_bool_exp\\r\\n  pokemon_v2_evolutiontriggernames: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  pokemon_v2_generationnames: pokemon_v2_generationname_bool_exp\\r\\n  pokemon_v2_growthratedescriptions: pokemon_v2_growthratedescription_bool_exp\\r\\n  pokemon_v2_itemattributedescriptions: pokemon_v2_itemattributedescription_bool_exp\\r\\n  pokemon_v2_itemattributenames: pokemon_v2_itemattributename_bool_exp\\r\\n  pokemon_v2_itemcategorynames: pokemon_v2_itemcategoryname_bool_exp\\r\\n  pokemon_v2_itemeffecttexts: pokemon_v2_itemeffecttext_bool_exp\\r\\n  pokemon_v2_itemflavortexts: pokemon_v2_itemflavortext_bool_exp\\r\\n  pokemon_v2_itemflingeffecteffecttexts: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  pokemon_v2_itemnames: pokemon_v2_itemname_bool_exp\\r\\n  pokemon_v2_itempocketnames: pokemon_v2_itempocketname_bool_exp\\r\\n  pokemon_v2_languagenames: pokemon_v2_languagename_bool_exp\\r\\n  pokemon_v2_locationareanames: pokemon_v2_locationareaname_bool_exp\\r\\n  pokemon_v2_locationnames: pokemon_v2_locationname_bool_exp\\r\\n  pokemon_v2_moveattributedescriptions: pokemon_v2_moveattributedescription_bool_exp\\r\\n  pokemon_v2_moveattributenames: pokemon_v2_moveattributename_bool_exp\\r\\n  pokemon_v2_movebattlestylenames: pokemon_v2_movebattlestylename_bool_exp\\r\\n  pokemon_v2_movedamageclassdescriptions: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  pokemon_v2_movedamageclassnames: pokemon_v2_movedamageclassname_bool_exp\\r\\n  pokemon_v2_moveeffectchangeeffecttexts: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  pokemon_v2_moveeffecteffecttexts: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  pokemon_v2_moveflavortexts: pokemon_v2_moveflavortext_bool_exp\\r\\n  pokemon_v2_movelearnmethoddescriptions: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  pokemon_v2_movelearnmethodnames: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  pokemon_v2_movemetaailmentnames: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  pokemon_v2_movemetacategorydescriptions: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  pokemon_v2_movenames: pokemon_v2_movename_bool_exp\\r\\n  pokemon_v2_movetargetdescriptions: pokemon_v2_movetargetdescription_bool_exp\\r\\n  pokemon_v2_movetargetnames: pokemon_v2_movetargetname_bool_exp\\r\\n  pokemon_v2_naturenames: pokemon_v2_naturename_bool_exp\\r\\n  pokemon_v2_palparkareanames: pokemon_v2_palparkareaname_bool_exp\\r\\n  pokemon_v2_pokeathlonstatnames: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  pokemon_v2_pokedexdescriptions: pokemon_v2_pokedexdescription_bool_exp\\r\\n  pokemon_v2_pokedexnames: pokemon_v2_pokedexname_bool_exp\\r\\n  pokemon_v2_pokemoncolornames: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  pokemon_v2_pokemonformnames: pokemon_v2_pokemonformname_bool_exp\\r\\n  pokemon_v2_pokemonhabitatnames: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  pokemon_v2_pokemonshapenames: pokemon_v2_pokemonshapename_bool_exp\\r\\n  pokemon_v2_pokemonspeciesdescriptions: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  pokemon_v2_pokemonspeciesflavortexts: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  pokemon_v2_pokemonspeciesnames: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  pokemon_v2_regionnames: pokemon_v2_regionname_bool_exp\\r\\n  pokemon_v2_statnames: pokemon_v2_statname_bool_exp\\r\\n  pokemon_v2_supercontesteffectflavortexts: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  pokemon_v2_typenames: pokemon_v2_typename_bool_exp\\r\\n  pokemon_v2_versionnames: pokemon_v2_versionname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_language_max_fields {\\r\\n  id: Int\\r\\n  iso3166: String\\r\\n  iso639: String\\r\\n  name: String\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_language_min_fields {\\r\\n  id: Int\\r\\n  iso3166: String\\r\\n  iso639: String\\r\\n  name: String\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_language\\\\\\\".\\r\\ninput pokemon_v2_language_order_by {\\r\\n  id: order_by\\r\\n  iso3166: order_by\\r\\n  iso639: order_by\\r\\n  name: order_by\\r\\n  official: order_by\\r\\n  order: order_by\\r\\n  pokemonV2LanguagenamesByLocalLanguageId_aggregate: pokemon_v2_languagename_aggregate_order_by\\r\\n  pokemon_v2_abilitychangeeffecttexts_aggregate: pokemon_v2_abilitychangeeffecttext_aggregate_order_by\\r\\n  pokemon_v2_abilityeffecttexts_aggregate: pokemon_v2_abilityeffecttext_aggregate_order_by\\r\\n  pokemon_v2_abilityflavortexts_aggregate: pokemon_v2_abilityflavortext_aggregate_order_by\\r\\n  pokemon_v2_abilitynames_aggregate: pokemon_v2_abilityname_aggregate_order_by\\r\\n  pokemon_v2_berryfirmnessnames_aggregate: pokemon_v2_berryfirmnessname_aggregate_order_by\\r\\n  pokemon_v2_berryflavornames_aggregate: pokemon_v2_berryflavorname_aggregate_order_by\\r\\n  pokemon_v2_characteristicdescriptions_aggregate: pokemon_v2_characteristicdescription_aggregate_order_by\\r\\n  pokemon_v2_contesteffecteffecttexts_aggregate: pokemon_v2_contesteffecteffecttext_aggregate_order_by\\r\\n  pokemon_v2_contesteffectflavortexts_aggregate: pokemon_v2_contesteffectflavortext_aggregate_order_by\\r\\n  pokemon_v2_contesttypenames_aggregate: pokemon_v2_contesttypename_aggregate_order_by\\r\\n  pokemon_v2_egggroupnames_aggregate: pokemon_v2_egggroupname_aggregate_order_by\\r\\n  pokemon_v2_encounterconditionnames_aggregate: pokemon_v2_encounterconditionname_aggregate_order_by\\r\\n  pokemon_v2_encounterconditionvaluenames_aggregate: pokemon_v2_encounterconditionvaluename_aggregate_order_by\\r\\n  pokemon_v2_encountermethodnames_aggregate: pokemon_v2_encountermethodname_aggregate_order_by\\r\\n  pokemon_v2_evolutiontriggernames_aggregate: pokemon_v2_evolutiontriggername_aggregate_order_by\\r\\n  pokemon_v2_generationnames_aggregate: pokemon_v2_generationname_aggregate_order_by\\r\\n  pokemon_v2_growthratedescriptions_aggregate: pokemon_v2_growthratedescription_aggregate_order_by\\r\\n  pokemon_v2_itemattributedescriptions_aggregate: pokemon_v2_itemattributedescription_aggregate_order_by\\r\\n  pokemon_v2_itemattributenames_aggregate: pokemon_v2_itemattributename_aggregate_order_by\\r\\n  pokemon_v2_itemcategorynames_aggregate: pokemon_v2_itemcategoryname_aggregate_order_by\\r\\n  pokemon_v2_itemeffecttexts_aggregate: pokemon_v2_itemeffecttext_aggregate_order_by\\r\\n  pokemon_v2_itemflavortexts_aggregate: pokemon_v2_itemflavortext_aggregate_order_by\\r\\n  pokemon_v2_itemflingeffecteffecttexts_aggregate: pokemon_v2_itemflingeffecteffecttext_aggregate_order_by\\r\\n  pokemon_v2_itemnames_aggregate: pokemon_v2_itemname_aggregate_order_by\\r\\n  pokemon_v2_itempocketnames_aggregate: pokemon_v2_itempocketname_aggregate_order_by\\r\\n  pokemon_v2_languagenames_aggregate: pokemon_v2_languagename_aggregate_order_by\\r\\n  pokemon_v2_locationareanames_aggregate: pokemon_v2_locationareaname_aggregate_order_by\\r\\n  pokemon_v2_locationnames_aggregate: pokemon_v2_locationname_aggregate_order_by\\r\\n  pokemon_v2_moveattributedescriptions_aggregate: pokemon_v2_moveattributedescription_aggregate_order_by\\r\\n  pokemon_v2_moveattributenames_aggregate: pokemon_v2_moveattributename_aggregate_order_by\\r\\n  pokemon_v2_movebattlestylenames_aggregate: pokemon_v2_movebattlestylename_aggregate_order_by\\r\\n  pokemon_v2_movedamageclassdescriptions_aggregate: pokemon_v2_movedamageclassdescription_aggregate_order_by\\r\\n  pokemon_v2_movedamageclassnames_aggregate: pokemon_v2_movedamageclassname_aggregate_order_by\\r\\n  pokemon_v2_moveeffectchangeeffecttexts_aggregate: pokemon_v2_moveeffectchangeeffecttext_aggregate_order_by\\r\\n  pokemon_v2_moveeffecteffecttexts_aggregate: pokemon_v2_moveeffecteffecttext_aggregate_order_by\\r\\n  pokemon_v2_moveflavortexts_aggregate: pokemon_v2_moveflavortext_aggregate_order_by\\r\\n  pokemon_v2_movelearnmethoddescriptions_aggregate: pokemon_v2_movelearnmethoddescription_aggregate_order_by\\r\\n  pokemon_v2_movelearnmethodnames_aggregate: pokemon_v2_movelearnmethodname_aggregate_order_by\\r\\n  pokemon_v2_movemetaailmentnames_aggregate: pokemon_v2_movemetaailmentname_aggregate_order_by\\r\\n  pokemon_v2_movemetacategorydescriptions_aggregate: pokemon_v2_movemetacategorydescription_aggregate_order_by\\r\\n  pokemon_v2_movenames_aggregate: pokemon_v2_movename_aggregate_order_by\\r\\n  pokemon_v2_movetargetdescriptions_aggregate: pokemon_v2_movetargetdescription_aggregate_order_by\\r\\n  pokemon_v2_movetargetnames_aggregate: pokemon_v2_movetargetname_aggregate_order_by\\r\\n  pokemon_v2_naturenames_aggregate: pokemon_v2_naturename_aggregate_order_by\\r\\n  pokemon_v2_palparkareanames_aggregate: pokemon_v2_palparkareaname_aggregate_order_by\\r\\n  pokemon_v2_pokeathlonstatnames_aggregate: pokemon_v2_pokeathlonstatname_aggregate_order_by\\r\\n  pokemon_v2_pokedexdescriptions_aggregate: pokemon_v2_pokedexdescription_aggregate_order_by\\r\\n  pokemon_v2_pokedexnames_aggregate: pokemon_v2_pokedexname_aggregate_order_by\\r\\n  pokemon_v2_pokemoncolornames_aggregate: pokemon_v2_pokemoncolorname_aggregate_order_by\\r\\n  pokemon_v2_pokemonformnames_aggregate: pokemon_v2_pokemonformname_aggregate_order_by\\r\\n  pokemon_v2_pokemonhabitatnames_aggregate: pokemon_v2_pokemonhabitatname_aggregate_order_by\\r\\n  pokemon_v2_pokemonshapenames_aggregate: pokemon_v2_pokemonshapename_aggregate_order_by\\r\\n  pokemon_v2_pokemonspeciesdescriptions_aggregate: pokemon_v2_pokemonspeciesdescription_aggregate_order_by\\r\\n  pokemon_v2_pokemonspeciesflavortexts_aggregate: pokemon_v2_pokemonspeciesflavortext_aggregate_order_by\\r\\n  pokemon_v2_pokemonspeciesnames_aggregate: pokemon_v2_pokemonspeciesname_aggregate_order_by\\r\\n  pokemon_v2_regionnames_aggregate: pokemon_v2_regionname_aggregate_order_by\\r\\n  pokemon_v2_statnames_aggregate: pokemon_v2_statname_aggregate_order_by\\r\\n  pokemon_v2_supercontesteffectflavortexts_aggregate: pokemon_v2_supercontesteffectflavortext_aggregate_order_by\\r\\n  pokemon_v2_typenames_aggregate: pokemon_v2_typename_aggregate_order_by\\r\\n  pokemon_v2_versionnames_aggregate: pokemon_v2_versionname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\nenum pokemon_v2_language_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  iso3166\\r\\n  # column name\\r\\n  iso639\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  official\\r\\n  # column name\\r\\n  order\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_language_stddev_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_language_stddev_pop_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_language_stddev_samp_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_language_sum_fields {\\r\\n  id: Int\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_language_var_pop_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_language_var_samp_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_language_variance_fields {\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ntype pokemon_v2_languagename {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  local_language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemonV2LanguageByLocalLanguageId: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ntype pokemon_v2_languagename_aggregate {\\r\\n  aggregate: pokemon_v2_languagename_aggregate_fields\\r\\n  nodes: [pokemon_v2_languagename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ntype pokemon_v2_languagename_aggregate_fields {\\r\\n  avg: pokemon_v2_languagename_avg_fields\\r\\n  count(columns: [pokemon_v2_languagename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_languagename_max_fields\\r\\n  min: pokemon_v2_languagename_min_fields\\r\\n  stddev: pokemon_v2_languagename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_languagename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_languagename_stddev_samp_fields\\r\\n  sum: pokemon_v2_languagename_sum_fields\\r\\n  var_pop: pokemon_v2_languagename_var_pop_fields\\r\\n  var_samp: pokemon_v2_languagename_var_samp_fields\\r\\n  variance: pokemon_v2_languagename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_aggregate_order_by {\\r\\n  avg: pokemon_v2_languagename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_languagename_max_order_by\\r\\n  min: pokemon_v2_languagename_min_order_by\\r\\n  stddev: pokemon_v2_languagename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_languagename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_languagename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_languagename_sum_order_by\\r\\n  var_pop: pokemon_v2_languagename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_languagename_var_samp_order_by\\r\\n  variance: pokemon_v2_languagename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_languagename_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  local_language_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_languagename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_languagename_bool_exp {\\r\\n  _and: [pokemon_v2_languagename_bool_exp!]\\r\\n  _not: pokemon_v2_languagename_bool_exp\\r\\n  _or: [pokemon_v2_languagename_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  local_language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemonV2LanguageByLocalLanguageId: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_languagename_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  local_language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_languagename_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  local_language_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_languagename\\\\\\\".\\r\\ninput pokemon_v2_languagename_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n  name: order_by\\r\\n  pokemonV2LanguageByLocalLanguageId: pokemon_v2_language_order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\nenum pokemon_v2_languagename_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  local_language_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_languagename_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  local_language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_languagename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  local_language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_languagename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  local_language_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_languagename_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  local_language_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_languagename_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  local_language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_languagename_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  local_language_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_languagename_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  local_language_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\ninput pokemon_v2_languagename_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  local_language_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ntype pokemon_v2_location {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationareas(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationarea_bool_exp\\r\\n  ): [pokemon_v2_locationarea!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationareas_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationarea_bool_exp\\r\\n  ): pokemon_v2_locationarea_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationgameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): [pokemon_v2_locationgameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationgameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): pokemon_v2_locationgameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): [pokemon_v2_locationname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): pokemon_v2_locationname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonevolutions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonevolutions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_region: pokemon_v2_region\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ntype pokemon_v2_location_aggregate {\\r\\n  aggregate: pokemon_v2_location_aggregate_fields\\r\\n  nodes: [pokemon_v2_location!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ntype pokemon_v2_location_aggregate_fields {\\r\\n  avg: pokemon_v2_location_avg_fields\\r\\n  count(columns: [pokemon_v2_location_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_location_max_fields\\r\\n  min: pokemon_v2_location_min_fields\\r\\n  stddev: pokemon_v2_location_stddev_fields\\r\\n  stddev_pop: pokemon_v2_location_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_location_stddev_samp_fields\\r\\n  sum: pokemon_v2_location_sum_fields\\r\\n  var_pop: pokemon_v2_location_var_pop_fields\\r\\n  var_samp: pokemon_v2_location_var_samp_fields\\r\\n  variance: pokemon_v2_location_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_aggregate_order_by {\\r\\n  avg: pokemon_v2_location_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_location_max_order_by\\r\\n  min: pokemon_v2_location_min_order_by\\r\\n  stddev: pokemon_v2_location_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_location_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_location_stddev_samp_order_by\\r\\n  sum: pokemon_v2_location_sum_order_by\\r\\n  var_pop: pokemon_v2_location_var_pop_order_by\\r\\n  var_samp: pokemon_v2_location_var_samp_order_by\\r\\n  variance: pokemon_v2_location_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_location_avg_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_avg_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_location\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_location_bool_exp {\\r\\n  _and: [pokemon_v2_location_bool_exp!]\\r\\n  _not: pokemon_v2_location_bool_exp\\r\\n  _or: [pokemon_v2_location_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_locationareas: pokemon_v2_locationarea_bool_exp\\r\\n  pokemon_v2_locationgameindices: pokemon_v2_locationgameindex_bool_exp\\r\\n  pokemon_v2_locationnames: pokemon_v2_locationname_bool_exp\\r\\n  pokemon_v2_pokemonevolutions: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemon_v2_region: pokemon_v2_region_bool_exp\\r\\n  region_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_location_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_max_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_location_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_min_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_location\\\\\\\".\\r\\ninput pokemon_v2_location_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_locationareas_aggregate: pokemon_v2_locationarea_aggregate_order_by\\r\\n  pokemon_v2_locationgameindices_aggregate: pokemon_v2_locationgameindex_aggregate_order_by\\r\\n  pokemon_v2_locationnames_aggregate: pokemon_v2_locationname_aggregate_order_by\\r\\n  pokemon_v2_pokemonevolutions_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemon_v2_region: pokemon_v2_region_order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\nenum pokemon_v2_location_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  region_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_location_stddev_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_stddev_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_location_stddev_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_location_stddev_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_location_sum_fields {\\r\\n  id: Int\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_sum_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_location_var_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_var_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_location_var_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_var_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_location_variance_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\ninput pokemon_v2_location_variance_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ntype pokemon_v2_locationarea {\\r\\n  game_index: Int!\\r\\n  id: Int!\\r\\n  location_id: Int\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounters(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): [pokemon_v2_encounter!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounters_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): pokemon_v2_encounter_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_location: pokemon_v2_location\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationareaencounterrates(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): [pokemon_v2_locationareaencounterrate!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationareaencounterrates_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): pokemon_v2_locationareaencounterrate_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationareanames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): [pokemon_v2_locationareaname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationareanames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): pokemon_v2_locationareaname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ntype pokemon_v2_locationarea_aggregate {\\r\\n  aggregate: pokemon_v2_locationarea_aggregate_fields\\r\\n  nodes: [pokemon_v2_locationarea!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ntype pokemon_v2_locationarea_aggregate_fields {\\r\\n  avg: pokemon_v2_locationarea_avg_fields\\r\\n  count(columns: [pokemon_v2_locationarea_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_locationarea_max_fields\\r\\n  min: pokemon_v2_locationarea_min_fields\\r\\n  stddev: pokemon_v2_locationarea_stddev_fields\\r\\n  stddev_pop: pokemon_v2_locationarea_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_locationarea_stddev_samp_fields\\r\\n  sum: pokemon_v2_locationarea_sum_fields\\r\\n  var_pop: pokemon_v2_locationarea_var_pop_fields\\r\\n  var_samp: pokemon_v2_locationarea_var_samp_fields\\r\\n  variance: pokemon_v2_locationarea_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_aggregate_order_by {\\r\\n  avg: pokemon_v2_locationarea_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_locationarea_max_order_by\\r\\n  min: pokemon_v2_locationarea_min_order_by\\r\\n  stddev: pokemon_v2_locationarea_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_locationarea_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_locationarea_stddev_samp_order_by\\r\\n  sum: pokemon_v2_locationarea_sum_order_by\\r\\n  var_pop: pokemon_v2_locationarea_var_pop_order_by\\r\\n  var_samp: pokemon_v2_locationarea_var_samp_order_by\\r\\n  variance: pokemon_v2_locationarea_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_locationarea_avg_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_avg_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_locationarea\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_locationarea_bool_exp {\\r\\n  _and: [pokemon_v2_locationarea_bool_exp!]\\r\\n  _not: pokemon_v2_locationarea_bool_exp\\r\\n  _or: [pokemon_v2_locationarea_bool_exp!]\\r\\n  game_index: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  location_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_encounters: pokemon_v2_encounter_bool_exp\\r\\n  pokemon_v2_location: pokemon_v2_location_bool_exp\\r\\n  pokemon_v2_locationareaencounterrates: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  pokemon_v2_locationareanames: pokemon_v2_locationareaname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_locationarea_max_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  location_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_max_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_locationarea_min_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  location_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_min_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_locationarea\\\\\\\".\\r\\ninput pokemon_v2_locationarea_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_encounters_aggregate: pokemon_v2_encounter_aggregate_order_by\\r\\n  pokemon_v2_location: pokemon_v2_location_order_by\\r\\n  pokemon_v2_locationareaencounterrates_aggregate: pokemon_v2_locationareaencounterrate_aggregate_order_by\\r\\n  pokemon_v2_locationareanames_aggregate: pokemon_v2_locationareaname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\nenum pokemon_v2_locationarea_select_column {\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  location_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_locationarea_stddev_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_stddev_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_locationarea_stddev_pop_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_stddev_pop_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_locationarea_stddev_samp_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_stddev_samp_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_locationarea_sum_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  location_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_sum_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_locationarea_var_pop_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_var_pop_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_locationarea_var_samp_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_var_samp_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_locationarea_variance_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\ninput pokemon_v2_locationarea_variance_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ntype pokemon_v2_locationareaencounterrate {\\r\\n  encounter_method_id: Int\\r\\n  id: Int!\\r\\n  location_area_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod\\r\\n  # An object relationship\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea\\r\\n  # An object relationship\\r\\n  pokemon_v2_version: pokemon_v2_version\\r\\n  rate: Int!\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ntype pokemon_v2_locationareaencounterrate_aggregate {\\r\\n  aggregate: pokemon_v2_locationareaencounterrate_aggregate_fields\\r\\n  nodes: [pokemon_v2_locationareaencounterrate!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ntype pokemon_v2_locationareaencounterrate_aggregate_fields {\\r\\n  avg: pokemon_v2_locationareaencounterrate_avg_fields\\r\\n  count(columns: [pokemon_v2_locationareaencounterrate_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_locationareaencounterrate_max_fields\\r\\n  min: pokemon_v2_locationareaencounterrate_min_fields\\r\\n  stddev: pokemon_v2_locationareaencounterrate_stddev_fields\\r\\n  stddev_pop: pokemon_v2_locationareaencounterrate_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_locationareaencounterrate_stddev_samp_fields\\r\\n  sum: pokemon_v2_locationareaencounterrate_sum_fields\\r\\n  var_pop: pokemon_v2_locationareaencounterrate_var_pop_fields\\r\\n  var_samp: pokemon_v2_locationareaencounterrate_var_samp_fields\\r\\n  variance: pokemon_v2_locationareaencounterrate_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_aggregate_order_by {\\r\\n  avg: pokemon_v2_locationareaencounterrate_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_locationareaencounterrate_max_order_by\\r\\n  min: pokemon_v2_locationareaencounterrate_min_order_by\\r\\n  stddev: pokemon_v2_locationareaencounterrate_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_locationareaencounterrate_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_locationareaencounterrate_stddev_samp_order_by\\r\\n  sum: pokemon_v2_locationareaencounterrate_sum_order_by\\r\\n  var_pop: pokemon_v2_locationareaencounterrate_var_pop_order_by\\r\\n  var_samp: pokemon_v2_locationareaencounterrate_var_samp_order_by\\r\\n  variance: pokemon_v2_locationareaencounterrate_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_locationareaencounterrate_avg_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  rate: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_avg_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_locationareaencounterrate_bool_exp {\\r\\n  _and: [pokemon_v2_locationareaencounterrate_bool_exp!]\\r\\n  _not: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  _or: [pokemon_v2_locationareaencounterrate_bool_exp!]\\r\\n  encounter_method_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  location_area_id: Int_comparison_exp\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod_bool_exp\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea_bool_exp\\r\\n  pokemon_v2_version: pokemon_v2_version_bool_exp\\r\\n  rate: Int_comparison_exp\\r\\n  version_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_locationareaencounterrate_max_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  location_area_id: Int\\r\\n  rate: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_max_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_locationareaencounterrate_min_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  location_area_id: Int\\r\\n  rate: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_min_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\".\\r\\ninput pokemon_v2_locationareaencounterrate_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  pokemon_v2_encountermethod: pokemon_v2_encountermethod_order_by\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea_order_by\\r\\n  pokemon_v2_version: pokemon_v2_version_order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\nenum pokemon_v2_locationareaencounterrate_select_column {\\r\\n  # column name\\r\\n  encounter_method_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  location_area_id\\r\\n  # column name\\r\\n  rate\\r\\n  # column name\\r\\n  version_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_locationareaencounterrate_stddev_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  rate: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_stddev_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_locationareaencounterrate_stddev_pop_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  rate: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_stddev_pop_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_locationareaencounterrate_stddev_samp_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  rate: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_stddev_samp_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_locationareaencounterrate_sum_fields {\\r\\n  encounter_method_id: Int\\r\\n  id: Int\\r\\n  location_area_id: Int\\r\\n  rate: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_sum_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_locationareaencounterrate_var_pop_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  rate: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_var_pop_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_locationareaencounterrate_var_samp_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  rate: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_var_samp_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_locationareaencounterrate_variance_fields {\\r\\n  encounter_method_id: Float\\r\\n  id: Float\\r\\n  location_area_id: Float\\r\\n  rate: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\ninput pokemon_v2_locationareaencounterrate_variance_order_by {\\r\\n  encounter_method_id: order_by\\r\\n  id: order_by\\r\\n  location_area_id: order_by\\r\\n  rate: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ntype pokemon_v2_locationareaname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  location_area_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ntype pokemon_v2_locationareaname_aggregate {\\r\\n  aggregate: pokemon_v2_locationareaname_aggregate_fields\\r\\n  nodes: [pokemon_v2_locationareaname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ntype pokemon_v2_locationareaname_aggregate_fields {\\r\\n  avg: pokemon_v2_locationareaname_avg_fields\\r\\n  count(columns: [pokemon_v2_locationareaname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_locationareaname_max_fields\\r\\n  min: pokemon_v2_locationareaname_min_fields\\r\\n  stddev: pokemon_v2_locationareaname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_locationareaname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_locationareaname_stddev_samp_fields\\r\\n  sum: pokemon_v2_locationareaname_sum_fields\\r\\n  var_pop: pokemon_v2_locationareaname_var_pop_fields\\r\\n  var_samp: pokemon_v2_locationareaname_var_samp_fields\\r\\n  variance: pokemon_v2_locationareaname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_aggregate_order_by {\\r\\n  avg: pokemon_v2_locationareaname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_locationareaname_max_order_by\\r\\n  min: pokemon_v2_locationareaname_min_order_by\\r\\n  stddev: pokemon_v2_locationareaname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_locationareaname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_locationareaname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_locationareaname_sum_order_by\\r\\n  var_pop: pokemon_v2_locationareaname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_locationareaname_var_samp_order_by\\r\\n  variance: pokemon_v2_locationareaname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_locationareaname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_area_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_locationareaname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_locationareaname_bool_exp {\\r\\n  _and: [pokemon_v2_locationareaname_bool_exp!]\\r\\n  _not: pokemon_v2_locationareaname_bool_exp\\r\\n  _or: [pokemon_v2_locationareaname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  location_area_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_locationareaname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  location_area_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_locationareaname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  location_area_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_locationareaname\\\\\\\".\\r\\ninput pokemon_v2_locationareaname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_locationarea: pokemon_v2_locationarea_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\nenum pokemon_v2_locationareaname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  location_area_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_locationareaname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_area_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_locationareaname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_area_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_locationareaname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_area_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_locationareaname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  location_area_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_locationareaname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_area_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_locationareaname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_area_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_locationareaname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_area_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\ninput pokemon_v2_locationareaname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_area_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ntype pokemon_v2_locationgameindex {\\r\\n  game_index: Int!\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  location_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An object relationship\\r\\n  pokemon_v2_location: pokemon_v2_location\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ntype pokemon_v2_locationgameindex_aggregate {\\r\\n  aggregate: pokemon_v2_locationgameindex_aggregate_fields\\r\\n  nodes: [pokemon_v2_locationgameindex!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ntype pokemon_v2_locationgameindex_aggregate_fields {\\r\\n  avg: pokemon_v2_locationgameindex_avg_fields\\r\\n  count(columns: [pokemon_v2_locationgameindex_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_locationgameindex_max_fields\\r\\n  min: pokemon_v2_locationgameindex_min_fields\\r\\n  stddev: pokemon_v2_locationgameindex_stddev_fields\\r\\n  stddev_pop: pokemon_v2_locationgameindex_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_locationgameindex_stddev_samp_fields\\r\\n  sum: pokemon_v2_locationgameindex_sum_fields\\r\\n  var_pop: pokemon_v2_locationgameindex_var_pop_fields\\r\\n  var_samp: pokemon_v2_locationgameindex_var_samp_fields\\r\\n  variance: pokemon_v2_locationgameindex_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_aggregate_order_by {\\r\\n  avg: pokemon_v2_locationgameindex_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_locationgameindex_max_order_by\\r\\n  min: pokemon_v2_locationgameindex_min_order_by\\r\\n  stddev: pokemon_v2_locationgameindex_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_locationgameindex_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_locationgameindex_stddev_samp_order_by\\r\\n  sum: pokemon_v2_locationgameindex_sum_order_by\\r\\n  var_pop: pokemon_v2_locationgameindex_var_pop_order_by\\r\\n  var_samp: pokemon_v2_locationgameindex_var_samp_order_by\\r\\n  variance: pokemon_v2_locationgameindex_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_locationgameindex_avg_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_avg_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_locationgameindex_bool_exp {\\r\\n  _and: [pokemon_v2_locationgameindex_bool_exp!]\\r\\n  _not: pokemon_v2_locationgameindex_bool_exp\\r\\n  _or: [pokemon_v2_locationgameindex_bool_exp!]\\r\\n  game_index: Int_comparison_exp\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  location_id: Int_comparison_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_location: pokemon_v2_location_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_locationgameindex_max_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  location_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_max_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_locationgameindex_min_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  location_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_min_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_locationgameindex\\\\\\\".\\r\\ninput pokemon_v2_locationgameindex_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_location: pokemon_v2_location_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\nenum pokemon_v2_locationgameindex_select_column {\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  location_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_locationgameindex_stddev_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_stddev_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_locationgameindex_stddev_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_stddev_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_locationgameindex_stddev_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_stddev_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_locationgameindex_sum_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  location_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_sum_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_locationgameindex_var_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_var_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_locationgameindex_var_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_var_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_locationgameindex_variance_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\ninput pokemon_v2_locationgameindex_variance_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ntype pokemon_v2_locationname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  location_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_location: pokemon_v2_location\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ntype pokemon_v2_locationname_aggregate {\\r\\n  aggregate: pokemon_v2_locationname_aggregate_fields\\r\\n  nodes: [pokemon_v2_locationname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ntype pokemon_v2_locationname_aggregate_fields {\\r\\n  avg: pokemon_v2_locationname_avg_fields\\r\\n  count(columns: [pokemon_v2_locationname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_locationname_max_fields\\r\\n  min: pokemon_v2_locationname_min_fields\\r\\n  stddev: pokemon_v2_locationname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_locationname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_locationname_stddev_samp_fields\\r\\n  sum: pokemon_v2_locationname_sum_fields\\r\\n  var_pop: pokemon_v2_locationname_var_pop_fields\\r\\n  var_samp: pokemon_v2_locationname_var_samp_fields\\r\\n  variance: pokemon_v2_locationname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_aggregate_order_by {\\r\\n  avg: pokemon_v2_locationname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_locationname_max_order_by\\r\\n  min: pokemon_v2_locationname_min_order_by\\r\\n  stddev: pokemon_v2_locationname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_locationname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_locationname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_locationname_sum_order_by\\r\\n  var_pop: pokemon_v2_locationname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_locationname_var_samp_order_by\\r\\n  variance: pokemon_v2_locationname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_locationname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_locationname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_locationname_bool_exp {\\r\\n  _and: [pokemon_v2_locationname_bool_exp!]\\r\\n  _not: pokemon_v2_locationname_bool_exp\\r\\n  _or: [pokemon_v2_locationname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  location_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_location: pokemon_v2_location_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_locationname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  location_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_locationname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  location_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_locationname\\\\\\\".\\r\\ninput pokemon_v2_locationname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_location: pokemon_v2_location_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\nenum pokemon_v2_locationname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  location_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_locationname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_locationname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_locationname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_locationname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  location_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_locationname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_locationname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_locationname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  location_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\ninput pokemon_v2_locationname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  location_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ntype pokemon_v2_machine {\\r\\n  growth_rate_id: Int\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  machine_number: Int!\\r\\n  move_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ntype pokemon_v2_machine_aggregate {\\r\\n  aggregate: pokemon_v2_machine_aggregate_fields\\r\\n  nodes: [pokemon_v2_machine!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ntype pokemon_v2_machine_aggregate_fields {\\r\\n  avg: pokemon_v2_machine_avg_fields\\r\\n  count(columns: [pokemon_v2_machine_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_machine_max_fields\\r\\n  min: pokemon_v2_machine_min_fields\\r\\n  stddev: pokemon_v2_machine_stddev_fields\\r\\n  stddev_pop: pokemon_v2_machine_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_machine_stddev_samp_fields\\r\\n  sum: pokemon_v2_machine_sum_fields\\r\\n  var_pop: pokemon_v2_machine_var_pop_fields\\r\\n  var_samp: pokemon_v2_machine_var_samp_fields\\r\\n  variance: pokemon_v2_machine_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_aggregate_order_by {\\r\\n  avg: pokemon_v2_machine_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_machine_max_order_by\\r\\n  min: pokemon_v2_machine_min_order_by\\r\\n  stddev: pokemon_v2_machine_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_machine_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_machine_stddev_samp_order_by\\r\\n  sum: pokemon_v2_machine_sum_order_by\\r\\n  var_pop: pokemon_v2_machine_var_pop_order_by\\r\\n  var_samp: pokemon_v2_machine_var_samp_order_by\\r\\n  variance: pokemon_v2_machine_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_machine_avg_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  machine_number: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_avg_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_machine\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_machine_bool_exp {\\r\\n  _and: [pokemon_v2_machine_bool_exp!]\\r\\n  _not: pokemon_v2_machine_bool_exp\\r\\n  _or: [pokemon_v2_machine_bool_exp!]\\r\\n  growth_rate_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  machine_number: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_bool_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_machine_max_fields {\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  machine_number: Int\\r\\n  move_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_max_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_machine_min_fields {\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  machine_number: Int\\r\\n  move_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_min_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_machine\\\\\\\".\\r\\ninput pokemon_v2_machine_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\nenum pokemon_v2_machine_select_column {\\r\\n  # column name\\r\\n  growth_rate_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n  # column name\\r\\n  machine_number\\r\\n  # column name\\r\\n  move_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_machine_stddev_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  machine_number: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_stddev_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_machine_stddev_pop_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  machine_number: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_stddev_pop_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_machine_stddev_samp_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  machine_number: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_stddev_samp_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_machine_sum_fields {\\r\\n  growth_rate_id: Int\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  machine_number: Int\\r\\n  move_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_sum_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_machine_var_pop_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  machine_number: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_var_pop_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_machine_var_samp_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  machine_number: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_var_samp_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_machine_variance_fields {\\r\\n  growth_rate_id: Float\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  machine_number: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\ninput pokemon_v2_machine_variance_order_by {\\r\\n  growth_rate_id: order_by\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  machine_number: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ntype pokemon_v2_move {\\r\\n  accuracy: Int\\r\\n  contest_effect_id: Int\\r\\n  contest_type_id: Int\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  move_damage_class_id: Int\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_target_id: Int\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemonV2ContestcombosBySecondMoveId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): [pokemon_v2_contestcombo!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2ContestcombosBySecondMoveId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): pokemon_v2_contestcombo_aggregate!\\r\\n  # An array relationship\\r\\n  pokemonV2SupercontestcombosBySecondMoveId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): [pokemon_v2_supercontestcombo!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2SupercontestcombosBySecondMoveId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): pokemon_v2_supercontestcombo_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_contestcombos(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): [pokemon_v2_contestcombo!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_contestcombos_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): pokemon_v2_contestcombo_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect\\r\\n  # An object relationship\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An array relationship\\r\\n  pokemon_v2_machines(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): [pokemon_v2_machine!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_machines_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): pokemon_v2_machine_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveattributemaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): [pokemon_v2_moveattributemap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveattributemaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): pokemon_v2_moveattributemap_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movechanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): [pokemon_v2_movechange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movechanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): pokemon_v2_movechange_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): [pokemon_v2_moveflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): pokemon_v2_moveflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemeta(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): [pokemon_v2_movemeta!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemeta_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): pokemon_v2_movemeta_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemetastatchanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): [pokemon_v2_movemetastatchange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemetastatchanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): pokemon_v2_movemetastatchange_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_movemetum: pokemon_v2_movemeta\\r\\n  # An array relationship\\r\\n  pokemon_v2_movenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): [pokemon_v2_movename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): pokemon_v2_movename_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonevolutions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonevolutions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonmoves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): [pokemon_v2_pokemonmove!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonmoves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): pokemon_v2_pokemonmove_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_supercontestcombos(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): [pokemon_v2_supercontestcombo!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_supercontestcombos_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): pokemon_v2_supercontestcombo_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_supercontesteffect: pokemon_v2_supercontesteffect\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  priority: Int\\r\\n  super_contest_effect_id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ntype pokemon_v2_move_aggregate {\\r\\n  aggregate: pokemon_v2_move_aggregate_fields\\r\\n  nodes: [pokemon_v2_move!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ntype pokemon_v2_move_aggregate_fields {\\r\\n  avg: pokemon_v2_move_avg_fields\\r\\n  count(columns: [pokemon_v2_move_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_move_max_fields\\r\\n  min: pokemon_v2_move_min_fields\\r\\n  stddev: pokemon_v2_move_stddev_fields\\r\\n  stddev_pop: pokemon_v2_move_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_move_stddev_samp_fields\\r\\n  sum: pokemon_v2_move_sum_fields\\r\\n  var_pop: pokemon_v2_move_var_pop_fields\\r\\n  var_samp: pokemon_v2_move_var_samp_fields\\r\\n  variance: pokemon_v2_move_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_aggregate_order_by {\\r\\n  avg: pokemon_v2_move_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_move_max_order_by\\r\\n  min: pokemon_v2_move_min_order_by\\r\\n  stddev: pokemon_v2_move_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_move_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_move_stddev_samp_order_by\\r\\n  sum: pokemon_v2_move_sum_order_by\\r\\n  var_pop: pokemon_v2_move_var_pop_order_by\\r\\n  var_samp: pokemon_v2_move_var_samp_order_by\\r\\n  variance: pokemon_v2_move_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_move_avg_fields {\\r\\n  accuracy: Float\\r\\n  contest_effect_id: Float\\r\\n  contest_type_id: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_target_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  priority: Float\\r\\n  super_contest_effect_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_avg_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_move\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_move_bool_exp {\\r\\n  _and: [pokemon_v2_move_bool_exp!]\\r\\n  _not: pokemon_v2_move_bool_exp\\r\\n  _or: [pokemon_v2_move_bool_exp!]\\r\\n  accuracy: Int_comparison_exp\\r\\n  contest_effect_id: Int_comparison_exp\\r\\n  contest_type_id: Int_comparison_exp\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  move_damage_class_id: Int_comparison_exp\\r\\n  move_effect_chance: Int_comparison_exp\\r\\n  move_effect_id: Int_comparison_exp\\r\\n  move_target_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemonV2ContestcombosBySecondMoveId: pokemon_v2_contestcombo_bool_exp\\r\\n  pokemonV2SupercontestcombosBySecondMoveId: pokemon_v2_supercontestcombo_bool_exp\\r\\n  pokemon_v2_contestcombos: pokemon_v2_contestcombo_bool_exp\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect_bool_exp\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype_bool_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_machines: pokemon_v2_machine_bool_exp\\r\\n  pokemon_v2_moveattributemaps: pokemon_v2_moveattributemap_bool_exp\\r\\n  pokemon_v2_movechanges: pokemon_v2_movechange_bool_exp\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_bool_exp\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_bool_exp\\r\\n  pokemon_v2_moveflavortexts: pokemon_v2_moveflavortext_bool_exp\\r\\n  pokemon_v2_movemeta: pokemon_v2_movemeta_bool_exp\\r\\n  pokemon_v2_movemetastatchanges: pokemon_v2_movemetastatchange_bool_exp\\r\\n  pokemon_v2_movemetum: pokemon_v2_movemeta_bool_exp\\r\\n  pokemon_v2_movenames: pokemon_v2_movename_bool_exp\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget_bool_exp\\r\\n  pokemon_v2_pokemonevolutions: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemon_v2_pokemonmoves: pokemon_v2_pokemonmove_bool_exp\\r\\n  pokemon_v2_supercontestcombos: pokemon_v2_supercontestcombo_bool_exp\\r\\n  pokemon_v2_supercontesteffect: pokemon_v2_supercontesteffect_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  power: Int_comparison_exp\\r\\n  pp: Int_comparison_exp\\r\\n  priority: Int_comparison_exp\\r\\n  super_contest_effect_id: Int_comparison_exp\\r\\n  type_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_move_max_fields {\\r\\n  accuracy: Int\\r\\n  contest_effect_id: Int\\r\\n  contest_type_id: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_target_id: Int\\r\\n  name: String\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  priority: Int\\r\\n  super_contest_effect_id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_max_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  name: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_move_min_fields {\\r\\n  accuracy: Int\\r\\n  contest_effect_id: Int\\r\\n  contest_type_id: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_target_id: Int\\r\\n  name: String\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  priority: Int\\r\\n  super_contest_effect_id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_min_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  name: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_move\\\\\\\".\\r\\ninput pokemon_v2_move_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  name: order_by\\r\\n  pokemonV2ContestcombosBySecondMoveId_aggregate: pokemon_v2_contestcombo_aggregate_order_by\\r\\n  pokemonV2SupercontestcombosBySecondMoveId_aggregate: pokemon_v2_supercontestcombo_aggregate_order_by\\r\\n  pokemon_v2_contestcombos_aggregate: pokemon_v2_contestcombo_aggregate_order_by\\r\\n  pokemon_v2_contesteffect: pokemon_v2_contesteffect_order_by\\r\\n  pokemon_v2_contesttype: pokemon_v2_contesttype_order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_machines_aggregate: pokemon_v2_machine_aggregate_order_by\\r\\n  pokemon_v2_moveattributemaps_aggregate: pokemon_v2_moveattributemap_aggregate_order_by\\r\\n  pokemon_v2_movechanges_aggregate: pokemon_v2_movechange_aggregate_order_by\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_order_by\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_order_by\\r\\n  pokemon_v2_moveflavortexts_aggregate: pokemon_v2_moveflavortext_aggregate_order_by\\r\\n  pokemon_v2_movemeta_aggregate: pokemon_v2_movemeta_aggregate_order_by\\r\\n  pokemon_v2_movemetastatchanges_aggregate: pokemon_v2_movemetastatchange_aggregate_order_by\\r\\n  pokemon_v2_movemetum: pokemon_v2_movemeta_order_by\\r\\n  pokemon_v2_movenames_aggregate: pokemon_v2_movename_aggregate_order_by\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget_order_by\\r\\n  pokemon_v2_pokemonevolutions_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemon_v2_pokemonmoves_aggregate: pokemon_v2_pokemonmove_aggregate_order_by\\r\\n  pokemon_v2_supercontestcombos_aggregate: pokemon_v2_supercontestcombo_aggregate_order_by\\r\\n  pokemon_v2_supercontesteffect: pokemon_v2_supercontesteffect_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\nenum pokemon_v2_move_select_column {\\r\\n  # column name\\r\\n  accuracy\\r\\n  # column name\\r\\n  contest_effect_id\\r\\n  # column name\\r\\n  contest_type_id\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  move_damage_class_id\\r\\n  # column name\\r\\n  move_effect_chance\\r\\n  # column name\\r\\n  move_effect_id\\r\\n  # column name\\r\\n  move_target_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  power\\r\\n  # column name\\r\\n  pp\\r\\n  # column name\\r\\n  priority\\r\\n  # column name\\r\\n  super_contest_effect_id\\r\\n  # column name\\r\\n  type_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_move_stddev_fields {\\r\\n  accuracy: Float\\r\\n  contest_effect_id: Float\\r\\n  contest_type_id: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_target_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  priority: Float\\r\\n  super_contest_effect_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_stddev_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_move_stddev_pop_fields {\\r\\n  accuracy: Float\\r\\n  contest_effect_id: Float\\r\\n  contest_type_id: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_target_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  priority: Float\\r\\n  super_contest_effect_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_stddev_pop_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_move_stddev_samp_fields {\\r\\n  accuracy: Float\\r\\n  contest_effect_id: Float\\r\\n  contest_type_id: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_target_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  priority: Float\\r\\n  super_contest_effect_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_stddev_samp_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_move_sum_fields {\\r\\n  accuracy: Int\\r\\n  contest_effect_id: Int\\r\\n  contest_type_id: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_target_id: Int\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  priority: Int\\r\\n  super_contest_effect_id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_sum_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_move_var_pop_fields {\\r\\n  accuracy: Float\\r\\n  contest_effect_id: Float\\r\\n  contest_type_id: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_target_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  priority: Float\\r\\n  super_contest_effect_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_var_pop_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_move_var_samp_fields {\\r\\n  accuracy: Float\\r\\n  contest_effect_id: Float\\r\\n  contest_type_id: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_target_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  priority: Float\\r\\n  super_contest_effect_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_var_samp_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_move_variance_fields {\\r\\n  accuracy: Float\\r\\n  contest_effect_id: Float\\r\\n  contest_type_id: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_target_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  priority: Float\\r\\n  super_contest_effect_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\ninput pokemon_v2_move_variance_order_by {\\r\\n  accuracy: order_by\\r\\n  contest_effect_id: order_by\\r\\n  contest_type_id: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_target_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  priority: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\ntype pokemon_v2_moveattribute {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveattributedescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): [pokemon_v2_moveattributedescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveattributedescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): pokemon_v2_moveattributedescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveattributemaps(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): [pokemon_v2_moveattributemap!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveattributemaps_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): pokemon_v2_moveattributemap_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveattributenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): [pokemon_v2_moveattributename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveattributenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): pokemon_v2_moveattributename_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\ntype pokemon_v2_moveattribute_aggregate {\\r\\n  aggregate: pokemon_v2_moveattribute_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveattribute!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\ntype pokemon_v2_moveattribute_aggregate_fields {\\r\\n  avg: pokemon_v2_moveattribute_avg_fields\\r\\n  count(columns: [pokemon_v2_moveattribute_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveattribute_max_fields\\r\\n  min: pokemon_v2_moveattribute_min_fields\\r\\n  stddev: pokemon_v2_moveattribute_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveattribute_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveattribute_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveattribute_sum_fields\\r\\n  var_pop: pokemon_v2_moveattribute_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveattribute_var_samp_fields\\r\\n  variance: pokemon_v2_moveattribute_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveattribute_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveattribute\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveattribute_bool_exp {\\r\\n  _and: [pokemon_v2_moveattribute_bool_exp!]\\r\\n  _not: pokemon_v2_moveattribute_bool_exp\\r\\n  _or: [pokemon_v2_moveattribute_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_moveattributedescriptions: pokemon_v2_moveattributedescription_bool_exp\\r\\n  pokemon_v2_moveattributemaps: pokemon_v2_moveattributemap_bool_exp\\r\\n  pokemon_v2_moveattributenames: pokemon_v2_moveattributename_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveattribute_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveattribute_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveattribute\\\\\\\".\\r\\ninput pokemon_v2_moveattribute_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_moveattributedescriptions_aggregate: pokemon_v2_moveattributedescription_aggregate_order_by\\r\\n  pokemon_v2_moveattributemaps_aggregate: pokemon_v2_moveattributemap_aggregate_order_by\\r\\n  pokemon_v2_moveattributenames_aggregate: pokemon_v2_moveattributename_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\nenum pokemon_v2_moveattribute_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveattribute_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveattribute_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveattribute_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveattribute_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveattribute_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveattribute_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveattribute_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ntype pokemon_v2_moveattributedescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ntype pokemon_v2_moveattributedescription_aggregate {\\r\\n  aggregate: pokemon_v2_moveattributedescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveattributedescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ntype pokemon_v2_moveattributedescription_aggregate_fields {\\r\\n  avg: pokemon_v2_moveattributedescription_avg_fields\\r\\n  count(columns: [pokemon_v2_moveattributedescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveattributedescription_max_fields\\r\\n  min: pokemon_v2_moveattributedescription_min_fields\\r\\n  stddev: pokemon_v2_moveattributedescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveattributedescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveattributedescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveattributedescription_sum_fields\\r\\n  var_pop: pokemon_v2_moveattributedescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveattributedescription_var_samp_fields\\r\\n  variance: pokemon_v2_moveattributedescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_moveattributedescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_moveattributedescription_max_order_by\\r\\n  min: pokemon_v2_moveattributedescription_min_order_by\\r\\n  stddev: pokemon_v2_moveattributedescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_moveattributedescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_moveattributedescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_moveattributedescription_sum_order_by\\r\\n  var_pop: pokemon_v2_moveattributedescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_moveattributedescription_var_samp_order_by\\r\\n  variance: pokemon_v2_moveattributedescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveattributedescription_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveattributedescription_bool_exp {\\r\\n  _and: [pokemon_v2_moveattributedescription_bool_exp!]\\r\\n  _not: pokemon_v2_moveattributedescription_bool_exp\\r\\n  _or: [pokemon_v2_moveattributedescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_attribute_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveattributedescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveattributedescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\".\\r\\ninput pokemon_v2_moveattributedescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\nenum pokemon_v2_moveattributedescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_attribute_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveattributedescription_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveattributedescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveattributedescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveattributedescription_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveattributedescription_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveattributedescription_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveattributedescription_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\ninput pokemon_v2_moveattributedescription_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ntype pokemon_v2_moveattributemap {\\r\\n  id: Int!\\r\\n  move_attribute_id: Int\\r\\n  move_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ntype pokemon_v2_moveattributemap_aggregate {\\r\\n  aggregate: pokemon_v2_moveattributemap_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveattributemap!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ntype pokemon_v2_moveattributemap_aggregate_fields {\\r\\n  avg: pokemon_v2_moveattributemap_avg_fields\\r\\n  count(columns: [pokemon_v2_moveattributemap_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveattributemap_max_fields\\r\\n  min: pokemon_v2_moveattributemap_min_fields\\r\\n  stddev: pokemon_v2_moveattributemap_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveattributemap_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveattributemap_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveattributemap_sum_fields\\r\\n  var_pop: pokemon_v2_moveattributemap_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveattributemap_var_samp_fields\\r\\n  variance: pokemon_v2_moveattributemap_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_aggregate_order_by {\\r\\n  avg: pokemon_v2_moveattributemap_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_moveattributemap_max_order_by\\r\\n  min: pokemon_v2_moveattributemap_min_order_by\\r\\n  stddev: pokemon_v2_moveattributemap_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_moveattributemap_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_moveattributemap_stddev_samp_order_by\\r\\n  sum: pokemon_v2_moveattributemap_sum_order_by\\r\\n  var_pop: pokemon_v2_moveattributemap_var_pop_order_by\\r\\n  var_samp: pokemon_v2_moveattributemap_var_samp_order_by\\r\\n  variance: pokemon_v2_moveattributemap_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveattributemap_avg_fields {\\r\\n  id: Float\\r\\n  move_attribute_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_avg_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveattributemap_bool_exp {\\r\\n  _and: [pokemon_v2_moveattributemap_bool_exp!]\\r\\n  _not: pokemon_v2_moveattributemap_bool_exp\\r\\n  _or: [pokemon_v2_moveattributemap_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  move_attribute_id: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveattributemap_max_fields {\\r\\n  id: Int\\r\\n  move_attribute_id: Int\\r\\n  move_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_max_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveattributemap_min_fields {\\r\\n  id: Int\\r\\n  move_attribute_id: Int\\r\\n  move_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_min_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveattributemap\\\\\\\".\\r\\ninput pokemon_v2_moveattributemap_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\nenum pokemon_v2_moveattributemap_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  move_attribute_id\\r\\n  # column name\\r\\n  move_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveattributemap_stddev_fields {\\r\\n  id: Float\\r\\n  move_attribute_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_stddev_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveattributemap_stddev_pop_fields {\\r\\n  id: Float\\r\\n  move_attribute_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveattributemap_stddev_samp_fields {\\r\\n  id: Float\\r\\n  move_attribute_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveattributemap_sum_fields {\\r\\n  id: Int\\r\\n  move_attribute_id: Int\\r\\n  move_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_sum_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveattributemap_var_pop_fields {\\r\\n  id: Float\\r\\n  move_attribute_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_var_pop_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveattributemap_var_samp_fields {\\r\\n  id: Float\\r\\n  move_attribute_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_var_samp_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveattributemap_variance_fields {\\r\\n  id: Float\\r\\n  move_attribute_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\ninput pokemon_v2_moveattributemap_variance_order_by {\\r\\n  id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ntype pokemon_v2_moveattributename {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ntype pokemon_v2_moveattributename_aggregate {\\r\\n  aggregate: pokemon_v2_moveattributename_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveattributename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ntype pokemon_v2_moveattributename_aggregate_fields {\\r\\n  avg: pokemon_v2_moveattributename_avg_fields\\r\\n  count(columns: [pokemon_v2_moveattributename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveattributename_max_fields\\r\\n  min: pokemon_v2_moveattributename_min_fields\\r\\n  stddev: pokemon_v2_moveattributename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveattributename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveattributename_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveattributename_sum_fields\\r\\n  var_pop: pokemon_v2_moveattributename_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveattributename_var_samp_fields\\r\\n  variance: pokemon_v2_moveattributename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_aggregate_order_by {\\r\\n  avg: pokemon_v2_moveattributename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_moveattributename_max_order_by\\r\\n  min: pokemon_v2_moveattributename_min_order_by\\r\\n  stddev: pokemon_v2_moveattributename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_moveattributename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_moveattributename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_moveattributename_sum_order_by\\r\\n  var_pop: pokemon_v2_moveattributename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_moveattributename_var_samp_order_by\\r\\n  variance: pokemon_v2_moveattributename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveattributename_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveattributename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveattributename_bool_exp {\\r\\n  _and: [pokemon_v2_moveattributename_bool_exp!]\\r\\n  _not: pokemon_v2_moveattributename_bool_exp\\r\\n  _or: [pokemon_v2_moveattributename_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_attribute_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveattributename_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveattributename_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveattributename\\\\\\\".\\r\\ninput pokemon_v2_moveattributename_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_moveattribute: pokemon_v2_moveattribute_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\nenum pokemon_v2_moveattributename_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_attribute_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveattributename_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveattributename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveattributename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveattributename_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_attribute_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveattributename_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveattributename_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveattributename_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_attribute_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\ninput pokemon_v2_moveattributename_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_attribute_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\ntype pokemon_v2_movebattlestyle {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movebattlestylenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): [pokemon_v2_movebattlestylename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movebattlestylenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): pokemon_v2_movebattlestylename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_naturebattlestylepreferences(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): [pokemon_v2_naturebattlestylepreference!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_naturebattlestylepreferences_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): pokemon_v2_naturebattlestylepreference_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\ntype pokemon_v2_movebattlestyle_aggregate {\\r\\n  aggregate: pokemon_v2_movebattlestyle_aggregate_fields\\r\\n  nodes: [pokemon_v2_movebattlestyle!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\ntype pokemon_v2_movebattlestyle_aggregate_fields {\\r\\n  avg: pokemon_v2_movebattlestyle_avg_fields\\r\\n  count(columns: [pokemon_v2_movebattlestyle_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movebattlestyle_max_fields\\r\\n  min: pokemon_v2_movebattlestyle_min_fields\\r\\n  stddev: pokemon_v2_movebattlestyle_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movebattlestyle_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movebattlestyle_stddev_samp_fields\\r\\n  sum: pokemon_v2_movebattlestyle_sum_fields\\r\\n  var_pop: pokemon_v2_movebattlestyle_var_pop_fields\\r\\n  var_samp: pokemon_v2_movebattlestyle_var_samp_fields\\r\\n  variance: pokemon_v2_movebattlestyle_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movebattlestyle_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movebattlestyle_bool_exp {\\r\\n  _and: [pokemon_v2_movebattlestyle_bool_exp!]\\r\\n  _not: pokemon_v2_movebattlestyle_bool_exp\\r\\n  _or: [pokemon_v2_movebattlestyle_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_movebattlestylenames: pokemon_v2_movebattlestylename_bool_exp\\r\\n  pokemon_v2_naturebattlestylepreferences: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movebattlestyle_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movebattlestyle_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\".\\r\\ninput pokemon_v2_movebattlestyle_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_movebattlestylenames_aggregate: pokemon_v2_movebattlestylename_aggregate_order_by\\r\\n  pokemon_v2_naturebattlestylepreferences_aggregate: pokemon_v2_naturebattlestylepreference_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\nenum pokemon_v2_movebattlestyle_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movebattlestyle_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movebattlestyle_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movebattlestyle_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movebattlestyle_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movebattlestyle_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movebattlestyle_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movebattlestyle_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ntype pokemon_v2_movebattlestylename {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_battle_style_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movebattlestyle: pokemon_v2_movebattlestyle\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ntype pokemon_v2_movebattlestylename_aggregate {\\r\\n  aggregate: pokemon_v2_movebattlestylename_aggregate_fields\\r\\n  nodes: [pokemon_v2_movebattlestylename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ntype pokemon_v2_movebattlestylename_aggregate_fields {\\r\\n  avg: pokemon_v2_movebattlestylename_avg_fields\\r\\n  count(columns: [pokemon_v2_movebattlestylename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movebattlestylename_max_fields\\r\\n  min: pokemon_v2_movebattlestylename_min_fields\\r\\n  stddev: pokemon_v2_movebattlestylename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movebattlestylename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movebattlestylename_stddev_samp_fields\\r\\n  sum: pokemon_v2_movebattlestylename_sum_fields\\r\\n  var_pop: pokemon_v2_movebattlestylename_var_pop_fields\\r\\n  var_samp: pokemon_v2_movebattlestylename_var_samp_fields\\r\\n  variance: pokemon_v2_movebattlestylename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_aggregate_order_by {\\r\\n  avg: pokemon_v2_movebattlestylename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movebattlestylename_max_order_by\\r\\n  min: pokemon_v2_movebattlestylename_min_order_by\\r\\n  stddev: pokemon_v2_movebattlestylename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movebattlestylename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movebattlestylename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movebattlestylename_sum_order_by\\r\\n  var_pop: pokemon_v2_movebattlestylename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movebattlestylename_var_samp_order_by\\r\\n  variance: pokemon_v2_movebattlestylename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movebattlestylename_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_battle_style_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movebattlestylename_bool_exp {\\r\\n  _and: [pokemon_v2_movebattlestylename_bool_exp!]\\r\\n  _not: pokemon_v2_movebattlestylename_bool_exp\\r\\n  _or: [pokemon_v2_movebattlestylename_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_battle_style_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movebattlestyle: pokemon_v2_movebattlestyle_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movebattlestylename_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_battle_style_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movebattlestylename_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_battle_style_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\".\\r\\ninput pokemon_v2_movebattlestylename_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movebattlestyle: pokemon_v2_movebattlestyle_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\nenum pokemon_v2_movebattlestylename_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_battle_style_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movebattlestylename_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_battle_style_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movebattlestylename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_battle_style_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movebattlestylename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_battle_style_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movebattlestylename_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_battle_style_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movebattlestylename_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_battle_style_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movebattlestylename_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_battle_style_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movebattlestylename_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_battle_style_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\ninput pokemon_v2_movebattlestylename_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_battle_style_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ntype pokemon_v2_movechange {\\r\\n  accuracy: Int\\r\\n  id: Int!\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  type_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ntype pokemon_v2_movechange_aggregate {\\r\\n  aggregate: pokemon_v2_movechange_aggregate_fields\\r\\n  nodes: [pokemon_v2_movechange!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ntype pokemon_v2_movechange_aggregate_fields {\\r\\n  avg: pokemon_v2_movechange_avg_fields\\r\\n  count(columns: [pokemon_v2_movechange_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movechange_max_fields\\r\\n  min: pokemon_v2_movechange_min_fields\\r\\n  stddev: pokemon_v2_movechange_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movechange_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movechange_stddev_samp_fields\\r\\n  sum: pokemon_v2_movechange_sum_fields\\r\\n  var_pop: pokemon_v2_movechange_var_pop_fields\\r\\n  var_samp: pokemon_v2_movechange_var_samp_fields\\r\\n  variance: pokemon_v2_movechange_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_aggregate_order_by {\\r\\n  avg: pokemon_v2_movechange_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movechange_max_order_by\\r\\n  min: pokemon_v2_movechange_min_order_by\\r\\n  stddev: pokemon_v2_movechange_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movechange_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movechange_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movechange_sum_order_by\\r\\n  var_pop: pokemon_v2_movechange_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movechange_var_samp_order_by\\r\\n  variance: pokemon_v2_movechange_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movechange_avg_fields {\\r\\n  accuracy: Float\\r\\n  id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  type_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_avg_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movechange\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movechange_bool_exp {\\r\\n  _and: [pokemon_v2_movechange_bool_exp!]\\r\\n  _not: pokemon_v2_movechange_bool_exp\\r\\n  _or: [pokemon_v2_movechange_bool_exp!]\\r\\n  accuracy: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  move_effect_chance: Int_comparison_exp\\r\\n  move_effect_id: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  power: Int_comparison_exp\\r\\n  pp: Int_comparison_exp\\r\\n  type_id: Int_comparison_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movechange_max_fields {\\r\\n  accuracy: Int\\r\\n  id: Int\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_id: Int\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  type_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_max_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movechange_min_fields {\\r\\n  accuracy: Int\\r\\n  id: Int\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_id: Int\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  type_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_min_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movechange\\\\\\\".\\r\\ninput pokemon_v2_movechange_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\nenum pokemon_v2_movechange_select_column {\\r\\n  # column name\\r\\n  accuracy\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  move_effect_chance\\r\\n  # column name\\r\\n  move_effect_id\\r\\n  # column name\\r\\n  move_id\\r\\n  # column name\\r\\n  power\\r\\n  # column name\\r\\n  pp\\r\\n  # column name\\r\\n  type_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movechange_stddev_fields {\\r\\n  accuracy: Float\\r\\n  id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  type_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_stddev_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movechange_stddev_pop_fields {\\r\\n  accuracy: Float\\r\\n  id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  type_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_stddev_pop_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movechange_stddev_samp_fields {\\r\\n  accuracy: Float\\r\\n  id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  type_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_stddev_samp_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movechange_sum_fields {\\r\\n  accuracy: Int\\r\\n  id: Int\\r\\n  move_effect_chance: Int\\r\\n  move_effect_id: Int\\r\\n  move_id: Int\\r\\n  power: Int\\r\\n  pp: Int\\r\\n  type_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_sum_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movechange_var_pop_fields {\\r\\n  accuracy: Float\\r\\n  id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  type_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_var_pop_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movechange_var_samp_fields {\\r\\n  accuracy: Float\\r\\n  id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  type_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_var_samp_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movechange_variance_fields {\\r\\n  accuracy: Float\\r\\n  id: Float\\r\\n  move_effect_chance: Float\\r\\n  move_effect_id: Float\\r\\n  move_id: Float\\r\\n  power: Float\\r\\n  pp: Float\\r\\n  type_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\ninput pokemon_v2_movechange_variance_order_by {\\r\\n  accuracy: order_by\\r\\n  id: order_by\\r\\n  move_effect_chance: order_by\\r\\n  move_effect_id: order_by\\r\\n  move_id: order_by\\r\\n  power: order_by\\r\\n  pp: order_by\\r\\n  type_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\ntype pokemon_v2_movedamageclass {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movedamageclassdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movedamageclassdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): pokemon_v2_movedamageclassdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movedamageclassnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movedamageclassnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): pokemon_v2_movedamageclassname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_stats(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_stat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_stat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_stat_bool_exp\\r\\n  ): [pokemon_v2_stat!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_stats_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_stat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_stat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_stat_bool_exp\\r\\n  ): pokemon_v2_stat_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_types(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): [pokemon_v2_type!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_types_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): pokemon_v2_type_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\ntype pokemon_v2_movedamageclass_aggregate {\\r\\n  aggregate: pokemon_v2_movedamageclass_aggregate_fields\\r\\n  nodes: [pokemon_v2_movedamageclass!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\ntype pokemon_v2_movedamageclass_aggregate_fields {\\r\\n  avg: pokemon_v2_movedamageclass_avg_fields\\r\\n  count(columns: [pokemon_v2_movedamageclass_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movedamageclass_max_fields\\r\\n  min: pokemon_v2_movedamageclass_min_fields\\r\\n  stddev: pokemon_v2_movedamageclass_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movedamageclass_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movedamageclass_stddev_samp_fields\\r\\n  sum: pokemon_v2_movedamageclass_sum_fields\\r\\n  var_pop: pokemon_v2_movedamageclass_var_pop_fields\\r\\n  var_samp: pokemon_v2_movedamageclass_var_samp_fields\\r\\n  variance: pokemon_v2_movedamageclass_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movedamageclass_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movedamageclass\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movedamageclass_bool_exp {\\r\\n  _and: [pokemon_v2_movedamageclass_bool_exp!]\\r\\n  _not: pokemon_v2_movedamageclass_bool_exp\\r\\n  _or: [pokemon_v2_movedamageclass_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_movedamageclassdescriptions: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  pokemon_v2_movedamageclassnames: pokemon_v2_movedamageclassname_bool_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_stats: pokemon_v2_stat_bool_exp\\r\\n  pokemon_v2_types: pokemon_v2_type_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movedamageclass_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movedamageclass_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movedamageclass\\\\\\\".\\r\\ninput pokemon_v2_movedamageclass_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_movedamageclassdescriptions_aggregate: pokemon_v2_movedamageclassdescription_aggregate_order_by\\r\\n  pokemon_v2_movedamageclassnames_aggregate: pokemon_v2_movedamageclassname_aggregate_order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n  pokemon_v2_stats_aggregate: pokemon_v2_stat_aggregate_order_by\\r\\n  pokemon_v2_types_aggregate: pokemon_v2_type_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\nenum pokemon_v2_movedamageclass_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movedamageclass_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movedamageclass_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movedamageclass_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movedamageclass_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movedamageclass_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movedamageclass_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movedamageclass_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ntype pokemon_v2_movedamageclassdescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ntype pokemon_v2_movedamageclassdescription_aggregate {\\r\\n  aggregate: pokemon_v2_movedamageclassdescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_movedamageclassdescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ntype pokemon_v2_movedamageclassdescription_aggregate_fields {\\r\\n  avg: pokemon_v2_movedamageclassdescription_avg_fields\\r\\n  count(columns: [pokemon_v2_movedamageclassdescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movedamageclassdescription_max_fields\\r\\n  min: pokemon_v2_movedamageclassdescription_min_fields\\r\\n  stddev: pokemon_v2_movedamageclassdescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movedamageclassdescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movedamageclassdescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_movedamageclassdescription_sum_fields\\r\\n  var_pop: pokemon_v2_movedamageclassdescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_movedamageclassdescription_var_samp_fields\\r\\n  variance: pokemon_v2_movedamageclassdescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_movedamageclassdescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movedamageclassdescription_max_order_by\\r\\n  min: pokemon_v2_movedamageclassdescription_min_order_by\\r\\n  stddev: pokemon_v2_movedamageclassdescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movedamageclassdescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movedamageclassdescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movedamageclassdescription_sum_order_by\\r\\n  var_pop: pokemon_v2_movedamageclassdescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movedamageclassdescription_var_samp_order_by\\r\\n  variance: pokemon_v2_movedamageclassdescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movedamageclassdescription_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movedamageclassdescription_bool_exp {\\r\\n  _and: [pokemon_v2_movedamageclassdescription_bool_exp!]\\r\\n  _not: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  _or: [pokemon_v2_movedamageclassdescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_damage_class_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movedamageclassdescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movedamageclassdescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\".\\r\\ninput pokemon_v2_movedamageclassdescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\nenum pokemon_v2_movedamageclassdescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_damage_class_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movedamageclassdescription_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movedamageclassdescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movedamageclassdescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movedamageclassdescription_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movedamageclassdescription_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movedamageclassdescription_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movedamageclassdescription_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassdescription_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ntype pokemon_v2_movedamageclassname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ntype pokemon_v2_movedamageclassname_aggregate {\\r\\n  aggregate: pokemon_v2_movedamageclassname_aggregate_fields\\r\\n  nodes: [pokemon_v2_movedamageclassname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ntype pokemon_v2_movedamageclassname_aggregate_fields {\\r\\n  avg: pokemon_v2_movedamageclassname_avg_fields\\r\\n  count(columns: [pokemon_v2_movedamageclassname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movedamageclassname_max_fields\\r\\n  min: pokemon_v2_movedamageclassname_min_fields\\r\\n  stddev: pokemon_v2_movedamageclassname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movedamageclassname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movedamageclassname_stddev_samp_fields\\r\\n  sum: pokemon_v2_movedamageclassname_sum_fields\\r\\n  var_pop: pokemon_v2_movedamageclassname_var_pop_fields\\r\\n  var_samp: pokemon_v2_movedamageclassname_var_samp_fields\\r\\n  variance: pokemon_v2_movedamageclassname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_aggregate_order_by {\\r\\n  avg: pokemon_v2_movedamageclassname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movedamageclassname_max_order_by\\r\\n  min: pokemon_v2_movedamageclassname_min_order_by\\r\\n  stddev: pokemon_v2_movedamageclassname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movedamageclassname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movedamageclassname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movedamageclassname_sum_order_by\\r\\n  var_pop: pokemon_v2_movedamageclassname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movedamageclassname_var_samp_order_by\\r\\n  variance: pokemon_v2_movedamageclassname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movedamageclassname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movedamageclassname_bool_exp {\\r\\n  _and: [pokemon_v2_movedamageclassname_bool_exp!]\\r\\n  _not: pokemon_v2_movedamageclassname_bool_exp\\r\\n  _or: [pokemon_v2_movedamageclassname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_damage_class_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movedamageclassname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movedamageclassname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\".\\r\\ninput pokemon_v2_movedamageclassname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\nenum pokemon_v2_movedamageclassname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_damage_class_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movedamageclassname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movedamageclassname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movedamageclassname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movedamageclassname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_damage_class_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movedamageclassname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movedamageclassname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movedamageclassname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\ninput pokemon_v2_movedamageclassname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\ntype pokemon_v2_moveeffect {\\r\\n  id: Int!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movechanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): [pokemon_v2_movechange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movechanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): pokemon_v2_movechange_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveeffectchanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveeffectchanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): pokemon_v2_moveeffectchange_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveeffecteffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffecteffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveeffecteffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffecteffecttext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\ntype pokemon_v2_moveeffect_aggregate {\\r\\n  aggregate: pokemon_v2_moveeffect_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveeffect!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\ntype pokemon_v2_moveeffect_aggregate_fields {\\r\\n  avg: pokemon_v2_moveeffect_avg_fields\\r\\n  count(columns: [pokemon_v2_moveeffect_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveeffect_max_fields\\r\\n  min: pokemon_v2_moveeffect_min_fields\\r\\n  stddev: pokemon_v2_moveeffect_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveeffect_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveeffect_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveeffect_sum_fields\\r\\n  var_pop: pokemon_v2_moveeffect_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveeffect_var_samp_fields\\r\\n  variance: pokemon_v2_moveeffect_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveeffect_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveeffect\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveeffect_bool_exp {\\r\\n  _and: [pokemon_v2_moveeffect_bool_exp!]\\r\\n  _not: pokemon_v2_moveeffect_bool_exp\\r\\n  _or: [pokemon_v2_moveeffect_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_movechanges: pokemon_v2_movechange_bool_exp\\r\\n  pokemon_v2_moveeffectchanges: pokemon_v2_moveeffectchange_bool_exp\\r\\n  pokemon_v2_moveeffecteffecttexts: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveeffect_max_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveeffect_min_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveeffect\\\\\\\".\\r\\ninput pokemon_v2_moveeffect_order_by {\\r\\n  id: order_by\\r\\n  pokemon_v2_movechanges_aggregate: pokemon_v2_movechange_aggregate_order_by\\r\\n  pokemon_v2_moveeffectchanges_aggregate: pokemon_v2_moveeffectchange_aggregate_order_by\\r\\n  pokemon_v2_moveeffecteffecttexts_aggregate: pokemon_v2_moveeffecteffecttext_aggregate_order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\nenum pokemon_v2_moveeffect_select_column {\\r\\n  # column name\\r\\n  id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveeffect_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveeffect_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveeffect_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveeffect_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveeffect_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveeffect_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveeffect_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ntype pokemon_v2_moveeffectchange {\\r\\n  id: Int!\\r\\n  move_effect_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveeffectchangeeffecttexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchangeeffecttext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveeffectchangeeffecttexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffectchangeeffecttext_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ntype pokemon_v2_moveeffectchange_aggregate {\\r\\n  aggregate: pokemon_v2_moveeffectchange_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveeffectchange!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ntype pokemon_v2_moveeffectchange_aggregate_fields {\\r\\n  avg: pokemon_v2_moveeffectchange_avg_fields\\r\\n  count(columns: [pokemon_v2_moveeffectchange_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveeffectchange_max_fields\\r\\n  min: pokemon_v2_moveeffectchange_min_fields\\r\\n  stddev: pokemon_v2_moveeffectchange_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveeffectchange_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveeffectchange_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveeffectchange_sum_fields\\r\\n  var_pop: pokemon_v2_moveeffectchange_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveeffectchange_var_samp_fields\\r\\n  variance: pokemon_v2_moveeffectchange_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_aggregate_order_by {\\r\\n  avg: pokemon_v2_moveeffectchange_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_moveeffectchange_max_order_by\\r\\n  min: pokemon_v2_moveeffectchange_min_order_by\\r\\n  stddev: pokemon_v2_moveeffectchange_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_moveeffectchange_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_moveeffectchange_stddev_samp_order_by\\r\\n  sum: pokemon_v2_moveeffectchange_sum_order_by\\r\\n  var_pop: pokemon_v2_moveeffectchange_var_pop_order_by\\r\\n  var_samp: pokemon_v2_moveeffectchange_var_samp_order_by\\r\\n  variance: pokemon_v2_moveeffectchange_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveeffectchange_avg_fields {\\r\\n  id: Float\\r\\n  move_effect_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_avg_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveeffectchange_bool_exp {\\r\\n  _and: [pokemon_v2_moveeffectchange_bool_exp!]\\r\\n  _not: pokemon_v2_moveeffectchange_bool_exp\\r\\n  _or: [pokemon_v2_moveeffectchange_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  move_effect_id: Int_comparison_exp\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_bool_exp\\r\\n  pokemon_v2_moveeffectchangeeffecttexts: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveeffectchange_max_fields {\\r\\n  id: Int\\r\\n  move_effect_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_max_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveeffectchange_min_fields {\\r\\n  id: Int\\r\\n  move_effect_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_min_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\".\\r\\ninput pokemon_v2_moveeffectchange_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_order_by\\r\\n  pokemon_v2_moveeffectchangeeffecttexts_aggregate: pokemon_v2_moveeffectchangeeffecttext_aggregate_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\nenum pokemon_v2_moveeffectchange_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  move_effect_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveeffectchange_stddev_fields {\\r\\n  id: Float\\r\\n  move_effect_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_stddev_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveeffectchange_stddev_pop_fields {\\r\\n  id: Float\\r\\n  move_effect_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveeffectchange_stddev_samp_fields {\\r\\n  id: Float\\r\\n  move_effect_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveeffectchange_sum_fields {\\r\\n  id: Int\\r\\n  move_effect_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_sum_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveeffectchange_var_pop_fields {\\r\\n  id: Float\\r\\n  move_effect_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_var_pop_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveeffectchange_var_samp_fields {\\r\\n  id: Float\\r\\n  move_effect_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_var_samp_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveeffectchange_variance_fields {\\r\\n  id: Float\\r\\n  move_effect_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchange_variance_order_by {\\r\\n  id: order_by\\r\\n  move_effect_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ntype pokemon_v2_moveeffectchangeeffecttext {\\r\\n  effect: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_effect_change_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveeffectchange: pokemon_v2_moveeffectchange\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_aggregate {\\r\\n  aggregate: pokemon_v2_moveeffectchangeeffecttext_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveeffectchangeeffecttext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_aggregate_fields {\\r\\n  avg: pokemon_v2_moveeffectchangeeffecttext_avg_fields\\r\\n  count(columns: [pokemon_v2_moveeffectchangeeffecttext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveeffectchangeeffecttext_max_fields\\r\\n  min: pokemon_v2_moveeffectchangeeffecttext_min_fields\\r\\n  stddev: pokemon_v2_moveeffectchangeeffecttext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveeffectchangeeffecttext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveeffectchangeeffecttext_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveeffectchangeeffecttext_sum_fields\\r\\n  var_pop: pokemon_v2_moveeffectchangeeffecttext_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveeffectchangeeffecttext_var_samp_fields\\r\\n  variance: pokemon_v2_moveeffectchangeeffecttext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_aggregate_order_by {\\r\\n  avg: pokemon_v2_moveeffectchangeeffecttext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_moveeffectchangeeffecttext_max_order_by\\r\\n  min: pokemon_v2_moveeffectchangeeffecttext_min_order_by\\r\\n  stddev: pokemon_v2_moveeffectchangeeffecttext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_moveeffectchangeeffecttext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_moveeffectchangeeffecttext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_moveeffectchangeeffecttext_sum_order_by\\r\\n  var_pop: pokemon_v2_moveeffectchangeeffecttext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_moveeffectchangeeffecttext_var_samp_order_by\\r\\n  variance: pokemon_v2_moveeffectchangeeffecttext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_change_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_bool_exp {\\r\\n  _and: [pokemon_v2_moveeffectchangeeffecttext_bool_exp!]\\r\\n  _not: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  _or: [pokemon_v2_moveeffectchangeeffecttext_bool_exp!]\\r\\n  effect: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_effect_change_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_moveeffectchange: pokemon_v2_moveeffectchange_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_max_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_effect_change_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_max_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_min_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_effect_change_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_min_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\".\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_moveeffectchange: pokemon_v2_moveeffectchange_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\nenum pokemon_v2_moveeffectchangeeffecttext_select_column {\\r\\n  # column name\\r\\n  effect\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_effect_change_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_change_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_change_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_change_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_effect_change_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_change_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_change_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveeffectchangeeffecttext_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_change_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffectchangeeffecttext_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_change_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_moveeffecteffecttext {\\r\\n  effect: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_effect_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect\\r\\n  short_effect: String!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_moveeffecteffecttext_aggregate {\\r\\n  aggregate: pokemon_v2_moveeffecteffecttext_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveeffecteffecttext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ntype pokemon_v2_moveeffecteffecttext_aggregate_fields {\\r\\n  avg: pokemon_v2_moveeffecteffecttext_avg_fields\\r\\n  count(columns: [pokemon_v2_moveeffecteffecttext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveeffecteffecttext_max_fields\\r\\n  min: pokemon_v2_moveeffecteffecttext_min_fields\\r\\n  stddev: pokemon_v2_moveeffecteffecttext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveeffecteffecttext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveeffecteffecttext_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveeffecteffecttext_sum_fields\\r\\n  var_pop: pokemon_v2_moveeffecteffecttext_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveeffecteffecttext_var_samp_fields\\r\\n  variance: pokemon_v2_moveeffecteffecttext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_aggregate_order_by {\\r\\n  avg: pokemon_v2_moveeffecteffecttext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_moveeffecteffecttext_max_order_by\\r\\n  min: pokemon_v2_moveeffecteffecttext_min_order_by\\r\\n  stddev: pokemon_v2_moveeffecteffecttext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_moveeffecteffecttext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_moveeffecteffecttext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_moveeffecteffecttext_sum_order_by\\r\\n  var_pop: pokemon_v2_moveeffecteffecttext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_moveeffecteffecttext_var_samp_order_by\\r\\n  variance: pokemon_v2_moveeffecteffecttext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveeffecteffecttext_bool_exp {\\r\\n  _and: [pokemon_v2_moveeffecteffecttext_bool_exp!]\\r\\n  _not: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  _or: [pokemon_v2_moveeffecteffecttext_bool_exp!]\\r\\n  effect: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_effect_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_bool_exp\\r\\n  short_effect: String_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_max_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_effect_id: Int\\r\\n  short_effect: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_max_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_min_fields {\\r\\n  effect: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_effect_id: Int\\r\\n  short_effect: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_min_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\".\\r\\ninput pokemon_v2_moveeffecteffecttext_order_by {\\r\\n  effect: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_moveeffect: pokemon_v2_moveeffect_order_by\\r\\n  short_effect: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\nenum pokemon_v2_moveeffecteffecttext_select_column {\\r\\n  # column name\\r\\n  effect\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_effect_id\\r\\n  # column name\\r\\n  short_effect\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_effect_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveeffecteffecttext_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\ninput pokemon_v2_moveeffecteffecttext_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_effect_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ntype pokemon_v2_moveflavortext {\\r\\n  flavor_text: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ntype pokemon_v2_moveflavortext_aggregate {\\r\\n  aggregate: pokemon_v2_moveflavortext_aggregate_fields\\r\\n  nodes: [pokemon_v2_moveflavortext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ntype pokemon_v2_moveflavortext_aggregate_fields {\\r\\n  avg: pokemon_v2_moveflavortext_avg_fields\\r\\n  count(columns: [pokemon_v2_moveflavortext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_moveflavortext_max_fields\\r\\n  min: pokemon_v2_moveflavortext_min_fields\\r\\n  stddev: pokemon_v2_moveflavortext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_moveflavortext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_moveflavortext_stddev_samp_fields\\r\\n  sum: pokemon_v2_moveflavortext_sum_fields\\r\\n  var_pop: pokemon_v2_moveflavortext_var_pop_fields\\r\\n  var_samp: pokemon_v2_moveflavortext_var_samp_fields\\r\\n  variance: pokemon_v2_moveflavortext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_aggregate_order_by {\\r\\n  avg: pokemon_v2_moveflavortext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_moveflavortext_max_order_by\\r\\n  min: pokemon_v2_moveflavortext_min_order_by\\r\\n  stddev: pokemon_v2_moveflavortext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_moveflavortext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_moveflavortext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_moveflavortext_sum_order_by\\r\\n  var_pop: pokemon_v2_moveflavortext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_moveflavortext_var_samp_order_by\\r\\n  variance: pokemon_v2_moveflavortext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_moveflavortext_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_moveflavortext_bool_exp {\\r\\n  _and: [pokemon_v2_moveflavortext_bool_exp!]\\r\\n  _not: pokemon_v2_moveflavortext_bool_exp\\r\\n  _or: [pokemon_v2_moveflavortext_bool_exp!]\\r\\n  flavor_text: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_moveflavortext_max_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_max_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_moveflavortext_min_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_min_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_moveflavortext\\\\\\\".\\r\\ninput pokemon_v2_moveflavortext_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\nenum pokemon_v2_moveflavortext_select_column {\\r\\n  # column name\\r\\n  flavor_text\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_moveflavortext_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_moveflavortext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_moveflavortext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_moveflavortext_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_moveflavortext_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_moveflavortext_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_moveflavortext_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\ninput pokemon_v2_moveflavortext_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethod {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movelearnmethoddescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethoddescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movelearnmethoddescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): pokemon_v2_movelearnmethoddescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movelearnmethodnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethodname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movelearnmethodnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): pokemon_v2_movelearnmethodname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonmoves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): [pokemon_v2_pokemonmove!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonmoves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): pokemon_v2_pokemonmove_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_versiongroupmovelearnmethods(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): [pokemon_v2_versiongroupmovelearnmethod!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versiongroupmovelearnmethods_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): pokemon_v2_versiongroupmovelearnmethod_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethod_aggregate {\\r\\n  aggregate: pokemon_v2_movelearnmethod_aggregate_fields\\r\\n  nodes: [pokemon_v2_movelearnmethod!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethod_aggregate_fields {\\r\\n  avg: pokemon_v2_movelearnmethod_avg_fields\\r\\n  count(columns: [pokemon_v2_movelearnmethod_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movelearnmethod_max_fields\\r\\n  min: pokemon_v2_movelearnmethod_min_fields\\r\\n  stddev: pokemon_v2_movelearnmethod_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movelearnmethod_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movelearnmethod_stddev_samp_fields\\r\\n  sum: pokemon_v2_movelearnmethod_sum_fields\\r\\n  var_pop: pokemon_v2_movelearnmethod_var_pop_fields\\r\\n  var_samp: pokemon_v2_movelearnmethod_var_samp_fields\\r\\n  variance: pokemon_v2_movelearnmethod_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movelearnmethod_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movelearnmethod_bool_exp {\\r\\n  _and: [pokemon_v2_movelearnmethod_bool_exp!]\\r\\n  _not: pokemon_v2_movelearnmethod_bool_exp\\r\\n  _or: [pokemon_v2_movelearnmethod_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_movelearnmethoddescriptions: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  pokemon_v2_movelearnmethodnames: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  pokemon_v2_pokemonmoves: pokemon_v2_pokemonmove_bool_exp\\r\\n  pokemon_v2_versiongroupmovelearnmethods: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movelearnmethod_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movelearnmethod_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\".\\r\\ninput pokemon_v2_movelearnmethod_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_movelearnmethoddescriptions_aggregate: pokemon_v2_movelearnmethoddescription_aggregate_order_by\\r\\n  pokemon_v2_movelearnmethodnames_aggregate: pokemon_v2_movelearnmethodname_aggregate_order_by\\r\\n  pokemon_v2_pokemonmoves_aggregate: pokemon_v2_pokemonmove_aggregate_order_by\\r\\n  pokemon_v2_versiongroupmovelearnmethods_aggregate: pokemon_v2_versiongroupmovelearnmethod_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\nenum pokemon_v2_movelearnmethod_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movelearnmethod_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movelearnmethod_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movelearnmethod_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movelearnmethod_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movelearnmethod_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movelearnmethod_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movelearnmethod_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethoddescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethoddescription_aggregate {\\r\\n  aggregate: pokemon_v2_movelearnmethoddescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_movelearnmethoddescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethoddescription_aggregate_fields {\\r\\n  avg: pokemon_v2_movelearnmethoddescription_avg_fields\\r\\n  count(columns: [pokemon_v2_movelearnmethoddescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movelearnmethoddescription_max_fields\\r\\n  min: pokemon_v2_movelearnmethoddescription_min_fields\\r\\n  stddev: pokemon_v2_movelearnmethoddescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movelearnmethoddescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movelearnmethoddescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_movelearnmethoddescription_sum_fields\\r\\n  var_pop: pokemon_v2_movelearnmethoddescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_movelearnmethoddescription_var_samp_fields\\r\\n  variance: pokemon_v2_movelearnmethoddescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_movelearnmethoddescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movelearnmethoddescription_max_order_by\\r\\n  min: pokemon_v2_movelearnmethoddescription_min_order_by\\r\\n  stddev: pokemon_v2_movelearnmethoddescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movelearnmethoddescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movelearnmethoddescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movelearnmethoddescription_sum_order_by\\r\\n  var_pop: pokemon_v2_movelearnmethoddescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movelearnmethoddescription_var_samp_order_by\\r\\n  variance: pokemon_v2_movelearnmethoddescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movelearnmethoddescription_bool_exp {\\r\\n  _and: [pokemon_v2_movelearnmethoddescription_bool_exp!]\\r\\n  _not: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  _or: [pokemon_v2_movelearnmethoddescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_learn_method_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\".\\r\\ninput pokemon_v2_movelearnmethoddescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\nenum pokemon_v2_movelearnmethoddescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_learn_method_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movelearnmethoddescription_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethoddescription_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethodname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethodname_aggregate {\\r\\n  aggregate: pokemon_v2_movelearnmethodname_aggregate_fields\\r\\n  nodes: [pokemon_v2_movelearnmethodname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ntype pokemon_v2_movelearnmethodname_aggregate_fields {\\r\\n  avg: pokemon_v2_movelearnmethodname_avg_fields\\r\\n  count(columns: [pokemon_v2_movelearnmethodname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movelearnmethodname_max_fields\\r\\n  min: pokemon_v2_movelearnmethodname_min_fields\\r\\n  stddev: pokemon_v2_movelearnmethodname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movelearnmethodname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movelearnmethodname_stddev_samp_fields\\r\\n  sum: pokemon_v2_movelearnmethodname_sum_fields\\r\\n  var_pop: pokemon_v2_movelearnmethodname_var_pop_fields\\r\\n  var_samp: pokemon_v2_movelearnmethodname_var_samp_fields\\r\\n  variance: pokemon_v2_movelearnmethodname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_aggregate_order_by {\\r\\n  avg: pokemon_v2_movelearnmethodname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movelearnmethodname_max_order_by\\r\\n  min: pokemon_v2_movelearnmethodname_min_order_by\\r\\n  stddev: pokemon_v2_movelearnmethodname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movelearnmethodname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movelearnmethodname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movelearnmethodname_sum_order_by\\r\\n  var_pop: pokemon_v2_movelearnmethodname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movelearnmethodname_var_samp_order_by\\r\\n  variance: pokemon_v2_movelearnmethodname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movelearnmethodname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movelearnmethodname_bool_exp {\\r\\n  _and: [pokemon_v2_movelearnmethodname_bool_exp!]\\r\\n  _not: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  _or: [pokemon_v2_movelearnmethodname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_learn_method_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movelearnmethodname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movelearnmethodname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\".\\r\\ninput pokemon_v2_movelearnmethodname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\nenum pokemon_v2_movelearnmethodname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_learn_method_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movelearnmethodname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movelearnmethodname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movelearnmethodname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movelearnmethodname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_learn_method_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movelearnmethodname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movelearnmethodname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movelearnmethodname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_learn_method_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\ninput pokemon_v2_movelearnmethodname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ntype pokemon_v2_movemeta {\\r\\n  ailment_chance: Int\\r\\n  crit_rate: Int\\r\\n  drain: Int\\r\\n  flinch_chance: Int\\r\\n  healing: Int\\r\\n  id: Int!\\r\\n  max_hits: Int\\r\\n  max_turns: Int\\r\\n  min_hits: Int\\r\\n  min_turns: Int\\r\\n  move_id: Int!\\r\\n  move_meta_ailment_id: Int\\r\\n  move_meta_category_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move!\\r\\n  # An object relationship\\r\\n  pokemon_v2_movemetaailment: pokemon_v2_movemetaailment\\r\\n  # An object relationship\\r\\n  pokemon_v2_movemetacategory: pokemon_v2_movemetacategory\\r\\n  stat_chance: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ntype pokemon_v2_movemeta_aggregate {\\r\\n  aggregate: pokemon_v2_movemeta_aggregate_fields\\r\\n  nodes: [pokemon_v2_movemeta!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ntype pokemon_v2_movemeta_aggregate_fields {\\r\\n  avg: pokemon_v2_movemeta_avg_fields\\r\\n  count(columns: [pokemon_v2_movemeta_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movemeta_max_fields\\r\\n  min: pokemon_v2_movemeta_min_fields\\r\\n  stddev: pokemon_v2_movemeta_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movemeta_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movemeta_stddev_samp_fields\\r\\n  sum: pokemon_v2_movemeta_sum_fields\\r\\n  var_pop: pokemon_v2_movemeta_var_pop_fields\\r\\n  var_samp: pokemon_v2_movemeta_var_samp_fields\\r\\n  variance: pokemon_v2_movemeta_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_aggregate_order_by {\\r\\n  avg: pokemon_v2_movemeta_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movemeta_max_order_by\\r\\n  min: pokemon_v2_movemeta_min_order_by\\r\\n  stddev: pokemon_v2_movemeta_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movemeta_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movemeta_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movemeta_sum_order_by\\r\\n  var_pop: pokemon_v2_movemeta_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movemeta_var_samp_order_by\\r\\n  variance: pokemon_v2_movemeta_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movemeta_avg_fields {\\r\\n  ailment_chance: Float\\r\\n  crit_rate: Float\\r\\n  drain: Float\\r\\n  flinch_chance: Float\\r\\n  healing: Float\\r\\n  id: Float\\r\\n  max_hits: Float\\r\\n  max_turns: Float\\r\\n  min_hits: Float\\r\\n  min_turns: Float\\r\\n  move_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n  move_meta_category_id: Float\\r\\n  stat_chance: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_avg_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movemeta\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movemeta_bool_exp {\\r\\n  _and: [pokemon_v2_movemeta_bool_exp!]\\r\\n  _not: pokemon_v2_movemeta_bool_exp\\r\\n  _or: [pokemon_v2_movemeta_bool_exp!]\\r\\n  ailment_chance: Int_comparison_exp\\r\\n  crit_rate: Int_comparison_exp\\r\\n  drain: Int_comparison_exp\\r\\n  flinch_chance: Int_comparison_exp\\r\\n  healing: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  max_hits: Int_comparison_exp\\r\\n  max_turns: Int_comparison_exp\\r\\n  min_hits: Int_comparison_exp\\r\\n  min_turns: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  move_meta_ailment_id: Int_comparison_exp\\r\\n  move_meta_category_id: Int_comparison_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_movemetaailment: pokemon_v2_movemetaailment_bool_exp\\r\\n  pokemon_v2_movemetacategory: pokemon_v2_movemetacategory_bool_exp\\r\\n  stat_chance: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movemeta_max_fields {\\r\\n  ailment_chance: Int\\r\\n  crit_rate: Int\\r\\n  drain: Int\\r\\n  flinch_chance: Int\\r\\n  healing: Int\\r\\n  id: Int\\r\\n  max_hits: Int\\r\\n  max_turns: Int\\r\\n  min_hits: Int\\r\\n  min_turns: Int\\r\\n  move_id: Int\\r\\n  move_meta_ailment_id: Int\\r\\n  move_meta_category_id: Int\\r\\n  stat_chance: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_max_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movemeta_min_fields {\\r\\n  ailment_chance: Int\\r\\n  crit_rate: Int\\r\\n  drain: Int\\r\\n  flinch_chance: Int\\r\\n  healing: Int\\r\\n  id: Int\\r\\n  max_hits: Int\\r\\n  max_turns: Int\\r\\n  min_hits: Int\\r\\n  min_turns: Int\\r\\n  move_id: Int\\r\\n  move_meta_ailment_id: Int\\r\\n  move_meta_category_id: Int\\r\\n  stat_chance: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_min_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movemeta\\\\\\\".\\r\\ninput pokemon_v2_movemeta_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_movemetaailment: pokemon_v2_movemetaailment_order_by\\r\\n  pokemon_v2_movemetacategory: pokemon_v2_movemetacategory_order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\nenum pokemon_v2_movemeta_select_column {\\r\\n  # column name\\r\\n  ailment_chance\\r\\n  # column name\\r\\n  crit_rate\\r\\n  # column name\\r\\n  drain\\r\\n  # column name\\r\\n  flinch_chance\\r\\n  # column name\\r\\n  healing\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  max_hits\\r\\n  # column name\\r\\n  max_turns\\r\\n  # column name\\r\\n  min_hits\\r\\n  # column name\\r\\n  min_turns\\r\\n  # column name\\r\\n  move_id\\r\\n  # column name\\r\\n  move_meta_ailment_id\\r\\n  # column name\\r\\n  move_meta_category_id\\r\\n  # column name\\r\\n  stat_chance\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movemeta_stddev_fields {\\r\\n  ailment_chance: Float\\r\\n  crit_rate: Float\\r\\n  drain: Float\\r\\n  flinch_chance: Float\\r\\n  healing: Float\\r\\n  id: Float\\r\\n  max_hits: Float\\r\\n  max_turns: Float\\r\\n  min_hits: Float\\r\\n  min_turns: Float\\r\\n  move_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n  move_meta_category_id: Float\\r\\n  stat_chance: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_stddev_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movemeta_stddev_pop_fields {\\r\\n  ailment_chance: Float\\r\\n  crit_rate: Float\\r\\n  drain: Float\\r\\n  flinch_chance: Float\\r\\n  healing: Float\\r\\n  id: Float\\r\\n  max_hits: Float\\r\\n  max_turns: Float\\r\\n  min_hits: Float\\r\\n  min_turns: Float\\r\\n  move_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n  move_meta_category_id: Float\\r\\n  stat_chance: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_stddev_pop_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movemeta_stddev_samp_fields {\\r\\n  ailment_chance: Float\\r\\n  crit_rate: Float\\r\\n  drain: Float\\r\\n  flinch_chance: Float\\r\\n  healing: Float\\r\\n  id: Float\\r\\n  max_hits: Float\\r\\n  max_turns: Float\\r\\n  min_hits: Float\\r\\n  min_turns: Float\\r\\n  move_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n  move_meta_category_id: Float\\r\\n  stat_chance: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_stddev_samp_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movemeta_sum_fields {\\r\\n  ailment_chance: Int\\r\\n  crit_rate: Int\\r\\n  drain: Int\\r\\n  flinch_chance: Int\\r\\n  healing: Int\\r\\n  id: Int\\r\\n  max_hits: Int\\r\\n  max_turns: Int\\r\\n  min_hits: Int\\r\\n  min_turns: Int\\r\\n  move_id: Int\\r\\n  move_meta_ailment_id: Int\\r\\n  move_meta_category_id: Int\\r\\n  stat_chance: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_sum_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movemeta_var_pop_fields {\\r\\n  ailment_chance: Float\\r\\n  crit_rate: Float\\r\\n  drain: Float\\r\\n  flinch_chance: Float\\r\\n  healing: Float\\r\\n  id: Float\\r\\n  max_hits: Float\\r\\n  max_turns: Float\\r\\n  min_hits: Float\\r\\n  min_turns: Float\\r\\n  move_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n  move_meta_category_id: Float\\r\\n  stat_chance: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_var_pop_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movemeta_var_samp_fields {\\r\\n  ailment_chance: Float\\r\\n  crit_rate: Float\\r\\n  drain: Float\\r\\n  flinch_chance: Float\\r\\n  healing: Float\\r\\n  id: Float\\r\\n  max_hits: Float\\r\\n  max_turns: Float\\r\\n  min_hits: Float\\r\\n  min_turns: Float\\r\\n  move_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n  move_meta_category_id: Float\\r\\n  stat_chance: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_var_samp_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movemeta_variance_fields {\\r\\n  ailment_chance: Float\\r\\n  crit_rate: Float\\r\\n  drain: Float\\r\\n  flinch_chance: Float\\r\\n  healing: Float\\r\\n  id: Float\\r\\n  max_hits: Float\\r\\n  max_turns: Float\\r\\n  min_hits: Float\\r\\n  min_turns: Float\\r\\n  move_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n  move_meta_category_id: Float\\r\\n  stat_chance: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movemeta\\\\\\\"\\r\\ninput pokemon_v2_movemeta_variance_order_by {\\r\\n  ailment_chance: order_by\\r\\n  crit_rate: order_by\\r\\n  drain: order_by\\r\\n  flinch_chance: order_by\\r\\n  healing: order_by\\r\\n  id: order_by\\r\\n  max_hits: order_by\\r\\n  max_turns: order_by\\r\\n  min_hits: order_by\\r\\n  min_turns: order_by\\r\\n  move_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  stat_chance: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\ntype pokemon_v2_movemetaailment {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemeta(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): [pokemon_v2_movemeta!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemeta_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): pokemon_v2_movemeta_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemetaailmentnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): [pokemon_v2_movemetaailmentname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemetaailmentnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): pokemon_v2_movemetaailmentname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\ntype pokemon_v2_movemetaailment_aggregate {\\r\\n  aggregate: pokemon_v2_movemetaailment_aggregate_fields\\r\\n  nodes: [pokemon_v2_movemetaailment!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\ntype pokemon_v2_movemetaailment_aggregate_fields {\\r\\n  avg: pokemon_v2_movemetaailment_avg_fields\\r\\n  count(columns: [pokemon_v2_movemetaailment_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movemetaailment_max_fields\\r\\n  min: pokemon_v2_movemetaailment_min_fields\\r\\n  stddev: pokemon_v2_movemetaailment_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movemetaailment_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movemetaailment_stddev_samp_fields\\r\\n  sum: pokemon_v2_movemetaailment_sum_fields\\r\\n  var_pop: pokemon_v2_movemetaailment_var_pop_fields\\r\\n  var_samp: pokemon_v2_movemetaailment_var_samp_fields\\r\\n  variance: pokemon_v2_movemetaailment_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movemetaailment_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movemetaailment\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movemetaailment_bool_exp {\\r\\n  _and: [pokemon_v2_movemetaailment_bool_exp!]\\r\\n  _not: pokemon_v2_movemetaailment_bool_exp\\r\\n  _or: [pokemon_v2_movemetaailment_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_movemeta: pokemon_v2_movemeta_bool_exp\\r\\n  pokemon_v2_movemetaailmentnames: pokemon_v2_movemetaailmentname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movemetaailment_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movemetaailment_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movemetaailment\\\\\\\".\\r\\ninput pokemon_v2_movemetaailment_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_movemeta_aggregate: pokemon_v2_movemeta_aggregate_order_by\\r\\n  pokemon_v2_movemetaailmentnames_aggregate: pokemon_v2_movemetaailmentname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\nenum pokemon_v2_movemetaailment_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movemetaailment_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movemetaailment_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movemetaailment_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movemetaailment_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movemetaailment_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movemetaailment_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movemetaailment_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ntype pokemon_v2_movemetaailmentname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_meta_ailment_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movemetaailment: pokemon_v2_movemetaailment\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ntype pokemon_v2_movemetaailmentname_aggregate {\\r\\n  aggregate: pokemon_v2_movemetaailmentname_aggregate_fields\\r\\n  nodes: [pokemon_v2_movemetaailmentname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ntype pokemon_v2_movemetaailmentname_aggregate_fields {\\r\\n  avg: pokemon_v2_movemetaailmentname_avg_fields\\r\\n  count(columns: [pokemon_v2_movemetaailmentname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movemetaailmentname_max_fields\\r\\n  min: pokemon_v2_movemetaailmentname_min_fields\\r\\n  stddev: pokemon_v2_movemetaailmentname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movemetaailmentname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movemetaailmentname_stddev_samp_fields\\r\\n  sum: pokemon_v2_movemetaailmentname_sum_fields\\r\\n  var_pop: pokemon_v2_movemetaailmentname_var_pop_fields\\r\\n  var_samp: pokemon_v2_movemetaailmentname_var_samp_fields\\r\\n  variance: pokemon_v2_movemetaailmentname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_aggregate_order_by {\\r\\n  avg: pokemon_v2_movemetaailmentname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movemetaailmentname_max_order_by\\r\\n  min: pokemon_v2_movemetaailmentname_min_order_by\\r\\n  stddev: pokemon_v2_movemetaailmentname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movemetaailmentname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movemetaailmentname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movemetaailmentname_sum_order_by\\r\\n  var_pop: pokemon_v2_movemetaailmentname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movemetaailmentname_var_samp_order_by\\r\\n  variance: pokemon_v2_movemetaailmentname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movemetaailmentname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movemetaailmentname_bool_exp {\\r\\n  _and: [pokemon_v2_movemetaailmentname_bool_exp!]\\r\\n  _not: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  _or: [pokemon_v2_movemetaailmentname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_meta_ailment_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movemetaailment: pokemon_v2_movemetaailment_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movemetaailmentname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_meta_ailment_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movemetaailmentname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_meta_ailment_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\".\\r\\ninput pokemon_v2_movemetaailmentname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movemetaailment: pokemon_v2_movemetaailment_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\nenum pokemon_v2_movemetaailmentname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_meta_ailment_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movemetaailmentname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movemetaailmentname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movemetaailmentname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movemetaailmentname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_meta_ailment_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movemetaailmentname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movemetaailmentname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movemetaailmentname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_ailment_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\ninput pokemon_v2_movemetaailmentname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_ailment_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\ntype pokemon_v2_movemetacategory {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemeta(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): [pokemon_v2_movemeta!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemeta_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): pokemon_v2_movemeta_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemetacategorydescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): [pokemon_v2_movemetacategorydescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemetacategorydescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): pokemon_v2_movemetacategorydescription_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\ntype pokemon_v2_movemetacategory_aggregate {\\r\\n  aggregate: pokemon_v2_movemetacategory_aggregate_fields\\r\\n  nodes: [pokemon_v2_movemetacategory!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\ntype pokemon_v2_movemetacategory_aggregate_fields {\\r\\n  avg: pokemon_v2_movemetacategory_avg_fields\\r\\n  count(columns: [pokemon_v2_movemetacategory_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movemetacategory_max_fields\\r\\n  min: pokemon_v2_movemetacategory_min_fields\\r\\n  stddev: pokemon_v2_movemetacategory_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movemetacategory_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movemetacategory_stddev_samp_fields\\r\\n  sum: pokemon_v2_movemetacategory_sum_fields\\r\\n  var_pop: pokemon_v2_movemetacategory_var_pop_fields\\r\\n  var_samp: pokemon_v2_movemetacategory_var_samp_fields\\r\\n  variance: pokemon_v2_movemetacategory_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movemetacategory_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movemetacategory\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movemetacategory_bool_exp {\\r\\n  _and: [pokemon_v2_movemetacategory_bool_exp!]\\r\\n  _not: pokemon_v2_movemetacategory_bool_exp\\r\\n  _or: [pokemon_v2_movemetacategory_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_movemeta: pokemon_v2_movemeta_bool_exp\\r\\n  pokemon_v2_movemetacategorydescriptions: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movemetacategory_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movemetacategory_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movemetacategory\\\\\\\".\\r\\ninput pokemon_v2_movemetacategory_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_movemeta_aggregate: pokemon_v2_movemeta_aggregate_order_by\\r\\n  pokemon_v2_movemetacategorydescriptions_aggregate: pokemon_v2_movemetacategorydescription_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\nenum pokemon_v2_movemetacategory_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movemetacategory_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movemetacategory_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movemetacategory_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movemetacategory_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movemetacategory_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movemetacategory_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movemetacategory_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ntype pokemon_v2_movemetacategorydescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_meta_category_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movemetacategory: pokemon_v2_movemetacategory\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ntype pokemon_v2_movemetacategorydescription_aggregate {\\r\\n  aggregate: pokemon_v2_movemetacategorydescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_movemetacategorydescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ntype pokemon_v2_movemetacategorydescription_aggregate_fields {\\r\\n  avg: pokemon_v2_movemetacategorydescription_avg_fields\\r\\n  count(columns: [pokemon_v2_movemetacategorydescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movemetacategorydescription_max_fields\\r\\n  min: pokemon_v2_movemetacategorydescription_min_fields\\r\\n  stddev: pokemon_v2_movemetacategorydescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movemetacategorydescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movemetacategorydescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_movemetacategorydescription_sum_fields\\r\\n  var_pop: pokemon_v2_movemetacategorydescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_movemetacategorydescription_var_samp_fields\\r\\n  variance: pokemon_v2_movemetacategorydescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_movemetacategorydescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movemetacategorydescription_max_order_by\\r\\n  min: pokemon_v2_movemetacategorydescription_min_order_by\\r\\n  stddev: pokemon_v2_movemetacategorydescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movemetacategorydescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movemetacategorydescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movemetacategorydescription_sum_order_by\\r\\n  var_pop: pokemon_v2_movemetacategorydescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movemetacategorydescription_var_samp_order_by\\r\\n  variance: pokemon_v2_movemetacategorydescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movemetacategorydescription_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_category_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movemetacategorydescription_bool_exp {\\r\\n  _and: [pokemon_v2_movemetacategorydescription_bool_exp!]\\r\\n  _not: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  _or: [pokemon_v2_movemetacategorydescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_meta_category_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movemetacategory: pokemon_v2_movemetacategory_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movemetacategorydescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_meta_category_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movemetacategorydescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_meta_category_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\".\\r\\ninput pokemon_v2_movemetacategorydescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movemetacategory: pokemon_v2_movemetacategory_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\nenum pokemon_v2_movemetacategorydescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_meta_category_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movemetacategorydescription_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_category_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movemetacategorydescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_category_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movemetacategorydescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_category_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movemetacategorydescription_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_meta_category_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movemetacategorydescription_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_category_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movemetacategorydescription_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_category_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movemetacategorydescription_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_meta_category_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\ninput pokemon_v2_movemetacategorydescription_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_meta_category_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ntype pokemon_v2_movemetastatchange {\\r\\n  change: Int!\\r\\n  id: Int!\\r\\n  move_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_stat: pokemon_v2_stat\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ntype pokemon_v2_movemetastatchange_aggregate {\\r\\n  aggregate: pokemon_v2_movemetastatchange_aggregate_fields\\r\\n  nodes: [pokemon_v2_movemetastatchange!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ntype pokemon_v2_movemetastatchange_aggregate_fields {\\r\\n  avg: pokemon_v2_movemetastatchange_avg_fields\\r\\n  count(columns: [pokemon_v2_movemetastatchange_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movemetastatchange_max_fields\\r\\n  min: pokemon_v2_movemetastatchange_min_fields\\r\\n  stddev: pokemon_v2_movemetastatchange_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movemetastatchange_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movemetastatchange_stddev_samp_fields\\r\\n  sum: pokemon_v2_movemetastatchange_sum_fields\\r\\n  var_pop: pokemon_v2_movemetastatchange_var_pop_fields\\r\\n  var_samp: pokemon_v2_movemetastatchange_var_samp_fields\\r\\n  variance: pokemon_v2_movemetastatchange_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_aggregate_order_by {\\r\\n  avg: pokemon_v2_movemetastatchange_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movemetastatchange_max_order_by\\r\\n  min: pokemon_v2_movemetastatchange_min_order_by\\r\\n  stddev: pokemon_v2_movemetastatchange_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movemetastatchange_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movemetastatchange_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movemetastatchange_sum_order_by\\r\\n  var_pop: pokemon_v2_movemetastatchange_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movemetastatchange_var_samp_order_by\\r\\n  variance: pokemon_v2_movemetastatchange_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movemetastatchange_avg_fields {\\r\\n  change: Float\\r\\n  id: Float\\r\\n  move_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_avg_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movemetastatchange_bool_exp {\\r\\n  _and: [pokemon_v2_movemetastatchange_bool_exp!]\\r\\n  _not: pokemon_v2_movemetastatchange_bool_exp\\r\\n  _or: [pokemon_v2_movemetastatchange_bool_exp!]\\r\\n  change: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_stat: pokemon_v2_stat_bool_exp\\r\\n  stat_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movemetastatchange_max_fields {\\r\\n  change: Int\\r\\n  id: Int\\r\\n  move_id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_max_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movemetastatchange_min_fields {\\r\\n  change: Int\\r\\n  id: Int\\r\\n  move_id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_min_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\".\\r\\ninput pokemon_v2_movemetastatchange_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_stat: pokemon_v2_stat_order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\nenum pokemon_v2_movemetastatchange_select_column {\\r\\n  # column name\\r\\n  change\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  move_id\\r\\n  # column name\\r\\n  stat_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movemetastatchange_stddev_fields {\\r\\n  change: Float\\r\\n  id: Float\\r\\n  move_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_stddev_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movemetastatchange_stddev_pop_fields {\\r\\n  change: Float\\r\\n  id: Float\\r\\n  move_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_stddev_pop_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movemetastatchange_stddev_samp_fields {\\r\\n  change: Float\\r\\n  id: Float\\r\\n  move_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_stddev_samp_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movemetastatchange_sum_fields {\\r\\n  change: Int\\r\\n  id: Int\\r\\n  move_id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_sum_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movemetastatchange_var_pop_fields {\\r\\n  change: Float\\r\\n  id: Float\\r\\n  move_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_var_pop_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movemetastatchange_var_samp_fields {\\r\\n  change: Float\\r\\n  id: Float\\r\\n  move_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_var_samp_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movemetastatchange_variance_fields {\\r\\n  change: Float\\r\\n  id: Float\\r\\n  move_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\ninput pokemon_v2_movemetastatchange_variance_order_by {\\r\\n  change: order_by\\r\\n  id: order_by\\r\\n  move_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ntype pokemon_v2_movename {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ntype pokemon_v2_movename_aggregate {\\r\\n  aggregate: pokemon_v2_movename_aggregate_fields\\r\\n  nodes: [pokemon_v2_movename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ntype pokemon_v2_movename_aggregate_fields {\\r\\n  avg: pokemon_v2_movename_avg_fields\\r\\n  count(columns: [pokemon_v2_movename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movename_max_fields\\r\\n  min: pokemon_v2_movename_min_fields\\r\\n  stddev: pokemon_v2_movename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movename_stddev_samp_fields\\r\\n  sum: pokemon_v2_movename_sum_fields\\r\\n  var_pop: pokemon_v2_movename_var_pop_fields\\r\\n  var_samp: pokemon_v2_movename_var_samp_fields\\r\\n  variance: pokemon_v2_movename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_aggregate_order_by {\\r\\n  avg: pokemon_v2_movename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movename_max_order_by\\r\\n  min: pokemon_v2_movename_min_order_by\\r\\n  stddev: pokemon_v2_movename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movename_sum_order_by\\r\\n  var_pop: pokemon_v2_movename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movename_var_samp_order_by\\r\\n  variance: pokemon_v2_movename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movename_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movename_bool_exp {\\r\\n  _and: [pokemon_v2_movename_bool_exp!]\\r\\n  _not: pokemon_v2_movename_bool_exp\\r\\n  _or: [pokemon_v2_movename_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movename_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movename_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movename\\\\\\\".\\r\\ninput pokemon_v2_movename_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\nenum pokemon_v2_movename_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movename_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movename_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movename_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movename_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movename_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\ninput pokemon_v2_movename_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\ntype pokemon_v2_movetarget {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movetargetdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): [pokemon_v2_movetargetdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movetargetdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): pokemon_v2_movetargetdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movetargetnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): [pokemon_v2_movetargetname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movetargetnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): pokemon_v2_movetargetname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\ntype pokemon_v2_movetarget_aggregate {\\r\\n  aggregate: pokemon_v2_movetarget_aggregate_fields\\r\\n  nodes: [pokemon_v2_movetarget!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\ntype pokemon_v2_movetarget_aggregate_fields {\\r\\n  avg: pokemon_v2_movetarget_avg_fields\\r\\n  count(columns: [pokemon_v2_movetarget_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movetarget_max_fields\\r\\n  min: pokemon_v2_movetarget_min_fields\\r\\n  stddev: pokemon_v2_movetarget_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movetarget_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movetarget_stddev_samp_fields\\r\\n  sum: pokemon_v2_movetarget_sum_fields\\r\\n  var_pop: pokemon_v2_movetarget_var_pop_fields\\r\\n  var_samp: pokemon_v2_movetarget_var_samp_fields\\r\\n  variance: pokemon_v2_movetarget_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movetarget_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movetarget\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movetarget_bool_exp {\\r\\n  _and: [pokemon_v2_movetarget_bool_exp!]\\r\\n  _not: pokemon_v2_movetarget_bool_exp\\r\\n  _or: [pokemon_v2_movetarget_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_movetargetdescriptions: pokemon_v2_movetargetdescription_bool_exp\\r\\n  pokemon_v2_movetargetnames: pokemon_v2_movetargetname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movetarget_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movetarget_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movetarget\\\\\\\".\\r\\ninput pokemon_v2_movetarget_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n  pokemon_v2_movetargetdescriptions_aggregate: pokemon_v2_movetargetdescription_aggregate_order_by\\r\\n  pokemon_v2_movetargetnames_aggregate: pokemon_v2_movetargetname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\nenum pokemon_v2_movetarget_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movetarget_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movetarget_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movetarget_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movetarget_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movetarget_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movetarget_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movetarget_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ntype pokemon_v2_movetargetdescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ntype pokemon_v2_movetargetdescription_aggregate {\\r\\n  aggregate: pokemon_v2_movetargetdescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_movetargetdescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ntype pokemon_v2_movetargetdescription_aggregate_fields {\\r\\n  avg: pokemon_v2_movetargetdescription_avg_fields\\r\\n  count(columns: [pokemon_v2_movetargetdescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movetargetdescription_max_fields\\r\\n  min: pokemon_v2_movetargetdescription_min_fields\\r\\n  stddev: pokemon_v2_movetargetdescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movetargetdescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movetargetdescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_movetargetdescription_sum_fields\\r\\n  var_pop: pokemon_v2_movetargetdescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_movetargetdescription_var_samp_fields\\r\\n  variance: pokemon_v2_movetargetdescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_movetargetdescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movetargetdescription_max_order_by\\r\\n  min: pokemon_v2_movetargetdescription_min_order_by\\r\\n  stddev: pokemon_v2_movetargetdescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movetargetdescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movetargetdescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movetargetdescription_sum_order_by\\r\\n  var_pop: pokemon_v2_movetargetdescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movetargetdescription_var_samp_order_by\\r\\n  variance: pokemon_v2_movetargetdescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movetargetdescription_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movetargetdescription_bool_exp {\\r\\n  _and: [pokemon_v2_movetargetdescription_bool_exp!]\\r\\n  _not: pokemon_v2_movetargetdescription_bool_exp\\r\\n  _or: [pokemon_v2_movetargetdescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_target_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movetargetdescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movetargetdescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\".\\r\\ninput pokemon_v2_movetargetdescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\nenum pokemon_v2_movetargetdescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_target_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movetargetdescription_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movetargetdescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movetargetdescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movetargetdescription_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movetargetdescription_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movetargetdescription_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movetargetdescription_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\ninput pokemon_v2_movetargetdescription_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ntype pokemon_v2_movetargetname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ntype pokemon_v2_movetargetname_aggregate {\\r\\n  aggregate: pokemon_v2_movetargetname_aggregate_fields\\r\\n  nodes: [pokemon_v2_movetargetname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ntype pokemon_v2_movetargetname_aggregate_fields {\\r\\n  avg: pokemon_v2_movetargetname_avg_fields\\r\\n  count(columns: [pokemon_v2_movetargetname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_movetargetname_max_fields\\r\\n  min: pokemon_v2_movetargetname_min_fields\\r\\n  stddev: pokemon_v2_movetargetname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_movetargetname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_movetargetname_stddev_samp_fields\\r\\n  sum: pokemon_v2_movetargetname_sum_fields\\r\\n  var_pop: pokemon_v2_movetargetname_var_pop_fields\\r\\n  var_samp: pokemon_v2_movetargetname_var_samp_fields\\r\\n  variance: pokemon_v2_movetargetname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_aggregate_order_by {\\r\\n  avg: pokemon_v2_movetargetname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_movetargetname_max_order_by\\r\\n  min: pokemon_v2_movetargetname_min_order_by\\r\\n  stddev: pokemon_v2_movetargetname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_movetargetname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_movetargetname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_movetargetname_sum_order_by\\r\\n  var_pop: pokemon_v2_movetargetname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_movetargetname_var_samp_order_by\\r\\n  variance: pokemon_v2_movetargetname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_movetargetname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_movetargetname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_movetargetname_bool_exp {\\r\\n  _and: [pokemon_v2_movetargetname_bool_exp!]\\r\\n  _not: pokemon_v2_movetargetname_bool_exp\\r\\n  _or: [pokemon_v2_movetargetname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  move_target_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_movetargetname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_movetargetname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_movetargetname\\\\\\\".\\r\\ninput pokemon_v2_movetargetname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_movetarget: pokemon_v2_movetarget_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\nenum pokemon_v2_movetargetname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  move_target_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_movetargetname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_movetargetname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_movetargetname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_movetargetname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  move_target_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_movetargetname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_movetargetname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_movetargetname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  move_target_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\ninput pokemon_v2_movetargetname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  move_target_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ntype pokemon_v2_nature {\\r\\n  decreased_stat_id: Int\\r\\n  game_index: Int!\\r\\n  hates_flavor_id: Int\\r\\n  id: Int!\\r\\n  increased_stat_id: Int\\r\\n  likes_flavor_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemonV2BerryflavorByLikesFlavorId: pokemon_v2_berryflavor\\r\\n  # An object relationship\\r\\n  pokemonV2StatByIncreasedStatId: pokemon_v2_stat\\r\\n  # An object relationship\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor\\r\\n  # An array relationship\\r\\n  pokemon_v2_naturebattlestylepreferences(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): [pokemon_v2_naturebattlestylepreference!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_naturebattlestylepreferences_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): pokemon_v2_naturebattlestylepreference_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_naturenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): [pokemon_v2_naturename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_naturenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): pokemon_v2_naturename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_naturepokeathlonstats(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): [pokemon_v2_naturepokeathlonstat!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_naturepokeathlonstats_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): pokemon_v2_naturepokeathlonstat_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_stat: pokemon_v2_stat\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ntype pokemon_v2_nature_aggregate {\\r\\n  aggregate: pokemon_v2_nature_aggregate_fields\\r\\n  nodes: [pokemon_v2_nature!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ntype pokemon_v2_nature_aggregate_fields {\\r\\n  avg: pokemon_v2_nature_avg_fields\\r\\n  count(columns: [pokemon_v2_nature_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_nature_max_fields\\r\\n  min: pokemon_v2_nature_min_fields\\r\\n  stddev: pokemon_v2_nature_stddev_fields\\r\\n  stddev_pop: pokemon_v2_nature_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_nature_stddev_samp_fields\\r\\n  sum: pokemon_v2_nature_sum_fields\\r\\n  var_pop: pokemon_v2_nature_var_pop_fields\\r\\n  var_samp: pokemon_v2_nature_var_samp_fields\\r\\n  variance: pokemon_v2_nature_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_aggregate_order_by {\\r\\n  avg: pokemon_v2_nature_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_nature_max_order_by\\r\\n  min: pokemon_v2_nature_min_order_by\\r\\n  stddev: pokemon_v2_nature_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_nature_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_nature_stddev_samp_order_by\\r\\n  sum: pokemon_v2_nature_sum_order_by\\r\\n  var_pop: pokemon_v2_nature_var_pop_order_by\\r\\n  var_samp: pokemon_v2_nature_var_samp_order_by\\r\\n  variance: pokemon_v2_nature_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_nature_avg_fields {\\r\\n  decreased_stat_id: Float\\r\\n  game_index: Float\\r\\n  hates_flavor_id: Float\\r\\n  id: Float\\r\\n  increased_stat_id: Float\\r\\n  likes_flavor_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_avg_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_nature\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_nature_bool_exp {\\r\\n  _and: [pokemon_v2_nature_bool_exp!]\\r\\n  _not: pokemon_v2_nature_bool_exp\\r\\n  _or: [pokemon_v2_nature_bool_exp!]\\r\\n  decreased_stat_id: Int_comparison_exp\\r\\n  game_index: Int_comparison_exp\\r\\n  hates_flavor_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  increased_stat_id: Int_comparison_exp\\r\\n  likes_flavor_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemonV2BerryflavorByLikesFlavorId: pokemon_v2_berryflavor_bool_exp\\r\\n  pokemonV2StatByIncreasedStatId: pokemon_v2_stat_bool_exp\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor_bool_exp\\r\\n  pokemon_v2_naturebattlestylepreferences: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  pokemon_v2_naturenames: pokemon_v2_naturename_bool_exp\\r\\n  pokemon_v2_naturepokeathlonstats: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  pokemon_v2_stat: pokemon_v2_stat_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_nature_max_fields {\\r\\n  decreased_stat_id: Int\\r\\n  game_index: Int\\r\\n  hates_flavor_id: Int\\r\\n  id: Int\\r\\n  increased_stat_id: Int\\r\\n  likes_flavor_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_max_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_nature_min_fields {\\r\\n  decreased_stat_id: Int\\r\\n  game_index: Int\\r\\n  hates_flavor_id: Int\\r\\n  id: Int\\r\\n  increased_stat_id: Int\\r\\n  likes_flavor_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_min_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_nature\\\\\\\".\\r\\ninput pokemon_v2_nature_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n  name: order_by\\r\\n  pokemonV2BerryflavorByLikesFlavorId: pokemon_v2_berryflavor_order_by\\r\\n  pokemonV2StatByIncreasedStatId: pokemon_v2_stat_order_by\\r\\n  pokemon_v2_berryflavor: pokemon_v2_berryflavor_order_by\\r\\n  pokemon_v2_naturebattlestylepreferences_aggregate: pokemon_v2_naturebattlestylepreference_aggregate_order_by\\r\\n  pokemon_v2_naturenames_aggregate: pokemon_v2_naturename_aggregate_order_by\\r\\n  pokemon_v2_naturepokeathlonstats_aggregate: pokemon_v2_naturepokeathlonstat_aggregate_order_by\\r\\n  pokemon_v2_stat: pokemon_v2_stat_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\nenum pokemon_v2_nature_select_column {\\r\\n  # column name\\r\\n  decreased_stat_id\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  hates_flavor_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  increased_stat_id\\r\\n  # column name\\r\\n  likes_flavor_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_nature_stddev_fields {\\r\\n  decreased_stat_id: Float\\r\\n  game_index: Float\\r\\n  hates_flavor_id: Float\\r\\n  id: Float\\r\\n  increased_stat_id: Float\\r\\n  likes_flavor_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_stddev_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_nature_stddev_pop_fields {\\r\\n  decreased_stat_id: Float\\r\\n  game_index: Float\\r\\n  hates_flavor_id: Float\\r\\n  id: Float\\r\\n  increased_stat_id: Float\\r\\n  likes_flavor_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_stddev_pop_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_nature_stddev_samp_fields {\\r\\n  decreased_stat_id: Float\\r\\n  game_index: Float\\r\\n  hates_flavor_id: Float\\r\\n  id: Float\\r\\n  increased_stat_id: Float\\r\\n  likes_flavor_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_stddev_samp_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_nature_sum_fields {\\r\\n  decreased_stat_id: Int\\r\\n  game_index: Int\\r\\n  hates_flavor_id: Int\\r\\n  id: Int\\r\\n  increased_stat_id: Int\\r\\n  likes_flavor_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_sum_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_nature_var_pop_fields {\\r\\n  decreased_stat_id: Float\\r\\n  game_index: Float\\r\\n  hates_flavor_id: Float\\r\\n  id: Float\\r\\n  increased_stat_id: Float\\r\\n  likes_flavor_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_var_pop_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_nature_var_samp_fields {\\r\\n  decreased_stat_id: Float\\r\\n  game_index: Float\\r\\n  hates_flavor_id: Float\\r\\n  id: Float\\r\\n  increased_stat_id: Float\\r\\n  likes_flavor_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_var_samp_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_nature_variance_fields {\\r\\n  decreased_stat_id: Float\\r\\n  game_index: Float\\r\\n  hates_flavor_id: Float\\r\\n  id: Float\\r\\n  increased_stat_id: Float\\r\\n  likes_flavor_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\ninput pokemon_v2_nature_variance_order_by {\\r\\n  decreased_stat_id: order_by\\r\\n  game_index: order_by\\r\\n  hates_flavor_id: order_by\\r\\n  id: order_by\\r\\n  increased_stat_id: order_by\\r\\n  likes_flavor_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ntype pokemon_v2_naturebattlestylepreference {\\r\\n  high_hp_preference: Int!\\r\\n  id: Int!\\r\\n  low_hp_preference: Int!\\r\\n  move_battle_style_id: Int\\r\\n  nature_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_movebattlestyle: pokemon_v2_movebattlestyle\\r\\n  # An object relationship\\r\\n  pokemon_v2_nature: pokemon_v2_nature\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ntype pokemon_v2_naturebattlestylepreference_aggregate {\\r\\n  aggregate: pokemon_v2_naturebattlestylepreference_aggregate_fields\\r\\n  nodes: [pokemon_v2_naturebattlestylepreference!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ntype pokemon_v2_naturebattlestylepreference_aggregate_fields {\\r\\n  avg: pokemon_v2_naturebattlestylepreference_avg_fields\\r\\n  count(columns: [pokemon_v2_naturebattlestylepreference_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_naturebattlestylepreference_max_fields\\r\\n  min: pokemon_v2_naturebattlestylepreference_min_fields\\r\\n  stddev: pokemon_v2_naturebattlestylepreference_stddev_fields\\r\\n  stddev_pop: pokemon_v2_naturebattlestylepreference_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_naturebattlestylepreference_stddev_samp_fields\\r\\n  sum: pokemon_v2_naturebattlestylepreference_sum_fields\\r\\n  var_pop: pokemon_v2_naturebattlestylepreference_var_pop_fields\\r\\n  var_samp: pokemon_v2_naturebattlestylepreference_var_samp_fields\\r\\n  variance: pokemon_v2_naturebattlestylepreference_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_aggregate_order_by {\\r\\n  avg: pokemon_v2_naturebattlestylepreference_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_naturebattlestylepreference_max_order_by\\r\\n  min: pokemon_v2_naturebattlestylepreference_min_order_by\\r\\n  stddev: pokemon_v2_naturebattlestylepreference_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_naturebattlestylepreference_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_naturebattlestylepreference_stddev_samp_order_by\\r\\n  sum: pokemon_v2_naturebattlestylepreference_sum_order_by\\r\\n  var_pop: pokemon_v2_naturebattlestylepreference_var_pop_order_by\\r\\n  var_samp: pokemon_v2_naturebattlestylepreference_var_samp_order_by\\r\\n  variance: pokemon_v2_naturebattlestylepreference_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_avg_fields {\\r\\n  high_hp_preference: Float\\r\\n  id: Float\\r\\n  low_hp_preference: Float\\r\\n  move_battle_style_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_avg_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_naturebattlestylepreference_bool_exp {\\r\\n  _and: [pokemon_v2_naturebattlestylepreference_bool_exp!]\\r\\n  _not: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  _or: [pokemon_v2_naturebattlestylepreference_bool_exp!]\\r\\n  high_hp_preference: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  low_hp_preference: Int_comparison_exp\\r\\n  move_battle_style_id: Int_comparison_exp\\r\\n  nature_id: Int_comparison_exp\\r\\n  pokemon_v2_movebattlestyle: pokemon_v2_movebattlestyle_bool_exp\\r\\n  pokemon_v2_nature: pokemon_v2_nature_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_max_fields {\\r\\n  high_hp_preference: Int\\r\\n  id: Int\\r\\n  low_hp_preference: Int\\r\\n  move_battle_style_id: Int\\r\\n  nature_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_max_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_min_fields {\\r\\n  high_hp_preference: Int\\r\\n  id: Int\\r\\n  low_hp_preference: Int\\r\\n  move_battle_style_id: Int\\r\\n  nature_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_min_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\".\\r\\ninput pokemon_v2_naturebattlestylepreference_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n  pokemon_v2_movebattlestyle: pokemon_v2_movebattlestyle_order_by\\r\\n  pokemon_v2_nature: pokemon_v2_nature_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\nenum pokemon_v2_naturebattlestylepreference_select_column {\\r\\n  # column name\\r\\n  high_hp_preference\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  low_hp_preference\\r\\n  # column name\\r\\n  move_battle_style_id\\r\\n  # column name\\r\\n  nature_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_stddev_fields {\\r\\n  high_hp_preference: Float\\r\\n  id: Float\\r\\n  low_hp_preference: Float\\r\\n  move_battle_style_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_stddev_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_stddev_pop_fields {\\r\\n  high_hp_preference: Float\\r\\n  id: Float\\r\\n  low_hp_preference: Float\\r\\n  move_battle_style_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_stddev_pop_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_stddev_samp_fields {\\r\\n  high_hp_preference: Float\\r\\n  id: Float\\r\\n  low_hp_preference: Float\\r\\n  move_battle_style_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_stddev_samp_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_sum_fields {\\r\\n  high_hp_preference: Int\\r\\n  id: Int\\r\\n  low_hp_preference: Int\\r\\n  move_battle_style_id: Int\\r\\n  nature_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_sum_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_var_pop_fields {\\r\\n  high_hp_preference: Float\\r\\n  id: Float\\r\\n  low_hp_preference: Float\\r\\n  move_battle_style_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_var_pop_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_var_samp_fields {\\r\\n  high_hp_preference: Float\\r\\n  id: Float\\r\\n  low_hp_preference: Float\\r\\n  move_battle_style_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_var_samp_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_naturebattlestylepreference_variance_fields {\\r\\n  high_hp_preference: Float\\r\\n  id: Float\\r\\n  low_hp_preference: Float\\r\\n  move_battle_style_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\ninput pokemon_v2_naturebattlestylepreference_variance_order_by {\\r\\n  high_hp_preference: order_by\\r\\n  id: order_by\\r\\n  low_hp_preference: order_by\\r\\n  move_battle_style_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ntype pokemon_v2_naturename {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  nature_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_nature: pokemon_v2_nature\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ntype pokemon_v2_naturename_aggregate {\\r\\n  aggregate: pokemon_v2_naturename_aggregate_fields\\r\\n  nodes: [pokemon_v2_naturename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ntype pokemon_v2_naturename_aggregate_fields {\\r\\n  avg: pokemon_v2_naturename_avg_fields\\r\\n  count(columns: [pokemon_v2_naturename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_naturename_max_fields\\r\\n  min: pokemon_v2_naturename_min_fields\\r\\n  stddev: pokemon_v2_naturename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_naturename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_naturename_stddev_samp_fields\\r\\n  sum: pokemon_v2_naturename_sum_fields\\r\\n  var_pop: pokemon_v2_naturename_var_pop_fields\\r\\n  var_samp: pokemon_v2_naturename_var_samp_fields\\r\\n  variance: pokemon_v2_naturename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_aggregate_order_by {\\r\\n  avg: pokemon_v2_naturename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_naturename_max_order_by\\r\\n  min: pokemon_v2_naturename_min_order_by\\r\\n  stddev: pokemon_v2_naturename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_naturename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_naturename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_naturename_sum_order_by\\r\\n  var_pop: pokemon_v2_naturename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_naturename_var_samp_order_by\\r\\n  variance: pokemon_v2_naturename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_naturename_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_naturename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_naturename_bool_exp {\\r\\n  _and: [pokemon_v2_naturename_bool_exp!]\\r\\n  _not: pokemon_v2_naturename_bool_exp\\r\\n  _or: [pokemon_v2_naturename_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  nature_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_nature: pokemon_v2_nature_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_naturename_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  nature_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_naturename_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  nature_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_naturename\\\\\\\".\\r\\ninput pokemon_v2_naturename_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  nature_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_nature: pokemon_v2_nature_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\nenum pokemon_v2_naturename_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  nature_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_naturename_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_naturename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_naturename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_naturename_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  nature_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_naturename_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_naturename_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_naturename_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  nature_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\ninput pokemon_v2_naturename_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  nature_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ntype pokemon_v2_naturepokeathlonstat {\\r\\n  id: Int!\\r\\n  max_change: Int!\\r\\n  nature_id: Int\\r\\n  pokeathlon_stat_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_nature: pokemon_v2_nature\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokeathlonstat: pokemon_v2_pokeathlonstat\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ntype pokemon_v2_naturepokeathlonstat_aggregate {\\r\\n  aggregate: pokemon_v2_naturepokeathlonstat_aggregate_fields\\r\\n  nodes: [pokemon_v2_naturepokeathlonstat!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ntype pokemon_v2_naturepokeathlonstat_aggregate_fields {\\r\\n  avg: pokemon_v2_naturepokeathlonstat_avg_fields\\r\\n  count(columns: [pokemon_v2_naturepokeathlonstat_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_naturepokeathlonstat_max_fields\\r\\n  min: pokemon_v2_naturepokeathlonstat_min_fields\\r\\n  stddev: pokemon_v2_naturepokeathlonstat_stddev_fields\\r\\n  stddev_pop: pokemon_v2_naturepokeathlonstat_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_naturepokeathlonstat_stddev_samp_fields\\r\\n  sum: pokemon_v2_naturepokeathlonstat_sum_fields\\r\\n  var_pop: pokemon_v2_naturepokeathlonstat_var_pop_fields\\r\\n  var_samp: pokemon_v2_naturepokeathlonstat_var_samp_fields\\r\\n  variance: pokemon_v2_naturepokeathlonstat_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_aggregate_order_by {\\r\\n  avg: pokemon_v2_naturepokeathlonstat_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_naturepokeathlonstat_max_order_by\\r\\n  min: pokemon_v2_naturepokeathlonstat_min_order_by\\r\\n  stddev: pokemon_v2_naturepokeathlonstat_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_naturepokeathlonstat_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_naturepokeathlonstat_stddev_samp_order_by\\r\\n  sum: pokemon_v2_naturepokeathlonstat_sum_order_by\\r\\n  var_pop: pokemon_v2_naturepokeathlonstat_var_pop_order_by\\r\\n  var_samp: pokemon_v2_naturepokeathlonstat_var_samp_order_by\\r\\n  variance: pokemon_v2_naturepokeathlonstat_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_avg_fields {\\r\\n  id: Float\\r\\n  max_change: Float\\r\\n  nature_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_avg_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_naturepokeathlonstat_bool_exp {\\r\\n  _and: [pokemon_v2_naturepokeathlonstat_bool_exp!]\\r\\n  _not: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  _or: [pokemon_v2_naturepokeathlonstat_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  max_change: Int_comparison_exp\\r\\n  nature_id: Int_comparison_exp\\r\\n  pokeathlon_stat_id: Int_comparison_exp\\r\\n  pokemon_v2_nature: pokemon_v2_nature_bool_exp\\r\\n  pokemon_v2_pokeathlonstat: pokemon_v2_pokeathlonstat_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_max_fields {\\r\\n  id: Int\\r\\n  max_change: Int\\r\\n  nature_id: Int\\r\\n  pokeathlon_stat_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_max_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_min_fields {\\r\\n  id: Int\\r\\n  max_change: Int\\r\\n  nature_id: Int\\r\\n  pokeathlon_stat_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_min_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\".\\r\\ninput pokemon_v2_naturepokeathlonstat_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n  pokemon_v2_nature: pokemon_v2_nature_order_by\\r\\n  pokemon_v2_pokeathlonstat: pokemon_v2_pokeathlonstat_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\nenum pokemon_v2_naturepokeathlonstat_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  max_change\\r\\n  # column name\\r\\n  nature_id\\r\\n  # column name\\r\\n  pokeathlon_stat_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_stddev_fields {\\r\\n  id: Float\\r\\n  max_change: Float\\r\\n  nature_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_stddev_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_stddev_pop_fields {\\r\\n  id: Float\\r\\n  max_change: Float\\r\\n  nature_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_stddev_samp_fields {\\r\\n  id: Float\\r\\n  max_change: Float\\r\\n  nature_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_sum_fields {\\r\\n  id: Int\\r\\n  max_change: Int\\r\\n  nature_id: Int\\r\\n  pokeathlon_stat_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_sum_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_var_pop_fields {\\r\\n  id: Float\\r\\n  max_change: Float\\r\\n  nature_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_var_pop_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_var_samp_fields {\\r\\n  id: Float\\r\\n  max_change: Float\\r\\n  nature_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_var_samp_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_naturepokeathlonstat_variance_fields {\\r\\n  id: Float\\r\\n  max_change: Float\\r\\n  nature_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\ninput pokemon_v2_naturepokeathlonstat_variance_order_by {\\r\\n  id: order_by\\r\\n  max_change: order_by\\r\\n  nature_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ntype pokemon_v2_palpark {\\r\\n  base_score: Int\\r\\n  id: Int!\\r\\n  pal_park_area_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_palparkarea: pokemon_v2_palparkarea\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n  rate: Int!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ntype pokemon_v2_palpark_aggregate {\\r\\n  aggregate: pokemon_v2_palpark_aggregate_fields\\r\\n  nodes: [pokemon_v2_palpark!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ntype pokemon_v2_palpark_aggregate_fields {\\r\\n  avg: pokemon_v2_palpark_avg_fields\\r\\n  count(columns: [pokemon_v2_palpark_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_palpark_max_fields\\r\\n  min: pokemon_v2_palpark_min_fields\\r\\n  stddev: pokemon_v2_palpark_stddev_fields\\r\\n  stddev_pop: pokemon_v2_palpark_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_palpark_stddev_samp_fields\\r\\n  sum: pokemon_v2_palpark_sum_fields\\r\\n  var_pop: pokemon_v2_palpark_var_pop_fields\\r\\n  var_samp: pokemon_v2_palpark_var_samp_fields\\r\\n  variance: pokemon_v2_palpark_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_aggregate_order_by {\\r\\n  avg: pokemon_v2_palpark_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_palpark_max_order_by\\r\\n  min: pokemon_v2_palpark_min_order_by\\r\\n  stddev: pokemon_v2_palpark_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_palpark_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_palpark_stddev_samp_order_by\\r\\n  sum: pokemon_v2_palpark_sum_order_by\\r\\n  var_pop: pokemon_v2_palpark_var_pop_order_by\\r\\n  var_samp: pokemon_v2_palpark_var_samp_order_by\\r\\n  variance: pokemon_v2_palpark_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_palpark_avg_fields {\\r\\n  base_score: Float\\r\\n  id: Float\\r\\n  pal_park_area_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  rate: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_avg_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_palpark\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_palpark_bool_exp {\\r\\n  _and: [pokemon_v2_palpark_bool_exp!]\\r\\n  _not: pokemon_v2_palpark_bool_exp\\r\\n  _or: [pokemon_v2_palpark_bool_exp!]\\r\\n  base_score: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pal_park_area_id: Int_comparison_exp\\r\\n  pokemon_species_id: Int_comparison_exp\\r\\n  pokemon_v2_palparkarea: pokemon_v2_palparkarea_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n  rate: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_palpark_max_fields {\\r\\n  base_score: Int\\r\\n  id: Int\\r\\n  pal_park_area_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  rate: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_max_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_palpark_min_fields {\\r\\n  base_score: Int\\r\\n  id: Int\\r\\n  pal_park_area_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  rate: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_min_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_palpark\\\\\\\".\\r\\ninput pokemon_v2_palpark_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  pokemon_v2_palparkarea: pokemon_v2_palparkarea_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\nenum pokemon_v2_palpark_select_column {\\r\\n  # column name\\r\\n  base_score\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pal_park_area_id\\r\\n  # column name\\r\\n  pokemon_species_id\\r\\n  # column name\\r\\n  rate\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_palpark_stddev_fields {\\r\\n  base_score: Float\\r\\n  id: Float\\r\\n  pal_park_area_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  rate: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_stddev_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_palpark_stddev_pop_fields {\\r\\n  base_score: Float\\r\\n  id: Float\\r\\n  pal_park_area_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  rate: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_stddev_pop_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_palpark_stddev_samp_fields {\\r\\n  base_score: Float\\r\\n  id: Float\\r\\n  pal_park_area_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  rate: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_stddev_samp_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_palpark_sum_fields {\\r\\n  base_score: Int\\r\\n  id: Int\\r\\n  pal_park_area_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  rate: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_sum_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_palpark_var_pop_fields {\\r\\n  base_score: Float\\r\\n  id: Float\\r\\n  pal_park_area_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  rate: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_var_pop_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_palpark_var_samp_fields {\\r\\n  base_score: Float\\r\\n  id: Float\\r\\n  pal_park_area_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  rate: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_var_samp_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_palpark_variance_fields {\\r\\n  base_score: Float\\r\\n  id: Float\\r\\n  pal_park_area_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  rate: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\ninput pokemon_v2_palpark_variance_order_by {\\r\\n  base_score: order_by\\r\\n  id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  rate: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\ntype pokemon_v2_palparkarea {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_palparkareanames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): [pokemon_v2_palparkareaname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_palparkareanames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): pokemon_v2_palparkareaname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_palparks(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): [pokemon_v2_palpark!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_palparks_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): pokemon_v2_palpark_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\ntype pokemon_v2_palparkarea_aggregate {\\r\\n  aggregate: pokemon_v2_palparkarea_aggregate_fields\\r\\n  nodes: [pokemon_v2_palparkarea!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\ntype pokemon_v2_palparkarea_aggregate_fields {\\r\\n  avg: pokemon_v2_palparkarea_avg_fields\\r\\n  count(columns: [pokemon_v2_palparkarea_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_palparkarea_max_fields\\r\\n  min: pokemon_v2_palparkarea_min_fields\\r\\n  stddev: pokemon_v2_palparkarea_stddev_fields\\r\\n  stddev_pop: pokemon_v2_palparkarea_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_palparkarea_stddev_samp_fields\\r\\n  sum: pokemon_v2_palparkarea_sum_fields\\r\\n  var_pop: pokemon_v2_palparkarea_var_pop_fields\\r\\n  var_samp: pokemon_v2_palparkarea_var_samp_fields\\r\\n  variance: pokemon_v2_palparkarea_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_palparkarea_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_palparkarea\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_palparkarea_bool_exp {\\r\\n  _and: [pokemon_v2_palparkarea_bool_exp!]\\r\\n  _not: pokemon_v2_palparkarea_bool_exp\\r\\n  _or: [pokemon_v2_palparkarea_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_palparkareanames: pokemon_v2_palparkareaname_bool_exp\\r\\n  pokemon_v2_palparks: pokemon_v2_palpark_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_palparkarea_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_palparkarea_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_palparkarea\\\\\\\".\\r\\ninput pokemon_v2_palparkarea_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_palparkareanames_aggregate: pokemon_v2_palparkareaname_aggregate_order_by\\r\\n  pokemon_v2_palparks_aggregate: pokemon_v2_palpark_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\nenum pokemon_v2_palparkarea_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_palparkarea_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_palparkarea_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_palparkarea_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_palparkarea_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_palparkarea_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_palparkarea_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_palparkarea_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ntype pokemon_v2_palparkareaname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pal_park_area_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_palparkarea: pokemon_v2_palparkarea\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ntype pokemon_v2_palparkareaname_aggregate {\\r\\n  aggregate: pokemon_v2_palparkareaname_aggregate_fields\\r\\n  nodes: [pokemon_v2_palparkareaname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ntype pokemon_v2_palparkareaname_aggregate_fields {\\r\\n  avg: pokemon_v2_palparkareaname_avg_fields\\r\\n  count(columns: [pokemon_v2_palparkareaname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_palparkareaname_max_fields\\r\\n  min: pokemon_v2_palparkareaname_min_fields\\r\\n  stddev: pokemon_v2_palparkareaname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_palparkareaname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_palparkareaname_stddev_samp_fields\\r\\n  sum: pokemon_v2_palparkareaname_sum_fields\\r\\n  var_pop: pokemon_v2_palparkareaname_var_pop_fields\\r\\n  var_samp: pokemon_v2_palparkareaname_var_samp_fields\\r\\n  variance: pokemon_v2_palparkareaname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_aggregate_order_by {\\r\\n  avg: pokemon_v2_palparkareaname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_palparkareaname_max_order_by\\r\\n  min: pokemon_v2_palparkareaname_min_order_by\\r\\n  stddev: pokemon_v2_palparkareaname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_palparkareaname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_palparkareaname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_palparkareaname_sum_order_by\\r\\n  var_pop: pokemon_v2_palparkareaname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_palparkareaname_var_samp_order_by\\r\\n  variance: pokemon_v2_palparkareaname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_palparkareaname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pal_park_area_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_palparkareaname_bool_exp {\\r\\n  _and: [pokemon_v2_palparkareaname_bool_exp!]\\r\\n  _not: pokemon_v2_palparkareaname_bool_exp\\r\\n  _or: [pokemon_v2_palparkareaname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pal_park_area_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_palparkarea: pokemon_v2_palparkarea_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_palparkareaname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pal_park_area_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_palparkareaname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pal_park_area_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_palparkareaname\\\\\\\".\\r\\ninput pokemon_v2_palparkareaname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pal_park_area_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_palparkarea: pokemon_v2_palparkarea_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\nenum pokemon_v2_palparkareaname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pal_park_area_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_palparkareaname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pal_park_area_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_palparkareaname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pal_park_area_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_palparkareaname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pal_park_area_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_palparkareaname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pal_park_area_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_palparkareaname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pal_park_area_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_palparkareaname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pal_park_area_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_palparkareaname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pal_park_area_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\ninput pokemon_v2_palparkareaname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pal_park_area_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\ntype pokemon_v2_pokeathlonstat {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_naturepokeathlonstats(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): [pokemon_v2_naturepokeathlonstat!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_naturepokeathlonstats_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): pokemon_v2_naturepokeathlonstat_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokeathlonstatnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): [pokemon_v2_pokeathlonstatname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokeathlonstatnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): pokemon_v2_pokeathlonstatname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\ntype pokemon_v2_pokeathlonstat_aggregate {\\r\\n  aggregate: pokemon_v2_pokeathlonstat_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokeathlonstat!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\ntype pokemon_v2_pokeathlonstat_aggregate_fields {\\r\\n  avg: pokemon_v2_pokeathlonstat_avg_fields\\r\\n  count(columns: [pokemon_v2_pokeathlonstat_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokeathlonstat_max_fields\\r\\n  min: pokemon_v2_pokeathlonstat_min_fields\\r\\n  stddev: pokemon_v2_pokeathlonstat_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokeathlonstat_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokeathlonstat_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokeathlonstat_sum_fields\\r\\n  var_pop: pokemon_v2_pokeathlonstat_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokeathlonstat_var_samp_fields\\r\\n  variance: pokemon_v2_pokeathlonstat_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokeathlonstat_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokeathlonstat_bool_exp {\\r\\n  _and: [pokemon_v2_pokeathlonstat_bool_exp!]\\r\\n  _not: pokemon_v2_pokeathlonstat_bool_exp\\r\\n  _or: [pokemon_v2_pokeathlonstat_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_naturepokeathlonstats: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  pokemon_v2_pokeathlonstatnames: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokeathlonstat_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokeathlonstat_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\".\\r\\ninput pokemon_v2_pokeathlonstat_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_naturepokeathlonstats_aggregate: pokemon_v2_naturepokeathlonstat_aggregate_order_by\\r\\n  pokemon_v2_pokeathlonstatnames_aggregate: pokemon_v2_pokeathlonstatname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\nenum pokemon_v2_pokeathlonstat_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokeathlonstat_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokeathlonstat_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokeathlonstat_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokeathlonstat_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokeathlonstat_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokeathlonstat_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokeathlonstat_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ntype pokemon_v2_pokeathlonstatname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pokeathlon_stat_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokeathlonstat: pokemon_v2_pokeathlonstat\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ntype pokemon_v2_pokeathlonstatname_aggregate {\\r\\n  aggregate: pokemon_v2_pokeathlonstatname_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokeathlonstatname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ntype pokemon_v2_pokeathlonstatname_aggregate_fields {\\r\\n  avg: pokemon_v2_pokeathlonstatname_avg_fields\\r\\n  count(columns: [pokemon_v2_pokeathlonstatname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokeathlonstatname_max_fields\\r\\n  min: pokemon_v2_pokeathlonstatname_min_fields\\r\\n  stddev: pokemon_v2_pokeathlonstatname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokeathlonstatname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokeathlonstatname_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokeathlonstatname_sum_fields\\r\\n  var_pop: pokemon_v2_pokeathlonstatname_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokeathlonstatname_var_samp_fields\\r\\n  variance: pokemon_v2_pokeathlonstatname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokeathlonstatname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokeathlonstatname_max_order_by\\r\\n  min: pokemon_v2_pokeathlonstatname_min_order_by\\r\\n  stddev: pokemon_v2_pokeathlonstatname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokeathlonstatname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokeathlonstatname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokeathlonstatname_sum_order_by\\r\\n  var_pop: pokemon_v2_pokeathlonstatname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokeathlonstatname_var_samp_order_by\\r\\n  variance: pokemon_v2_pokeathlonstatname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokeathlonstatname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokeathlonstatname_bool_exp {\\r\\n  _and: [pokemon_v2_pokeathlonstatname_bool_exp!]\\r\\n  _not: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  _or: [pokemon_v2_pokeathlonstatname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokeathlon_stat_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokeathlonstat: pokemon_v2_pokeathlonstat_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokeathlonstatname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokeathlon_stat_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokeathlonstatname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokeathlon_stat_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\".\\r\\ninput pokemon_v2_pokeathlonstatname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokeathlonstat: pokemon_v2_pokeathlonstat_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\nenum pokemon_v2_pokeathlonstatname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pokeathlon_stat_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokeathlonstatname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokeathlonstatname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokeathlonstatname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokeathlonstatname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokeathlon_stat_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokeathlonstatname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokeathlonstatname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokeathlonstatname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokeathlon_stat_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\ninput pokemon_v2_pokeathlonstatname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokeathlon_stat_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ntype pokemon_v2_pokedex {\\r\\n  id: Int!\\r\\n  is_main_series: Boolean!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokedexdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): [pokemon_v2_pokedexdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokedexdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): pokemon_v2_pokedexdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokedexnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): [pokemon_v2_pokedexname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokedexnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): pokemon_v2_pokedexname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokedexversiongroups(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): [pokemon_v2_pokedexversiongroup!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokedexversiongroups_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): pokemon_v2_pokedexversiongroup_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemondexnumbers(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): [pokemon_v2_pokemondexnumber!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemondexnumbers_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): pokemon_v2_pokemondexnumber_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_region: pokemon_v2_region\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ntype pokemon_v2_pokedex_aggregate {\\r\\n  aggregate: pokemon_v2_pokedex_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokedex!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ntype pokemon_v2_pokedex_aggregate_fields {\\r\\n  avg: pokemon_v2_pokedex_avg_fields\\r\\n  count(columns: [pokemon_v2_pokedex_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokedex_max_fields\\r\\n  min: pokemon_v2_pokedex_min_fields\\r\\n  stddev: pokemon_v2_pokedex_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokedex_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokedex_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokedex_sum_fields\\r\\n  var_pop: pokemon_v2_pokedex_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokedex_var_samp_fields\\r\\n  variance: pokemon_v2_pokedex_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokedex_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokedex_max_order_by\\r\\n  min: pokemon_v2_pokedex_min_order_by\\r\\n  stddev: pokemon_v2_pokedex_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokedex_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokedex_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokedex_sum_order_by\\r\\n  var_pop: pokemon_v2_pokedex_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokedex_var_samp_order_by\\r\\n  variance: pokemon_v2_pokedex_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokedex_avg_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_avg_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokedex\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokedex_bool_exp {\\r\\n  _and: [pokemon_v2_pokedex_bool_exp!]\\r\\n  _not: pokemon_v2_pokedex_bool_exp\\r\\n  _or: [pokemon_v2_pokedex_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  is_main_series: Boolean_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_pokedexdescriptions: pokemon_v2_pokedexdescription_bool_exp\\r\\n  pokemon_v2_pokedexnames: pokemon_v2_pokedexname_bool_exp\\r\\n  pokemon_v2_pokedexversiongroups: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  pokemon_v2_pokemondexnumbers: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  pokemon_v2_region: pokemon_v2_region_bool_exp\\r\\n  region_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokedex_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_max_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokedex_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_min_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokedex\\\\\\\".\\r\\ninput pokemon_v2_pokedex_order_by {\\r\\n  id: order_by\\r\\n  is_main_series: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_pokedexdescriptions_aggregate: pokemon_v2_pokedexdescription_aggregate_order_by\\r\\n  pokemon_v2_pokedexnames_aggregate: pokemon_v2_pokedexname_aggregate_order_by\\r\\n  pokemon_v2_pokedexversiongroups_aggregate: pokemon_v2_pokedexversiongroup_aggregate_order_by\\r\\n  pokemon_v2_pokemondexnumbers_aggregate: pokemon_v2_pokemondexnumber_aggregate_order_by\\r\\n  pokemon_v2_region: pokemon_v2_region_order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\nenum pokemon_v2_pokedex_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_main_series\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  region_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokedex_stddev_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_stddev_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokedex_stddev_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokedex_stddev_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokedex_sum_fields {\\r\\n  id: Int\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_sum_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokedex_var_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_var_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokedex_var_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_var_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokedex_variance_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\ninput pokemon_v2_pokedex_variance_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ntype pokemon_v2_pokedexdescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  pokedex_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ntype pokemon_v2_pokedexdescription_aggregate {\\r\\n  aggregate: pokemon_v2_pokedexdescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokedexdescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ntype pokemon_v2_pokedexdescription_aggregate_fields {\\r\\n  avg: pokemon_v2_pokedexdescription_avg_fields\\r\\n  count(columns: [pokemon_v2_pokedexdescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokedexdescription_max_fields\\r\\n  min: pokemon_v2_pokedexdescription_min_fields\\r\\n  stddev: pokemon_v2_pokedexdescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokedexdescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokedexdescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokedexdescription_sum_fields\\r\\n  var_pop: pokemon_v2_pokedexdescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokedexdescription_var_samp_fields\\r\\n  variance: pokemon_v2_pokedexdescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokedexdescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokedexdescription_max_order_by\\r\\n  min: pokemon_v2_pokedexdescription_min_order_by\\r\\n  stddev: pokemon_v2_pokedexdescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokedexdescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokedexdescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokedexdescription_sum_order_by\\r\\n  var_pop: pokemon_v2_pokedexdescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokedexdescription_var_samp_order_by\\r\\n  variance: pokemon_v2_pokedexdescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokedexdescription_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokedexdescription_bool_exp {\\r\\n  _and: [pokemon_v2_pokedexdescription_bool_exp!]\\r\\n  _not: pokemon_v2_pokedexdescription_bool_exp\\r\\n  _or: [pokemon_v2_pokedexdescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokedex_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokedexdescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokedex_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokedexdescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokedex_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\".\\r\\ninput pokemon_v2_pokedexdescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\nenum pokemon_v2_pokedexdescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  pokedex_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokedexdescription_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokedexdescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokedexdescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokedexdescription_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokedex_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokedexdescription_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokedexdescription_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokedexdescription_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\ninput pokemon_v2_pokedexdescription_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ntype pokemon_v2_pokedexname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pokedex_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ntype pokemon_v2_pokedexname_aggregate {\\r\\n  aggregate: pokemon_v2_pokedexname_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokedexname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ntype pokemon_v2_pokedexname_aggregate_fields {\\r\\n  avg: pokemon_v2_pokedexname_avg_fields\\r\\n  count(columns: [pokemon_v2_pokedexname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokedexname_max_fields\\r\\n  min: pokemon_v2_pokedexname_min_fields\\r\\n  stddev: pokemon_v2_pokedexname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokedexname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokedexname_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokedexname_sum_fields\\r\\n  var_pop: pokemon_v2_pokedexname_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokedexname_var_samp_fields\\r\\n  variance: pokemon_v2_pokedexname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokedexname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokedexname_max_order_by\\r\\n  min: pokemon_v2_pokedexname_min_order_by\\r\\n  stddev: pokemon_v2_pokedexname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokedexname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokedexname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokedexname_sum_order_by\\r\\n  var_pop: pokemon_v2_pokedexname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokedexname_var_samp_order_by\\r\\n  variance: pokemon_v2_pokedexname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokedexname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokedexname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokedexname_bool_exp {\\r\\n  _and: [pokemon_v2_pokedexname_bool_exp!]\\r\\n  _not: pokemon_v2_pokedexname_bool_exp\\r\\n  _or: [pokemon_v2_pokedexname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokedex_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokedexname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokedex_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokedexname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokedex_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokedexname\\\\\\\".\\r\\ninput pokemon_v2_pokedexname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\nenum pokemon_v2_pokedexname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pokedex_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokedexname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokedexname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokedexname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokedexname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokedex_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokedexname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokedexname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokedexname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokedex_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\ninput pokemon_v2_pokedexname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokedex_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ntype pokemon_v2_pokedexversiongroup {\\r\\n  id: Int!\\r\\n  pokedex_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ntype pokemon_v2_pokedexversiongroup_aggregate {\\r\\n  aggregate: pokemon_v2_pokedexversiongroup_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokedexversiongroup!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ntype pokemon_v2_pokedexversiongroup_aggregate_fields {\\r\\n  avg: pokemon_v2_pokedexversiongroup_avg_fields\\r\\n  count(columns: [pokemon_v2_pokedexversiongroup_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokedexversiongroup_max_fields\\r\\n  min: pokemon_v2_pokedexversiongroup_min_fields\\r\\n  stddev: pokemon_v2_pokedexversiongroup_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokedexversiongroup_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokedexversiongroup_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokedexversiongroup_sum_fields\\r\\n  var_pop: pokemon_v2_pokedexversiongroup_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokedexversiongroup_var_samp_fields\\r\\n  variance: pokemon_v2_pokedexversiongroup_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokedexversiongroup_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokedexversiongroup_max_order_by\\r\\n  min: pokemon_v2_pokedexversiongroup_min_order_by\\r\\n  stddev: pokemon_v2_pokedexversiongroup_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokedexversiongroup_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokedexversiongroup_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokedexversiongroup_sum_order_by\\r\\n  var_pop: pokemon_v2_pokedexversiongroup_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokedexversiongroup_var_samp_order_by\\r\\n  variance: pokemon_v2_pokedexversiongroup_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokedexversiongroup_avg_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_avg_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokedexversiongroup_bool_exp {\\r\\n  _and: [pokemon_v2_pokedexversiongroup_bool_exp!]\\r\\n  _not: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  _or: [pokemon_v2_pokedexversiongroup_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokedex_id: Int_comparison_exp\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokedexversiongroup_max_fields {\\r\\n  id: Int\\r\\n  pokedex_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_max_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokedexversiongroup_min_fields {\\r\\n  id: Int\\r\\n  pokedex_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_min_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\".\\r\\ninput pokemon_v2_pokedexversiongroup_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\nenum pokemon_v2_pokedexversiongroup_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokedex_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokedexversiongroup_stddev_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_stddev_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokedexversiongroup_stddev_pop_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokedexversiongroup_stddev_samp_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokedexversiongroup_sum_fields {\\r\\n  id: Int\\r\\n  pokedex_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_sum_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokedexversiongroup_var_pop_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_var_pop_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokedexversiongroup_var_samp_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_var_samp_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokedexversiongroup_variance_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\ninput pokemon_v2_pokedexversiongroup_variance_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ntype pokemon_v2_pokemon {\\r\\n  base_experience: Int\\r\\n  height: Int\\r\\n  id: Int!\\r\\n  is_default: Boolean!\\r\\n  name: String!\\r\\n  order: Int\\r\\n  pokemon_species_id: Int\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounters(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): [pokemon_v2_encounter!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounters_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): pokemon_v2_encounter_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonabilities(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): [pokemon_v2_pokemonability!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonabilities_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): pokemon_v2_pokemonability_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonforms(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): [pokemon_v2_pokemonform!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonforms_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): pokemon_v2_pokemonform_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemongameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): [pokemon_v2_pokemongameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemongameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): pokemon_v2_pokemongameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonitems(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): [pokemon_v2_pokemonitem!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonitems_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): pokemon_v2_pokemonitem_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonmoves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): [pokemon_v2_pokemonmove!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonmoves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): pokemon_v2_pokemonmove_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonsprites_bool_exp\\r\\n  ): [pokemon_v2_pokemonsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonsprites_bool_exp\\r\\n  ): pokemon_v2_pokemonsprites_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonstats(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): [pokemon_v2_pokemonstat!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonstats_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): pokemon_v2_pokemonstat_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemontypepasts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): [pokemon_v2_pokemontypepast!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemontypepasts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): pokemon_v2_pokemontypepast_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemontypes(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): [pokemon_v2_pokemontype!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemontypes_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): pokemon_v2_pokemontype_aggregate!\\r\\n  weight: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ntype pokemon_v2_pokemon_aggregate {\\r\\n  aggregate: pokemon_v2_pokemon_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemon!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ntype pokemon_v2_pokemon_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemon_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemon_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemon_max_fields\\r\\n  min: pokemon_v2_pokemon_min_fields\\r\\n  stddev: pokemon_v2_pokemon_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemon_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemon_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemon_sum_fields\\r\\n  var_pop: pokemon_v2_pokemon_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemon_var_samp_fields\\r\\n  variance: pokemon_v2_pokemon_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemon_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemon_max_order_by\\r\\n  min: pokemon_v2_pokemon_min_order_by\\r\\n  stddev: pokemon_v2_pokemon_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemon_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemon_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemon_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemon_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemon_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemon_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemon_avg_fields {\\r\\n  base_experience: Float\\r\\n  height: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_species_id: Float\\r\\n  weight: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_avg_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemon\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemon_bool_exp {\\r\\n  _and: [pokemon_v2_pokemon_bool_exp!]\\r\\n  _not: pokemon_v2_pokemon_bool_exp\\r\\n  _or: [pokemon_v2_pokemon_bool_exp!]\\r\\n  base_experience: Int_comparison_exp\\r\\n  height: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  is_default: Boolean_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  order: Int_comparison_exp\\r\\n  pokemon_species_id: Int_comparison_exp\\r\\n  pokemon_v2_encounters: pokemon_v2_encounter_bool_exp\\r\\n  pokemon_v2_pokemonabilities: pokemon_v2_pokemonability_bool_exp\\r\\n  pokemon_v2_pokemonforms: pokemon_v2_pokemonform_bool_exp\\r\\n  pokemon_v2_pokemongameindices: pokemon_v2_pokemongameindex_bool_exp\\r\\n  pokemon_v2_pokemonitems: pokemon_v2_pokemonitem_bool_exp\\r\\n  pokemon_v2_pokemonmoves: pokemon_v2_pokemonmove_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n  pokemon_v2_pokemonsprites: pokemon_v2_pokemonsprites_bool_exp\\r\\n  pokemon_v2_pokemonstats: pokemon_v2_pokemonstat_bool_exp\\r\\n  pokemon_v2_pokemontypepasts: pokemon_v2_pokemontypepast_bool_exp\\r\\n  pokemon_v2_pokemontypes: pokemon_v2_pokemontype_bool_exp\\r\\n  weight: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemon_max_fields {\\r\\n  base_experience: Int\\r\\n  height: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n  pokemon_species_id: Int\\r\\n  weight: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_max_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemon_min_fields {\\r\\n  base_experience: Int\\r\\n  height: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n  pokemon_species_id: Int\\r\\n  weight: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_min_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemon\\\\\\\".\\r\\ninput pokemon_v2_pokemon_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  is_default: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  pokemon_v2_encounters_aggregate: pokemon_v2_encounter_aggregate_order_by\\r\\n  pokemon_v2_pokemonabilities_aggregate: pokemon_v2_pokemonability_aggregate_order_by\\r\\n  pokemon_v2_pokemonforms_aggregate: pokemon_v2_pokemonform_aggregate_order_by\\r\\n  pokemon_v2_pokemongameindices_aggregate: pokemon_v2_pokemongameindex_aggregate_order_by\\r\\n  pokemon_v2_pokemonitems_aggregate: pokemon_v2_pokemonitem_aggregate_order_by\\r\\n  pokemon_v2_pokemonmoves_aggregate: pokemon_v2_pokemonmove_aggregate_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n  pokemon_v2_pokemonsprites_aggregate: pokemon_v2_pokemonsprites_aggregate_order_by\\r\\n  pokemon_v2_pokemonstats_aggregate: pokemon_v2_pokemonstat_aggregate_order_by\\r\\n  pokemon_v2_pokemontypepasts_aggregate: pokemon_v2_pokemontypepast_aggregate_order_by\\r\\n  pokemon_v2_pokemontypes_aggregate: pokemon_v2_pokemontype_aggregate_order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\nenum pokemon_v2_pokemon_select_column {\\r\\n  # column name\\r\\n  base_experience\\r\\n  # column name\\r\\n  height\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_default\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  order\\r\\n  # column name\\r\\n  pokemon_species_id\\r\\n  # column name\\r\\n  weight\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemon_stddev_fields {\\r\\n  base_experience: Float\\r\\n  height: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_species_id: Float\\r\\n  weight: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_stddev_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemon_stddev_pop_fields {\\r\\n  base_experience: Float\\r\\n  height: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_species_id: Float\\r\\n  weight: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_stddev_pop_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemon_stddev_samp_fields {\\r\\n  base_experience: Float\\r\\n  height: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_species_id: Float\\r\\n  weight: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_stddev_samp_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemon_sum_fields {\\r\\n  base_experience: Int\\r\\n  height: Int\\r\\n  id: Int\\r\\n  order: Int\\r\\n  pokemon_species_id: Int\\r\\n  weight: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_sum_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemon_var_pop_fields {\\r\\n  base_experience: Float\\r\\n  height: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_species_id: Float\\r\\n  weight: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_var_pop_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemon_var_samp_fields {\\r\\n  base_experience: Float\\r\\n  height: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_species_id: Float\\r\\n  weight: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_var_samp_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemon_variance_fields {\\r\\n  base_experience: Float\\r\\n  height: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_species_id: Float\\r\\n  weight: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\ninput pokemon_v2_pokemon_variance_order_by {\\r\\n  base_experience: order_by\\r\\n  height: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  weight: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ntype pokemon_v2_pokemonability {\\r\\n  ability_id: Int\\r\\n  id: Int!\\r\\n  is_hidden: Boolean!\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_ability: pokemon_v2_ability\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  slot: Int!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ntype pokemon_v2_pokemonability_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonability_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonability!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ntype pokemon_v2_pokemonability_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonability_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonability_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonability_max_fields\\r\\n  min: pokemon_v2_pokemonability_min_fields\\r\\n  stddev: pokemon_v2_pokemonability_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonability_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonability_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonability_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonability_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonability_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonability_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonability_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonability_max_order_by\\r\\n  min: pokemon_v2_pokemonability_min_order_by\\r\\n  stddev: pokemon_v2_pokemonability_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonability_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonability_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonability_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonability_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonability_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonability_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonability_avg_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_avg_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonability\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonability_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonability_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonability_bool_exp\\r\\n  _or: [pokemon_v2_pokemonability_bool_exp!]\\r\\n  ability_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  is_hidden: Boolean_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_ability: pokemon_v2_ability_bool_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  slot: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonability_max_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_max_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonability_min_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_min_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonability\\\\\\\".\\r\\ninput pokemon_v2_pokemonability_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  is_hidden: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_ability: pokemon_v2_ability_order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\nenum pokemon_v2_pokemonability_select_column {\\r\\n  # column name\\r\\n  ability_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_hidden\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  slot\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonability_stddev_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_stddev_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonability_stddev_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_stddev_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonability_stddev_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_stddev_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonability_sum_fields {\\r\\n  ability_id: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_sum_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonability_var_pop_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_var_pop_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonability_var_samp_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_var_samp_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonability_variance_fields {\\r\\n  ability_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\ninput pokemon_v2_pokemonability_variance_order_by {\\r\\n  ability_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\ntype pokemon_v2_pokemoncolor {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemoncolornames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): [pokemon_v2_pokemoncolorname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemoncolornames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): pokemon_v2_pokemoncolorname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\ntype pokemon_v2_pokemoncolor_aggregate {\\r\\n  aggregate: pokemon_v2_pokemoncolor_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemoncolor!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\ntype pokemon_v2_pokemoncolor_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemoncolor_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemoncolor_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemoncolor_max_fields\\r\\n  min: pokemon_v2_pokemoncolor_min_fields\\r\\n  stddev: pokemon_v2_pokemoncolor_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemoncolor_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemoncolor_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemoncolor_sum_fields\\r\\n  var_pop: pokemon_v2_pokemoncolor_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemoncolor_var_samp_fields\\r\\n  variance: pokemon_v2_pokemoncolor_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemoncolor_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemoncolor_bool_exp {\\r\\n  _and: [pokemon_v2_pokemoncolor_bool_exp!]\\r\\n  _not: pokemon_v2_pokemoncolor_bool_exp\\r\\n  _or: [pokemon_v2_pokemoncolor_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_pokemoncolornames: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  pokemon_v2_pokemonspecies: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemoncolor_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemoncolor_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\".\\r\\ninput pokemon_v2_pokemoncolor_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_pokemoncolornames_aggregate: pokemon_v2_pokemoncolorname_aggregate_order_by\\r\\n  pokemon_v2_pokemonspecies_aggregate: pokemon_v2_pokemonspecies_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\nenum pokemon_v2_pokemoncolor_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemoncolor_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemoncolor_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemoncolor_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemoncolor_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemoncolor_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemoncolor_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemoncolor_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ntype pokemon_v2_pokemoncolorname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pokemon_color_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemoncolor: pokemon_v2_pokemoncolor\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ntype pokemon_v2_pokemoncolorname_aggregate {\\r\\n  aggregate: pokemon_v2_pokemoncolorname_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemoncolorname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ntype pokemon_v2_pokemoncolorname_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemoncolorname_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemoncolorname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemoncolorname_max_fields\\r\\n  min: pokemon_v2_pokemoncolorname_min_fields\\r\\n  stddev: pokemon_v2_pokemoncolorname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemoncolorname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemoncolorname_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemoncolorname_sum_fields\\r\\n  var_pop: pokemon_v2_pokemoncolorname_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemoncolorname_var_samp_fields\\r\\n  variance: pokemon_v2_pokemoncolorname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemoncolorname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemoncolorname_max_order_by\\r\\n  min: pokemon_v2_pokemoncolorname_min_order_by\\r\\n  stddev: pokemon_v2_pokemoncolorname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemoncolorname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemoncolorname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemoncolorname_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemoncolorname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemoncolorname_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemoncolorname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemoncolorname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_color_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemoncolorname_bool_exp {\\r\\n  _and: [pokemon_v2_pokemoncolorname_bool_exp!]\\r\\n  _not: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  _or: [pokemon_v2_pokemoncolorname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_color_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokemoncolor: pokemon_v2_pokemoncolor_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemoncolorname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_color_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemoncolorname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_color_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\".\\r\\ninput pokemon_v2_pokemoncolorname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokemoncolor: pokemon_v2_pokemoncolor_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\nenum pokemon_v2_pokemoncolorname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pokemon_color_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemoncolorname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_color_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemoncolorname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_color_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemoncolorname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_color_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemoncolorname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_color_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemoncolorname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_color_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemoncolorname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_color_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemoncolorname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_color_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\ninput pokemon_v2_pokemoncolorname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_color_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ntype pokemon_v2_pokemondexnumber {\\r\\n  id: Int!\\r\\n  pokedex_id: Int\\r\\n  pokedex_number: Int!\\r\\n  pokemon_species_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ntype pokemon_v2_pokemondexnumber_aggregate {\\r\\n  aggregate: pokemon_v2_pokemondexnumber_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemondexnumber!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ntype pokemon_v2_pokemondexnumber_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemondexnumber_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemondexnumber_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemondexnumber_max_fields\\r\\n  min: pokemon_v2_pokemondexnumber_min_fields\\r\\n  stddev: pokemon_v2_pokemondexnumber_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemondexnumber_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemondexnumber_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemondexnumber_sum_fields\\r\\n  var_pop: pokemon_v2_pokemondexnumber_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemondexnumber_var_samp_fields\\r\\n  variance: pokemon_v2_pokemondexnumber_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemondexnumber_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemondexnumber_max_order_by\\r\\n  min: pokemon_v2_pokemondexnumber_min_order_by\\r\\n  stddev: pokemon_v2_pokemondexnumber_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemondexnumber_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemondexnumber_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemondexnumber_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemondexnumber_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemondexnumber_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemondexnumber_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemondexnumber_avg_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  pokedex_number: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_avg_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemondexnumber_bool_exp {\\r\\n  _and: [pokemon_v2_pokemondexnumber_bool_exp!]\\r\\n  _not: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  _or: [pokemon_v2_pokemondexnumber_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokedex_id: Int_comparison_exp\\r\\n  pokedex_number: Int_comparison_exp\\r\\n  pokemon_species_id: Int_comparison_exp\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemondexnumber_max_fields {\\r\\n  id: Int\\r\\n  pokedex_id: Int\\r\\n  pokedex_number: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_max_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemondexnumber_min_fields {\\r\\n  id: Int\\r\\n  pokedex_id: Int\\r\\n  pokedex_number: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_min_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\".\\r\\ninput pokemon_v2_pokemondexnumber_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  pokemon_v2_pokedex: pokemon_v2_pokedex_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\nenum pokemon_v2_pokemondexnumber_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokedex_id\\r\\n  # column name\\r\\n  pokedex_number\\r\\n  # column name\\r\\n  pokemon_species_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemondexnumber_stddev_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  pokedex_number: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_stddev_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemondexnumber_stddev_pop_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  pokedex_number: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemondexnumber_stddev_samp_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  pokedex_number: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemondexnumber_sum_fields {\\r\\n  id: Int\\r\\n  pokedex_id: Int\\r\\n  pokedex_number: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_sum_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemondexnumber_var_pop_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  pokedex_number: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_var_pop_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemondexnumber_var_samp_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  pokedex_number: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_var_samp_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemondexnumber_variance_fields {\\r\\n  id: Float\\r\\n  pokedex_id: Float\\r\\n  pokedex_number: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\ninput pokemon_v2_pokemondexnumber_variance_order_by {\\r\\n  id: order_by\\r\\n  pokedex_id: order_by\\r\\n  pokedex_number: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ntype pokemon_v2_pokemonegggroup {\\r\\n  egg_group_id: Int\\r\\n  id: Int!\\r\\n  pokemon_species_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_egggroup: pokemon_v2_egggroup\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ntype pokemon_v2_pokemonegggroup_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonegggroup_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonegggroup!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ntype pokemon_v2_pokemonegggroup_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonegggroup_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonegggroup_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonegggroup_max_fields\\r\\n  min: pokemon_v2_pokemonegggroup_min_fields\\r\\n  stddev: pokemon_v2_pokemonegggroup_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonegggroup_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonegggroup_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonegggroup_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonegggroup_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonegggroup_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonegggroup_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonegggroup_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonegggroup_max_order_by\\r\\n  min: pokemon_v2_pokemonegggroup_min_order_by\\r\\n  stddev: pokemon_v2_pokemonegggroup_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonegggroup_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonegggroup_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonegggroup_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonegggroup_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonegggroup_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonegggroup_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonegggroup_avg_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_avg_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonegggroup_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonegggroup_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  _or: [pokemon_v2_pokemonegggroup_bool_exp!]\\r\\n  egg_group_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_species_id: Int_comparison_exp\\r\\n  pokemon_v2_egggroup: pokemon_v2_egggroup_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonegggroup_max_fields {\\r\\n  egg_group_id: Int\\r\\n  id: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_max_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonegggroup_min_fields {\\r\\n  egg_group_id: Int\\r\\n  id: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_min_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\".\\r\\ninput pokemon_v2_pokemonegggroup_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  pokemon_v2_egggroup: pokemon_v2_egggroup_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\nenum pokemon_v2_pokemonegggroup_select_column {\\r\\n  # column name\\r\\n  egg_group_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_species_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonegggroup_stddev_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_stddev_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonegggroup_stddev_pop_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_stddev_pop_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonegggroup_stddev_samp_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_stddev_samp_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonegggroup_sum_fields {\\r\\n  egg_group_id: Int\\r\\n  id: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_sum_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonegggroup_var_pop_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_var_pop_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonegggroup_var_samp_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_var_samp_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonegggroup_variance_fields {\\r\\n  egg_group_id: Float\\r\\n  id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\ninput pokemon_v2_pokemonegggroup_variance_order_by {\\r\\n  egg_group_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ntype pokemon_v2_pokemonevolution {\\r\\n  evolution_item_id: Int\\r\\n  evolution_trigger_id: Int\\r\\n  evolved_species_id: Int\\r\\n  gender_id: Int\\r\\n  held_item_id: Int\\r\\n  id: Int!\\r\\n  known_move_id: Int\\r\\n  known_move_type_id: Int\\r\\n  location_id: Int\\r\\n  min_affection: Int\\r\\n  min_beauty: Int\\r\\n  min_happiness: Int\\r\\n  min_level: Int\\r\\n  needs_overworld_rain: Boolean!\\r\\n  party_species_id: Int\\r\\n  party_type_id: Int\\r\\n  # An object relationship\\r\\n  pokemonV2ItemByHeldItemId: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemonV2PokemonspecyByPartySpeciesId: pokemon_v2_pokemonspecies\\r\\n  # An object relationship\\r\\n  pokemonV2PokemonspecyByTradeSpeciesId: pokemon_v2_pokemonspecies\\r\\n  # An object relationship\\r\\n  pokemonV2TypeByPartyTypeId: pokemon_v2_type\\r\\n  # An object relationship\\r\\n  pokemon_v2_evolutiontrigger: pokemon_v2_evolutiontrigger\\r\\n  # An object relationship\\r\\n  pokemon_v2_gender: pokemon_v2_gender\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_location: pokemon_v2_location\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  relative_physical_stats: Int\\r\\n  time_of_day: String\\r\\n  trade_species_id: Int\\r\\n  turn_upside_down: Boolean!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ntype pokemon_v2_pokemonevolution_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonevolution_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonevolution!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ntype pokemon_v2_pokemonevolution_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonevolution_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonevolution_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonevolution_max_fields\\r\\n  min: pokemon_v2_pokemonevolution_min_fields\\r\\n  stddev: pokemon_v2_pokemonevolution_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonevolution_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonevolution_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonevolution_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonevolution_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonevolution_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonevolution_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonevolution_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonevolution_max_order_by\\r\\n  min: pokemon_v2_pokemonevolution_min_order_by\\r\\n  stddev: pokemon_v2_pokemonevolution_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonevolution_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonevolution_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonevolution_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonevolution_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonevolution_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonevolution_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonevolution_avg_fields {\\r\\n  evolution_item_id: Float\\r\\n  evolution_trigger_id: Float\\r\\n  evolved_species_id: Float\\r\\n  gender_id: Float\\r\\n  held_item_id: Float\\r\\n  id: Float\\r\\n  known_move_id: Float\\r\\n  known_move_type_id: Float\\r\\n  location_id: Float\\r\\n  min_affection: Float\\r\\n  min_beauty: Float\\r\\n  min_happiness: Float\\r\\n  min_level: Float\\r\\n  party_species_id: Float\\r\\n  party_type_id: Float\\r\\n  relative_physical_stats: Float\\r\\n  trade_species_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_avg_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonevolution_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonevolution_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonevolution_bool_exp\\r\\n  _or: [pokemon_v2_pokemonevolution_bool_exp!]\\r\\n  evolution_item_id: Int_comparison_exp\\r\\n  evolution_trigger_id: Int_comparison_exp\\r\\n  evolved_species_id: Int_comparison_exp\\r\\n  gender_id: Int_comparison_exp\\r\\n  held_item_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  known_move_id: Int_comparison_exp\\r\\n  known_move_type_id: Int_comparison_exp\\r\\n  location_id: Int_comparison_exp\\r\\n  min_affection: Int_comparison_exp\\r\\n  min_beauty: Int_comparison_exp\\r\\n  min_happiness: Int_comparison_exp\\r\\n  min_level: Int_comparison_exp\\r\\n  needs_overworld_rain: Boolean_comparison_exp\\r\\n  party_species_id: Int_comparison_exp\\r\\n  party_type_id: Int_comparison_exp\\r\\n  pokemonV2ItemByHeldItemId: pokemon_v2_item_bool_exp\\r\\n  pokemonV2PokemonspecyByPartySpeciesId: pokemon_v2_pokemonspecies_bool_exp\\r\\n  pokemonV2PokemonspecyByTradeSpeciesId: pokemon_v2_pokemonspecies_bool_exp\\r\\n  pokemonV2TypeByPartyTypeId: pokemon_v2_type_bool_exp\\r\\n  pokemon_v2_evolutiontrigger: pokemon_v2_evolutiontrigger_bool_exp\\r\\n  pokemon_v2_gender: pokemon_v2_gender_bool_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_location: pokemon_v2_location_bool_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  relative_physical_stats: Int_comparison_exp\\r\\n  time_of_day: String_comparison_exp\\r\\n  trade_species_id: Int_comparison_exp\\r\\n  turn_upside_down: Boolean_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonevolution_max_fields {\\r\\n  evolution_item_id: Int\\r\\n  evolution_trigger_id: Int\\r\\n  evolved_species_id: Int\\r\\n  gender_id: Int\\r\\n  held_item_id: Int\\r\\n  id: Int\\r\\n  known_move_id: Int\\r\\n  known_move_type_id: Int\\r\\n  location_id: Int\\r\\n  min_affection: Int\\r\\n  min_beauty: Int\\r\\n  min_happiness: Int\\r\\n  min_level: Int\\r\\n  party_species_id: Int\\r\\n  party_type_id: Int\\r\\n  relative_physical_stats: Int\\r\\n  time_of_day: String\\r\\n  trade_species_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_max_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  time_of_day: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonevolution_min_fields {\\r\\n  evolution_item_id: Int\\r\\n  evolution_trigger_id: Int\\r\\n  evolved_species_id: Int\\r\\n  gender_id: Int\\r\\n  held_item_id: Int\\r\\n  id: Int\\r\\n  known_move_id: Int\\r\\n  known_move_type_id: Int\\r\\n  location_id: Int\\r\\n  min_affection: Int\\r\\n  min_beauty: Int\\r\\n  min_happiness: Int\\r\\n  min_level: Int\\r\\n  party_species_id: Int\\r\\n  party_type_id: Int\\r\\n  relative_physical_stats: Int\\r\\n  time_of_day: String\\r\\n  trade_species_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_min_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  time_of_day: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\".\\r\\ninput pokemon_v2_pokemonevolution_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  needs_overworld_rain: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  pokemonV2ItemByHeldItemId: pokemon_v2_item_order_by\\r\\n  pokemonV2PokemonspecyByPartySpeciesId: pokemon_v2_pokemonspecies_order_by\\r\\n  pokemonV2PokemonspecyByTradeSpeciesId: pokemon_v2_pokemonspecies_order_by\\r\\n  pokemonV2TypeByPartyTypeId: pokemon_v2_type_order_by\\r\\n  pokemon_v2_evolutiontrigger: pokemon_v2_evolutiontrigger_order_by\\r\\n  pokemon_v2_gender: pokemon_v2_gender_order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_location: pokemon_v2_location_order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  relative_physical_stats: order_by\\r\\n  time_of_day: order_by\\r\\n  trade_species_id: order_by\\r\\n  turn_upside_down: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\nenum pokemon_v2_pokemonevolution_select_column {\\r\\n  # column name\\r\\n  evolution_item_id\\r\\n  # column name\\r\\n  evolution_trigger_id\\r\\n  # column name\\r\\n  evolved_species_id\\r\\n  # column name\\r\\n  gender_id\\r\\n  # column name\\r\\n  held_item_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  known_move_id\\r\\n  # column name\\r\\n  known_move_type_id\\r\\n  # column name\\r\\n  location_id\\r\\n  # column name\\r\\n  min_affection\\r\\n  # column name\\r\\n  min_beauty\\r\\n  # column name\\r\\n  min_happiness\\r\\n  # column name\\r\\n  min_level\\r\\n  # column name\\r\\n  needs_overworld_rain\\r\\n  # column name\\r\\n  party_species_id\\r\\n  # column name\\r\\n  party_type_id\\r\\n  # column name\\r\\n  relative_physical_stats\\r\\n  # column name\\r\\n  time_of_day\\r\\n  # column name\\r\\n  trade_species_id\\r\\n  # column name\\r\\n  turn_upside_down\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonevolution_stddev_fields {\\r\\n  evolution_item_id: Float\\r\\n  evolution_trigger_id: Float\\r\\n  evolved_species_id: Float\\r\\n  gender_id: Float\\r\\n  held_item_id: Float\\r\\n  id: Float\\r\\n  known_move_id: Float\\r\\n  known_move_type_id: Float\\r\\n  location_id: Float\\r\\n  min_affection: Float\\r\\n  min_beauty: Float\\r\\n  min_happiness: Float\\r\\n  min_level: Float\\r\\n  party_species_id: Float\\r\\n  party_type_id: Float\\r\\n  relative_physical_stats: Float\\r\\n  trade_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_stddev_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonevolution_stddev_pop_fields {\\r\\n  evolution_item_id: Float\\r\\n  evolution_trigger_id: Float\\r\\n  evolved_species_id: Float\\r\\n  gender_id: Float\\r\\n  held_item_id: Float\\r\\n  id: Float\\r\\n  known_move_id: Float\\r\\n  known_move_type_id: Float\\r\\n  location_id: Float\\r\\n  min_affection: Float\\r\\n  min_beauty: Float\\r\\n  min_happiness: Float\\r\\n  min_level: Float\\r\\n  party_species_id: Float\\r\\n  party_type_id: Float\\r\\n  relative_physical_stats: Float\\r\\n  trade_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_stddev_pop_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonevolution_stddev_samp_fields {\\r\\n  evolution_item_id: Float\\r\\n  evolution_trigger_id: Float\\r\\n  evolved_species_id: Float\\r\\n  gender_id: Float\\r\\n  held_item_id: Float\\r\\n  id: Float\\r\\n  known_move_id: Float\\r\\n  known_move_type_id: Float\\r\\n  location_id: Float\\r\\n  min_affection: Float\\r\\n  min_beauty: Float\\r\\n  min_happiness: Float\\r\\n  min_level: Float\\r\\n  party_species_id: Float\\r\\n  party_type_id: Float\\r\\n  relative_physical_stats: Float\\r\\n  trade_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_stddev_samp_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonevolution_sum_fields {\\r\\n  evolution_item_id: Int\\r\\n  evolution_trigger_id: Int\\r\\n  evolved_species_id: Int\\r\\n  gender_id: Int\\r\\n  held_item_id: Int\\r\\n  id: Int\\r\\n  known_move_id: Int\\r\\n  known_move_type_id: Int\\r\\n  location_id: Int\\r\\n  min_affection: Int\\r\\n  min_beauty: Int\\r\\n  min_happiness: Int\\r\\n  min_level: Int\\r\\n  party_species_id: Int\\r\\n  party_type_id: Int\\r\\n  relative_physical_stats: Int\\r\\n  trade_species_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_sum_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonevolution_var_pop_fields {\\r\\n  evolution_item_id: Float\\r\\n  evolution_trigger_id: Float\\r\\n  evolved_species_id: Float\\r\\n  gender_id: Float\\r\\n  held_item_id: Float\\r\\n  id: Float\\r\\n  known_move_id: Float\\r\\n  known_move_type_id: Float\\r\\n  location_id: Float\\r\\n  min_affection: Float\\r\\n  min_beauty: Float\\r\\n  min_happiness: Float\\r\\n  min_level: Float\\r\\n  party_species_id: Float\\r\\n  party_type_id: Float\\r\\n  relative_physical_stats: Float\\r\\n  trade_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_var_pop_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonevolution_var_samp_fields {\\r\\n  evolution_item_id: Float\\r\\n  evolution_trigger_id: Float\\r\\n  evolved_species_id: Float\\r\\n  gender_id: Float\\r\\n  held_item_id: Float\\r\\n  id: Float\\r\\n  known_move_id: Float\\r\\n  known_move_type_id: Float\\r\\n  location_id: Float\\r\\n  min_affection: Float\\r\\n  min_beauty: Float\\r\\n  min_happiness: Float\\r\\n  min_level: Float\\r\\n  party_species_id: Float\\r\\n  party_type_id: Float\\r\\n  relative_physical_stats: Float\\r\\n  trade_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_var_samp_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonevolution_variance_fields {\\r\\n  evolution_item_id: Float\\r\\n  evolution_trigger_id: Float\\r\\n  evolved_species_id: Float\\r\\n  gender_id: Float\\r\\n  held_item_id: Float\\r\\n  id: Float\\r\\n  known_move_id: Float\\r\\n  known_move_type_id: Float\\r\\n  location_id: Float\\r\\n  min_affection: Float\\r\\n  min_beauty: Float\\r\\n  min_happiness: Float\\r\\n  min_level: Float\\r\\n  party_species_id: Float\\r\\n  party_type_id: Float\\r\\n  relative_physical_stats: Float\\r\\n  trade_species_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\ninput pokemon_v2_pokemonevolution_variance_order_by {\\r\\n  evolution_item_id: order_by\\r\\n  evolution_trigger_id: order_by\\r\\n  evolved_species_id: order_by\\r\\n  gender_id: order_by\\r\\n  held_item_id: order_by\\r\\n  id: order_by\\r\\n  known_move_id: order_by\\r\\n  known_move_type_id: order_by\\r\\n  location_id: order_by\\r\\n  min_affection: order_by\\r\\n  min_beauty: order_by\\r\\n  min_happiness: order_by\\r\\n  min_level: order_by\\r\\n  party_species_id: order_by\\r\\n  party_type_id: order_by\\r\\n  relative_physical_stats: order_by\\r\\n  trade_species_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ntype pokemon_v2_pokemonform {\\r\\n  form_name: String!\\r\\n  form_order: Int\\r\\n  id: Int!\\r\\n  is_battle_only: Boolean!\\r\\n  is_default: Boolean!\\r\\n  is_mega: Boolean!\\r\\n  name: String!\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformgenerations(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): [pokemon_v2_pokemonformgeneration!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformgenerations_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): pokemon_v2_pokemonformgeneration_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): [pokemon_v2_pokemonformname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): pokemon_v2_pokemonformname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  ): [pokemon_v2_pokemonformsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  ): pokemon_v2_pokemonformsprites_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformtypes(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): [pokemon_v2_pokemonformtype!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformtypes_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): pokemon_v2_pokemonformtype_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ntype pokemon_v2_pokemonform_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonform_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonform!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ntype pokemon_v2_pokemonform_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonform_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonform_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonform_max_fields\\r\\n  min: pokemon_v2_pokemonform_min_fields\\r\\n  stddev: pokemon_v2_pokemonform_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonform_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonform_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonform_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonform_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonform_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonform_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonform_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonform_max_order_by\\r\\n  min: pokemon_v2_pokemonform_min_order_by\\r\\n  stddev: pokemon_v2_pokemonform_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonform_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonform_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonform_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonform_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonform_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonform_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonform_avg_fields {\\r\\n  form_order: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_avg_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonform\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonform_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonform_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonform_bool_exp\\r\\n  _or: [pokemon_v2_pokemonform_bool_exp!]\\r\\n  form_name: String_comparison_exp\\r\\n  form_order: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  is_battle_only: Boolean_comparison_exp\\r\\n  is_default: Boolean_comparison_exp\\r\\n  is_mega: Boolean_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  order: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_pokemonformgenerations: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  pokemon_v2_pokemonformnames: pokemon_v2_pokemonformname_bool_exp\\r\\n  pokemon_v2_pokemonformsprites: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  pokemon_v2_pokemonformtypes: pokemon_v2_pokemonformtype_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonform_max_fields {\\r\\n  form_name: String\\r\\n  form_order: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_max_order_by {\\r\\n  form_name: order_by\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonform_min_fields {\\r\\n  form_name: String\\r\\n  form_order: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_min_order_by {\\r\\n  form_name: order_by\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonform\\\\\\\".\\r\\ninput pokemon_v2_pokemonform_order_by {\\r\\n  form_name: order_by\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  is_battle_only: order_by\\r\\n  is_default: order_by\\r\\n  is_mega: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_pokemonformgenerations_aggregate: pokemon_v2_pokemonformgeneration_aggregate_order_by\\r\\n  pokemon_v2_pokemonformnames_aggregate: pokemon_v2_pokemonformname_aggregate_order_by\\r\\n  pokemon_v2_pokemonformsprites_aggregate: pokemon_v2_pokemonformsprites_aggregate_order_by\\r\\n  pokemon_v2_pokemonformtypes_aggregate: pokemon_v2_pokemonformtype_aggregate_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\nenum pokemon_v2_pokemonform_select_column {\\r\\n  # column name\\r\\n  form_name\\r\\n  # column name\\r\\n  form_order\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_battle_only\\r\\n  # column name\\r\\n  is_default\\r\\n  # column name\\r\\n  is_mega\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  order\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonform_stddev_fields {\\r\\n  form_order: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_stddev_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonform_stddev_pop_fields {\\r\\n  form_order: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_stddev_pop_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonform_stddev_samp_fields {\\r\\n  form_order: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_stddev_samp_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonform_sum_fields {\\r\\n  form_order: Int\\r\\n  id: Int\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_sum_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonform_var_pop_fields {\\r\\n  form_order: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_var_pop_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonform_var_samp_fields {\\r\\n  form_order: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_var_samp_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonform_variance_fields {\\r\\n  form_order: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\ninput pokemon_v2_pokemonform_variance_order_by {\\r\\n  form_order: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ntype pokemon_v2_pokemonformgeneration {\\r\\n  game_index: Int!\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  pokemon_form_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ntype pokemon_v2_pokemonformgeneration_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonformgeneration_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonformgeneration!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ntype pokemon_v2_pokemonformgeneration_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonformgeneration_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonformgeneration_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonformgeneration_max_fields\\r\\n  min: pokemon_v2_pokemonformgeneration_min_fields\\r\\n  stddev: pokemon_v2_pokemonformgeneration_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonformgeneration_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonformgeneration_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonformgeneration_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonformgeneration_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonformgeneration_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonformgeneration_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonformgeneration_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonformgeneration_max_order_by\\r\\n  min: pokemon_v2_pokemonformgeneration_min_order_by\\r\\n  stddev: pokemon_v2_pokemonformgeneration_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonformgeneration_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonformgeneration_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonformgeneration_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonformgeneration_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonformgeneration_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonformgeneration_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonformgeneration_avg_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_avg_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonformgeneration_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonformgeneration_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  _or: [pokemon_v2_pokemonformgeneration_bool_exp!]\\r\\n  game_index: Int_comparison_exp\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_form_id: Int_comparison_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonformgeneration_max_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_max_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonformgeneration_min_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_min_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\".\\r\\ninput pokemon_v2_pokemonformgeneration_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\nenum pokemon_v2_pokemonformgeneration_select_column {\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_form_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonformgeneration_stddev_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_stddev_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonformgeneration_stddev_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_stddev_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonformgeneration_stddev_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_stddev_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonformgeneration_sum_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_sum_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonformgeneration_var_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_var_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonformgeneration_var_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_var_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonformgeneration_variance_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\ninput pokemon_v2_pokemonformgeneration_variance_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ntype pokemon_v2_pokemonformname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pokemon_form_id: Int\\r\\n  pokemon_name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ntype pokemon_v2_pokemonformname_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonformname_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonformname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ntype pokemon_v2_pokemonformname_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonformname_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonformname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonformname_max_fields\\r\\n  min: pokemon_v2_pokemonformname_min_fields\\r\\n  stddev: pokemon_v2_pokemonformname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonformname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonformname_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonformname_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonformname_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonformname_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonformname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonformname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonformname_max_order_by\\r\\n  min: pokemon_v2_pokemonformname_min_order_by\\r\\n  stddev: pokemon_v2_pokemonformname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonformname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonformname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonformname_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonformname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonformname_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonformname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonformname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonformname_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonformname_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonformname_bool_exp\\r\\n  _or: [pokemon_v2_pokemonformname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_form_id: Int_comparison_exp\\r\\n  pokemon_name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonformname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_form_id: Int\\r\\n  pokemon_name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  pokemon_name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonformname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_form_id: Int\\r\\n  pokemon_name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  pokemon_name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonformname\\\\\\\".\\r\\ninput pokemon_v2_pokemonformname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  pokemon_name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\nenum pokemon_v2_pokemonformname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pokemon_form_id\\r\\n  # column name\\r\\n  pokemon_name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonformname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonformname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonformname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonformname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_form_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonformname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonformname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonformname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\ninput pokemon_v2_pokemonformname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ntype pokemon_v2_pokemonformsprites {\\r\\n  id: Int!\\r\\n  pokemon_form_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform\\r\\n  sprites: String!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ntype pokemon_v2_pokemonformsprites_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonformsprites_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonformsprites!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ntype pokemon_v2_pokemonformsprites_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonformsprites_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonformsprites_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonformsprites_max_fields\\r\\n  min: pokemon_v2_pokemonformsprites_min_fields\\r\\n  stddev: pokemon_v2_pokemonformsprites_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonformsprites_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonformsprites_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonformsprites_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonformsprites_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonformsprites_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonformsprites_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonformsprites_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonformsprites_max_order_by\\r\\n  min: pokemon_v2_pokemonformsprites_min_order_by\\r\\n  stddev: pokemon_v2_pokemonformsprites_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonformsprites_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonformsprites_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonformsprites_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonformsprites_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonformsprites_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonformsprites_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonformsprites_avg_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_avg_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonformsprites_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonformsprites_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  _or: [pokemon_v2_pokemonformsprites_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_form_id: Int_comparison_exp\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_bool_exp\\r\\n  sprites: String_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonformsprites_max_fields {\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n  sprites: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_max_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonformsprites_min_fields {\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n  sprites: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_min_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\".\\r\\ninput pokemon_v2_pokemonformsprites_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\nenum pokemon_v2_pokemonformsprites_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_form_id\\r\\n  # column name\\r\\n  sprites\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonformsprites_stddev_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_stddev_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonformsprites_stddev_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonformsprites_stddev_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonformsprites_sum_fields {\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_sum_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonformsprites_var_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_var_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonformsprites_var_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_var_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonformsprites_variance_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonformsprites_variance_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ntype pokemon_v2_pokemonformtype {\\r\\n  id: Int!\\r\\n  pokemon_form_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  slot: Int!\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ntype pokemon_v2_pokemonformtype_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonformtype_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonformtype!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ntype pokemon_v2_pokemonformtype_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonformtype_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonformtype_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonformtype_max_fields\\r\\n  min: pokemon_v2_pokemonformtype_min_fields\\r\\n  stddev: pokemon_v2_pokemonformtype_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonformtype_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonformtype_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonformtype_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonformtype_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonformtype_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonformtype_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonformtype_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonformtype_max_order_by\\r\\n  min: pokemon_v2_pokemonformtype_min_order_by\\r\\n  stddev: pokemon_v2_pokemonformtype_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonformtype_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonformtype_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonformtype_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonformtype_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonformtype_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonformtype_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonformtype_avg_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_avg_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonformtype_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonformtype_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonformtype_bool_exp\\r\\n  _or: [pokemon_v2_pokemonformtype_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_form_id: Int_comparison_exp\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  slot: Int_comparison_exp\\r\\n  type_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonformtype_max_fields {\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_max_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonformtype_min_fields {\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_min_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\".\\r\\ninput pokemon_v2_pokemonformtype_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  pokemon_v2_pokemonform: pokemon_v2_pokemonform_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\nenum pokemon_v2_pokemonformtype_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_form_id\\r\\n  # column name\\r\\n  slot\\r\\n  # column name\\r\\n  type_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonformtype_stddev_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_stddev_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonformtype_stddev_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonformtype_stddev_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonformtype_sum_fields {\\r\\n  id: Int\\r\\n  pokemon_form_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_sum_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonformtype_var_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_var_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonformtype_var_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_var_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonformtype_variance_fields {\\r\\n  id: Float\\r\\n  pokemon_form_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\ninput pokemon_v2_pokemonformtype_variance_order_by {\\r\\n  id: order_by\\r\\n  pokemon_form_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ntype pokemon_v2_pokemongameindex {\\r\\n  game_index: Int!\\r\\n  id: Int!\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An object relationship\\r\\n  pokemon_v2_version: pokemon_v2_version\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ntype pokemon_v2_pokemongameindex_aggregate {\\r\\n  aggregate: pokemon_v2_pokemongameindex_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemongameindex!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ntype pokemon_v2_pokemongameindex_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemongameindex_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemongameindex_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemongameindex_max_fields\\r\\n  min: pokemon_v2_pokemongameindex_min_fields\\r\\n  stddev: pokemon_v2_pokemongameindex_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemongameindex_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemongameindex_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemongameindex_sum_fields\\r\\n  var_pop: pokemon_v2_pokemongameindex_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemongameindex_var_samp_fields\\r\\n  variance: pokemon_v2_pokemongameindex_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemongameindex_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemongameindex_max_order_by\\r\\n  min: pokemon_v2_pokemongameindex_min_order_by\\r\\n  stddev: pokemon_v2_pokemongameindex_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemongameindex_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemongameindex_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemongameindex_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemongameindex_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemongameindex_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemongameindex_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemongameindex_avg_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_avg_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemongameindex_bool_exp {\\r\\n  _and: [pokemon_v2_pokemongameindex_bool_exp!]\\r\\n  _not: pokemon_v2_pokemongameindex_bool_exp\\r\\n  _or: [pokemon_v2_pokemongameindex_bool_exp!]\\r\\n  game_index: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_version: pokemon_v2_version_bool_exp\\r\\n  version_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemongameindex_max_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_max_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemongameindex_min_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_min_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\".\\r\\ninput pokemon_v2_pokemongameindex_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_version: pokemon_v2_version_order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\nenum pokemon_v2_pokemongameindex_select_column {\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  version_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemongameindex_stddev_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_stddev_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemongameindex_stddev_pop_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_stddev_pop_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemongameindex_stddev_samp_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_stddev_samp_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemongameindex_sum_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_sum_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemongameindex_var_pop_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_var_pop_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemongameindex_var_samp_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_var_samp_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemongameindex_variance_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\ninput pokemon_v2_pokemongameindex_variance_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\ntype pokemon_v2_pokemonhabitat {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonhabitatnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): [pokemon_v2_pokemonhabitatname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonhabitatnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): pokemon_v2_pokemonhabitatname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\ntype pokemon_v2_pokemonhabitat_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonhabitat_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonhabitat!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\ntype pokemon_v2_pokemonhabitat_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonhabitat_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonhabitat_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonhabitat_max_fields\\r\\n  min: pokemon_v2_pokemonhabitat_min_fields\\r\\n  stddev: pokemon_v2_pokemonhabitat_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonhabitat_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonhabitat_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonhabitat_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonhabitat_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonhabitat_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonhabitat_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonhabitat_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonhabitat_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonhabitat_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonhabitat_bool_exp\\r\\n  _or: [pokemon_v2_pokemonhabitat_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_pokemonhabitatnames: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  pokemon_v2_pokemonspecies: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonhabitat_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonhabitat_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\".\\r\\ninput pokemon_v2_pokemonhabitat_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_pokemonhabitatnames_aggregate: pokemon_v2_pokemonhabitatname_aggregate_order_by\\r\\n  pokemon_v2_pokemonspecies_aggregate: pokemon_v2_pokemonspecies_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\nenum pokemon_v2_pokemonhabitat_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonhabitat_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonhabitat_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonhabitat_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonhabitat_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonhabitat_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonhabitat_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonhabitat_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ntype pokemon_v2_pokemonhabitatname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pokemon_habitat_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonhabitat: pokemon_v2_pokemonhabitat\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ntype pokemon_v2_pokemonhabitatname_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonhabitatname_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonhabitatname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ntype pokemon_v2_pokemonhabitatname_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonhabitatname_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonhabitatname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonhabitatname_max_fields\\r\\n  min: pokemon_v2_pokemonhabitatname_min_fields\\r\\n  stddev: pokemon_v2_pokemonhabitatname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonhabitatname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonhabitatname_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonhabitatname_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonhabitatname_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonhabitatname_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonhabitatname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonhabitatname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonhabitatname_max_order_by\\r\\n  min: pokemon_v2_pokemonhabitatname_min_order_by\\r\\n  stddev: pokemon_v2_pokemonhabitatname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonhabitatname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonhabitatname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonhabitatname_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonhabitatname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonhabitatname_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonhabitatname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonhabitatname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonhabitatname_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonhabitatname_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  _or: [pokemon_v2_pokemonhabitatname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_habitat_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokemonhabitat: pokemon_v2_pokemonhabitat_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonhabitatname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_habitat_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonhabitatname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_habitat_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\".\\r\\ninput pokemon_v2_pokemonhabitatname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokemonhabitat: pokemon_v2_pokemonhabitat_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\nenum pokemon_v2_pokemonhabitatname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pokemon_habitat_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonhabitatname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonhabitatname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonhabitatname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonhabitatname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_habitat_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonhabitatname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonhabitatname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonhabitatname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\ninput pokemon_v2_pokemonhabitatname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ntype pokemon_v2_pokemonitem {\\r\\n  id: Int!\\r\\n  item_id: Int\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_item: pokemon_v2_item\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An object relationship\\r\\n  pokemon_v2_version: pokemon_v2_version\\r\\n  rarity: Int!\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ntype pokemon_v2_pokemonitem_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonitem_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonitem!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ntype pokemon_v2_pokemonitem_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonitem_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonitem_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonitem_max_fields\\r\\n  min: pokemon_v2_pokemonitem_min_fields\\r\\n  stddev: pokemon_v2_pokemonitem_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonitem_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonitem_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonitem_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonitem_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonitem_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonitem_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonitem_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonitem_max_order_by\\r\\n  min: pokemon_v2_pokemonitem_min_order_by\\r\\n  stddev: pokemon_v2_pokemonitem_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonitem_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonitem_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonitem_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonitem_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonitem_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonitem_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonitem_avg_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  pokemon_id: Float\\r\\n  rarity: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_avg_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonitem_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonitem_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonitem_bool_exp\\r\\n  _or: [pokemon_v2_pokemonitem_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  item_id: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_item: pokemon_v2_item_bool_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_version: pokemon_v2_version_bool_exp\\r\\n  rarity: Int_comparison_exp\\r\\n  version_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonitem_max_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  pokemon_id: Int\\r\\n  rarity: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_max_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonitem_min_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  pokemon_id: Int\\r\\n  rarity: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_min_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonitem\\\\\\\".\\r\\ninput pokemon_v2_pokemonitem_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_item: pokemon_v2_item_order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_version: pokemon_v2_version_order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\nenum pokemon_v2_pokemonitem_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  item_id\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  rarity\\r\\n  # column name\\r\\n  version_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonitem_stddev_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  pokemon_id: Float\\r\\n  rarity: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_stddev_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonitem_stddev_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  pokemon_id: Float\\r\\n  rarity: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonitem_stddev_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  pokemon_id: Float\\r\\n  rarity: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonitem_sum_fields {\\r\\n  id: Int\\r\\n  item_id: Int\\r\\n  pokemon_id: Int\\r\\n  rarity: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_sum_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonitem_var_pop_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  pokemon_id: Float\\r\\n  rarity: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_var_pop_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonitem_var_samp_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  pokemon_id: Float\\r\\n  rarity: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_var_samp_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonitem_variance_fields {\\r\\n  id: Float\\r\\n  item_id: Float\\r\\n  pokemon_id: Float\\r\\n  rarity: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\ninput pokemon_v2_pokemonitem_variance_order_by {\\r\\n  id: order_by\\r\\n  item_id: order_by\\r\\n  pokemon_id: order_by\\r\\n  rarity: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ntype pokemon_v2_pokemonmove {\\r\\n  id: Int!\\r\\n  level: Int!\\r\\n  move_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ntype pokemon_v2_pokemonmove_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonmove_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonmove!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ntype pokemon_v2_pokemonmove_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonmove_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonmove_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonmove_max_fields\\r\\n  min: pokemon_v2_pokemonmove_min_fields\\r\\n  stddev: pokemon_v2_pokemonmove_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonmove_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonmove_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonmove_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonmove_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonmove_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonmove_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonmove_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonmove_max_order_by\\r\\n  min: pokemon_v2_pokemonmove_min_order_by\\r\\n  stddev: pokemon_v2_pokemonmove_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonmove_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonmove_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonmove_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonmove_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonmove_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonmove_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonmove_avg_fields {\\r\\n  id: Float\\r\\n  level: Float\\r\\n  move_id: Float\\r\\n  move_learn_method_id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_avg_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonmove_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonmove_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonmove_bool_exp\\r\\n  _or: [pokemon_v2_pokemonmove_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  level: Int_comparison_exp\\r\\n  move_id: Int_comparison_exp\\r\\n  move_learn_method_id: Int_comparison_exp\\r\\n  order: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_bool_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonmove_max_fields {\\r\\n  id: Int\\r\\n  level: Int\\r\\n  move_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_max_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonmove_min_fields {\\r\\n  id: Int\\r\\n  level: Int\\r\\n  move_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_min_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonmove\\\\\\\".\\r\\ninput pokemon_v2_pokemonmove_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\nenum pokemon_v2_pokemonmove_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  level\\r\\n  # column name\\r\\n  move_id\\r\\n  # column name\\r\\n  move_learn_method_id\\r\\n  # column name\\r\\n  order\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonmove_stddev_fields {\\r\\n  id: Float\\r\\n  level: Float\\r\\n  move_id: Float\\r\\n  move_learn_method_id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_stddev_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonmove_stddev_pop_fields {\\r\\n  id: Float\\r\\n  level: Float\\r\\n  move_id: Float\\r\\n  move_learn_method_id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonmove_stddev_samp_fields {\\r\\n  id: Float\\r\\n  level: Float\\r\\n  move_id: Float\\r\\n  move_learn_method_id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonmove_sum_fields {\\r\\n  id: Int\\r\\n  level: Int\\r\\n  move_id: Int\\r\\n  move_learn_method_id: Int\\r\\n  order: Int\\r\\n  pokemon_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_sum_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonmove_var_pop_fields {\\r\\n  id: Float\\r\\n  level: Float\\r\\n  move_id: Float\\r\\n  move_learn_method_id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_var_pop_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonmove_var_samp_fields {\\r\\n  id: Float\\r\\n  level: Float\\r\\n  move_id: Float\\r\\n  move_learn_method_id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_var_samp_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonmove_variance_fields {\\r\\n  id: Float\\r\\n  level: Float\\r\\n  move_id: Float\\r\\n  move_learn_method_id: Float\\r\\n  order: Float\\r\\n  pokemon_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\ninput pokemon_v2_pokemonmove_variance_order_by {\\r\\n  id: order_by\\r\\n  level: order_by\\r\\n  move_id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  order: order_by\\r\\n  pokemon_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\ntype pokemon_v2_pokemonshape {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonshapenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): [pokemon_v2_pokemonshapename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonshapenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): pokemon_v2_pokemonshapename_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\ntype pokemon_v2_pokemonshape_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonshape_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonshape!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\ntype pokemon_v2_pokemonshape_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonshape_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonshape_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonshape_max_fields\\r\\n  min: pokemon_v2_pokemonshape_min_fields\\r\\n  stddev: pokemon_v2_pokemonshape_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonshape_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonshape_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonshape_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonshape_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonshape_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonshape_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonshape_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonshape\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonshape_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonshape_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonshape_bool_exp\\r\\n  _or: [pokemon_v2_pokemonshape_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_pokemonshapenames: pokemon_v2_pokemonshapename_bool_exp\\r\\n  pokemon_v2_pokemonspecies: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonshape_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonshape_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonshape\\\\\\\".\\r\\ninput pokemon_v2_pokemonshape_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_pokemonshapenames_aggregate: pokemon_v2_pokemonshapename_aggregate_order_by\\r\\n  pokemon_v2_pokemonspecies_aggregate: pokemon_v2_pokemonspecies_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\nenum pokemon_v2_pokemonshape_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonshape_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonshape_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonshape_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonshape_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonshape_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonshape_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonshape_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ntype pokemon_v2_pokemonshapename {\\r\\n  awesome_name: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pokemon_shape_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonshape: pokemon_v2_pokemonshape\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ntype pokemon_v2_pokemonshapename_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonshapename_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonshapename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ntype pokemon_v2_pokemonshapename_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonshapename_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonshapename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonshapename_max_fields\\r\\n  min: pokemon_v2_pokemonshapename_min_fields\\r\\n  stddev: pokemon_v2_pokemonshapename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonshapename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonshapename_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonshapename_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonshapename_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonshapename_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonshapename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonshapename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonshapename_max_order_by\\r\\n  min: pokemon_v2_pokemonshapename_min_order_by\\r\\n  stddev: pokemon_v2_pokemonshapename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonshapename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonshapename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonshapename_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonshapename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonshapename_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonshapename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonshapename_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonshapename_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonshapename_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonshapename_bool_exp\\r\\n  _or: [pokemon_v2_pokemonshapename_bool_exp!]\\r\\n  awesome_name: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_shape_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokemonshape: pokemon_v2_pokemonshape_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonshapename_max_fields {\\r\\n  awesome_name: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_shape_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_max_order_by {\\r\\n  awesome_name: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonshapename_min_fields {\\r\\n  awesome_name: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_shape_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_min_order_by {\\r\\n  awesome_name: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\".\\r\\ninput pokemon_v2_pokemonshapename_order_by {\\r\\n  awesome_name: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokemonshape: pokemon_v2_pokemonshape_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\nenum pokemon_v2_pokemonshapename_select_column {\\r\\n  # column name\\r\\n  awesome_name\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pokemon_shape_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonshapename_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonshapename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonshapename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonshapename_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_shape_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonshapename_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonshapename_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonshapename_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\ninput pokemon_v2_pokemonshapename_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ntype pokemon_v2_pokemonspecies {\\r\\n  base_happiness: Int\\r\\n  capture_rate: Int\\r\\n  evolution_chain_id: Int\\r\\n  evolves_from_species_id: Int\\r\\n  forms_switchable: Boolean!\\r\\n  gender_rate: Int\\r\\n  generation_id: Int\\r\\n  growth_rate_id: Int\\r\\n  has_gender_differences: Boolean!\\r\\n  hatch_counter: Int\\r\\n  id: Int!\\r\\n  is_baby: Boolean!\\r\\n  is_legendary: Boolean!\\r\\n  is_mythical: Boolean!\\r\\n  name: String!\\r\\n  order: Int\\r\\n  # An array relationship\\r\\n  pokemonV2PokemonevolutionsByPartySpeciesId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2PokemonevolutionsByPartySpeciesId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An array relationship\\r\\n  pokemonV2PokemonevolutionsByTradeSpeciesId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  pokemon_color_id: Int\\r\\n  pokemon_habitat_id: Int\\r\\n  pokemon_shape_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_evolutionchain: pokemon_v2_evolutionchain\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An object relationship\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate\\r\\n  # An array relationship\\r\\n  pokemon_v2_palparks(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): [pokemon_v2_palpark!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_palparks_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): pokemon_v2_palpark_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemoncolor: pokemon_v2_pokemoncolor\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemondexnumbers(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): [pokemon_v2_pokemondexnumber!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemondexnumbers_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): pokemon_v2_pokemondexnumber_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonegggroups(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): [pokemon_v2_pokemonegggroup!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonegggroups_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): pokemon_v2_pokemonegggroup_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonevolutions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonevolutions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonhabitat: pokemon_v2_pokemonhabitat\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemons(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemon_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemon_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemon_bool_exp\\r\\n  ): [pokemon_v2_pokemon!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemons_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemon_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemon_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemon_bool_exp\\r\\n  ): pokemon_v2_pokemon_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonshape: pokemon_v2_pokemonshape\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspeciesdescriptions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesdescription!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspeciesdescriptions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesdescription_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspeciesflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspeciesflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspeciesnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspeciesnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesname_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ntype pokemon_v2_pokemonspecies_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonspecies_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonspecies!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ntype pokemon_v2_pokemonspecies_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonspecies_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonspecies_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonspecies_max_fields\\r\\n  min: pokemon_v2_pokemonspecies_min_fields\\r\\n  stddev: pokemon_v2_pokemonspecies_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonspecies_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonspecies_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonspecies_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonspecies_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonspecies_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonspecies_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonspecies_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonspecies_max_order_by\\r\\n  min: pokemon_v2_pokemonspecies_min_order_by\\r\\n  stddev: pokemon_v2_pokemonspecies_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonspecies_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonspecies_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonspecies_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonspecies_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonspecies_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonspecies_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonspecies_avg_fields {\\r\\n  base_happiness: Float\\r\\n  capture_rate: Float\\r\\n  evolution_chain_id: Float\\r\\n  evolves_from_species_id: Float\\r\\n  gender_rate: Float\\r\\n  generation_id: Float\\r\\n  growth_rate_id: Float\\r\\n  hatch_counter: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_color_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_avg_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonspecies_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonspecies_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonspecies_bool_exp\\r\\n  _or: [pokemon_v2_pokemonspecies_bool_exp!]\\r\\n  base_happiness: Int_comparison_exp\\r\\n  capture_rate: Int_comparison_exp\\r\\n  evolution_chain_id: Int_comparison_exp\\r\\n  evolves_from_species_id: Int_comparison_exp\\r\\n  forms_switchable: Boolean_comparison_exp\\r\\n  gender_rate: Int_comparison_exp\\r\\n  generation_id: Int_comparison_exp\\r\\n  growth_rate_id: Int_comparison_exp\\r\\n  has_gender_differences: Boolean_comparison_exp\\r\\n  hatch_counter: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  is_baby: Boolean_comparison_exp\\r\\n  is_legendary: Boolean_comparison_exp\\r\\n  is_mythical: Boolean_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  order: Int_comparison_exp\\r\\n  pokemonV2PokemonevolutionsByPartySpeciesId: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemonV2PokemonevolutionsByTradeSpeciesId: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemon_color_id: Int_comparison_exp\\r\\n  pokemon_habitat_id: Int_comparison_exp\\r\\n  pokemon_shape_id: Int_comparison_exp\\r\\n  pokemon_v2_evolutionchain: pokemon_v2_evolutionchain_bool_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_bool_exp\\r\\n  pokemon_v2_palparks: pokemon_v2_palpark_bool_exp\\r\\n  pokemon_v2_pokemoncolor: pokemon_v2_pokemoncolor_bool_exp\\r\\n  pokemon_v2_pokemondexnumbers: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  pokemon_v2_pokemonegggroups: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  pokemon_v2_pokemonevolutions: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemon_v2_pokemonhabitat: pokemon_v2_pokemonhabitat_bool_exp\\r\\n  pokemon_v2_pokemons: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_pokemonshape: pokemon_v2_pokemonshape_bool_exp\\r\\n  pokemon_v2_pokemonspecies: pokemon_v2_pokemonspecies_bool_exp\\r\\n  pokemon_v2_pokemonspeciesdescriptions: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  pokemon_v2_pokemonspeciesflavortexts: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  pokemon_v2_pokemonspeciesnames: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonspecies_max_fields {\\r\\n  base_happiness: Int\\r\\n  capture_rate: Int\\r\\n  evolution_chain_id: Int\\r\\n  evolves_from_species_id: Int\\r\\n  gender_rate: Int\\r\\n  generation_id: Int\\r\\n  growth_rate_id: Int\\r\\n  hatch_counter: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n  pokemon_color_id: Int\\r\\n  pokemon_habitat_id: Int\\r\\n  pokemon_shape_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_max_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonspecies_min_fields {\\r\\n  base_happiness: Int\\r\\n  capture_rate: Int\\r\\n  evolution_chain_id: Int\\r\\n  evolves_from_species_id: Int\\r\\n  gender_rate: Int\\r\\n  generation_id: Int\\r\\n  growth_rate_id: Int\\r\\n  hatch_counter: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n  pokemon_color_id: Int\\r\\n  pokemon_habitat_id: Int\\r\\n  pokemon_shape_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_min_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\".\\r\\ninput pokemon_v2_pokemonspecies_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  forms_switchable: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  has_gender_differences: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  is_baby: order_by\\r\\n  is_legendary: order_by\\r\\n  is_mythical: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemonV2PokemonevolutionsByPartySpeciesId_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemonV2PokemonevolutionsByTradeSpeciesId_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n  pokemon_v2_evolutionchain: pokemon_v2_evolutionchain_order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_growthrate: pokemon_v2_growthrate_order_by\\r\\n  pokemon_v2_palparks_aggregate: pokemon_v2_palpark_aggregate_order_by\\r\\n  pokemon_v2_pokemoncolor: pokemon_v2_pokemoncolor_order_by\\r\\n  pokemon_v2_pokemondexnumbers_aggregate: pokemon_v2_pokemondexnumber_aggregate_order_by\\r\\n  pokemon_v2_pokemonegggroups_aggregate: pokemon_v2_pokemonegggroup_aggregate_order_by\\r\\n  pokemon_v2_pokemonevolutions_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemon_v2_pokemonhabitat: pokemon_v2_pokemonhabitat_order_by\\r\\n  pokemon_v2_pokemons_aggregate: pokemon_v2_pokemon_aggregate_order_by\\r\\n  pokemon_v2_pokemonshape: pokemon_v2_pokemonshape_order_by\\r\\n  pokemon_v2_pokemonspecies_aggregate: pokemon_v2_pokemonspecies_aggregate_order_by\\r\\n  pokemon_v2_pokemonspeciesdescriptions_aggregate: pokemon_v2_pokemonspeciesdescription_aggregate_order_by\\r\\n  pokemon_v2_pokemonspeciesflavortexts_aggregate: pokemon_v2_pokemonspeciesflavortext_aggregate_order_by\\r\\n  pokemon_v2_pokemonspeciesnames_aggregate: pokemon_v2_pokemonspeciesname_aggregate_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\nenum pokemon_v2_pokemonspecies_select_column {\\r\\n  # column name\\r\\n  base_happiness\\r\\n  # column name\\r\\n  capture_rate\\r\\n  # column name\\r\\n  evolution_chain_id\\r\\n  # column name\\r\\n  evolves_from_species_id\\r\\n  # column name\\r\\n  forms_switchable\\r\\n  # column name\\r\\n  gender_rate\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  growth_rate_id\\r\\n  # column name\\r\\n  has_gender_differences\\r\\n  # column name\\r\\n  hatch_counter\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_baby\\r\\n  # column name\\r\\n  is_legendary\\r\\n  # column name\\r\\n  is_mythical\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  order\\r\\n  # column name\\r\\n  pokemon_color_id\\r\\n  # column name\\r\\n  pokemon_habitat_id\\r\\n  # column name\\r\\n  pokemon_shape_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonspecies_stddev_fields {\\r\\n  base_happiness: Float\\r\\n  capture_rate: Float\\r\\n  evolution_chain_id: Float\\r\\n  evolves_from_species_id: Float\\r\\n  gender_rate: Float\\r\\n  generation_id: Float\\r\\n  growth_rate_id: Float\\r\\n  hatch_counter: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_color_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_stddev_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonspecies_stddev_pop_fields {\\r\\n  base_happiness: Float\\r\\n  capture_rate: Float\\r\\n  evolution_chain_id: Float\\r\\n  evolves_from_species_id: Float\\r\\n  gender_rate: Float\\r\\n  generation_id: Float\\r\\n  growth_rate_id: Float\\r\\n  hatch_counter: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_color_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_stddev_pop_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonspecies_stddev_samp_fields {\\r\\n  base_happiness: Float\\r\\n  capture_rate: Float\\r\\n  evolution_chain_id: Float\\r\\n  evolves_from_species_id: Float\\r\\n  gender_rate: Float\\r\\n  generation_id: Float\\r\\n  growth_rate_id: Float\\r\\n  hatch_counter: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_color_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_stddev_samp_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonspecies_sum_fields {\\r\\n  base_happiness: Int\\r\\n  capture_rate: Int\\r\\n  evolution_chain_id: Int\\r\\n  evolves_from_species_id: Int\\r\\n  gender_rate: Int\\r\\n  generation_id: Int\\r\\n  growth_rate_id: Int\\r\\n  hatch_counter: Int\\r\\n  id: Int\\r\\n  order: Int\\r\\n  pokemon_color_id: Int\\r\\n  pokemon_habitat_id: Int\\r\\n  pokemon_shape_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_sum_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonspecies_var_pop_fields {\\r\\n  base_happiness: Float\\r\\n  capture_rate: Float\\r\\n  evolution_chain_id: Float\\r\\n  evolves_from_species_id: Float\\r\\n  gender_rate: Float\\r\\n  generation_id: Float\\r\\n  growth_rate_id: Float\\r\\n  hatch_counter: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_color_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_var_pop_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonspecies_var_samp_fields {\\r\\n  base_happiness: Float\\r\\n  capture_rate: Float\\r\\n  evolution_chain_id: Float\\r\\n  evolves_from_species_id: Float\\r\\n  gender_rate: Float\\r\\n  generation_id: Float\\r\\n  growth_rate_id: Float\\r\\n  hatch_counter: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_color_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_var_samp_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonspecies_variance_fields {\\r\\n  base_happiness: Float\\r\\n  capture_rate: Float\\r\\n  evolution_chain_id: Float\\r\\n  evolves_from_species_id: Float\\r\\n  gender_rate: Float\\r\\n  generation_id: Float\\r\\n  growth_rate_id: Float\\r\\n  hatch_counter: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n  pokemon_color_id: Float\\r\\n  pokemon_habitat_id: Float\\r\\n  pokemon_shape_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\"\\r\\ninput pokemon_v2_pokemonspecies_variance_order_by {\\r\\n  base_happiness: order_by\\r\\n  capture_rate: order_by\\r\\n  evolution_chain_id: order_by\\r\\n  evolves_from_species_id: order_by\\r\\n  gender_rate: order_by\\r\\n  generation_id: order_by\\r\\n  growth_rate_id: order_by\\r\\n  hatch_counter: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n  pokemon_color_id: order_by\\r\\n  pokemon_habitat_id: order_by\\r\\n  pokemon_shape_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesdescription {\\r\\n  description: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesdescription_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonspeciesdescription_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonspeciesdescription!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesdescription_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonspeciesdescription_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonspeciesdescription_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonspeciesdescription_max_fields\\r\\n  min: pokemon_v2_pokemonspeciesdescription_min_fields\\r\\n  stddev: pokemon_v2_pokemonspeciesdescription_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonspeciesdescription_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonspeciesdescription_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonspeciesdescription_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonspeciesdescription_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonspeciesdescription_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonspeciesdescription_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonspeciesdescription_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonspeciesdescription_max_order_by\\r\\n  min: pokemon_v2_pokemonspeciesdescription_min_order_by\\r\\n  stddev: pokemon_v2_pokemonspeciesdescription_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonspeciesdescription_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonspeciesdescription_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonspeciesdescription_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonspeciesdescription_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonspeciesdescription_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonspeciesdescription_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonspeciesdescription_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonspeciesdescription_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  _or: [pokemon_v2_pokemonspeciesdescription_bool_exp!]\\r\\n  description: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_species_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_max_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_max_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_min_fields {\\r\\n  description: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_min_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\".\\r\\ninput pokemon_v2_pokemonspeciesdescription_order_by {\\r\\n  description: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\nenum pokemon_v2_pokemonspeciesdescription_select_column {\\r\\n  # column name\\r\\n  description\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  pokemon_species_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonspeciesdescription_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesdescription_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesflavortext {\\r\\n  flavor_text: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n  # An object relationship\\r\\n  pokemon_v2_version: pokemon_v2_version\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesflavortext_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonspeciesflavortext_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonspeciesflavortext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesflavortext_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonspeciesflavortext_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonspeciesflavortext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonspeciesflavortext_max_fields\\r\\n  min: pokemon_v2_pokemonspeciesflavortext_min_fields\\r\\n  stddev: pokemon_v2_pokemonspeciesflavortext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonspeciesflavortext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonspeciesflavortext_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonspeciesflavortext_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonspeciesflavortext_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonspeciesflavortext_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonspeciesflavortext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonspeciesflavortext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonspeciesflavortext_max_order_by\\r\\n  min: pokemon_v2_pokemonspeciesflavortext_min_order_by\\r\\n  stddev: pokemon_v2_pokemonspeciesflavortext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonspeciesflavortext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonspeciesflavortext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonspeciesflavortext_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonspeciesflavortext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonspeciesflavortext_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonspeciesflavortext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonspeciesflavortext_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonspeciesflavortext_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  _or: [pokemon_v2_pokemonspeciesflavortext_bool_exp!]\\r\\n  flavor_text: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_species_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n  pokemon_v2_version: pokemon_v2_version_bool_exp\\r\\n  version_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_max_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_max_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_min_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_min_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\".\\r\\ninput pokemon_v2_pokemonspeciesflavortext_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n  pokemon_v2_version: pokemon_v2_version_order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\nenum pokemon_v2_pokemonspeciesflavortext_select_column {\\r\\n  # column name\\r\\n  flavor_text\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  pokemon_species_id\\r\\n  # column name\\r\\n  version_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonspeciesflavortext_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesflavortext_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesname {\\r\\n  genus: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  pokemon_species_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesname_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonspeciesname_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonspeciesname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ntype pokemon_v2_pokemonspeciesname_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonspeciesname_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonspeciesname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonspeciesname_max_fields\\r\\n  min: pokemon_v2_pokemonspeciesname_min_fields\\r\\n  stddev: pokemon_v2_pokemonspeciesname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonspeciesname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonspeciesname_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonspeciesname_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonspeciesname_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonspeciesname_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonspeciesname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonspeciesname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonspeciesname_max_order_by\\r\\n  min: pokemon_v2_pokemonspeciesname_min_order_by\\r\\n  stddev: pokemon_v2_pokemonspeciesname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonspeciesname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonspeciesname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonspeciesname_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonspeciesname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonspeciesname_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonspeciesname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonspeciesname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonspeciesname_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonspeciesname_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  _or: [pokemon_v2_pokemonspeciesname_bool_exp!]\\r\\n  genus: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_species_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonspeciesname_max_fields {\\r\\n  genus: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_max_order_by {\\r\\n  genus: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonspeciesname_min_fields {\\r\\n  genus: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_min_order_by {\\r\\n  genus: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\".\\r\\ninput pokemon_v2_pokemonspeciesname_order_by {\\r\\n  genus: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_species_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_pokemonspecy: pokemon_v2_pokemonspecies_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\nenum pokemon_v2_pokemonspeciesname_select_column {\\r\\n  # column name\\r\\n  genus\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  pokemon_species_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonspeciesname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonspeciesname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonspeciesname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonspeciesname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  pokemon_species_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonspeciesname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonspeciesname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonspeciesname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  pokemon_species_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\ninput pokemon_v2_pokemonspeciesname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_species_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ntype pokemon_v2_pokemonsprites {\\r\\n  id: Int!\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  sprites: String!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ntype pokemon_v2_pokemonsprites_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonsprites_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonsprites!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ntype pokemon_v2_pokemonsprites_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonsprites_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonsprites_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonsprites_max_fields\\r\\n  min: pokemon_v2_pokemonsprites_min_fields\\r\\n  stddev: pokemon_v2_pokemonsprites_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonsprites_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonsprites_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonsprites_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonsprites_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonsprites_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonsprites_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonsprites_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonsprites_max_order_by\\r\\n  min: pokemon_v2_pokemonsprites_min_order_by\\r\\n  stddev: pokemon_v2_pokemonsprites_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonsprites_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonsprites_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonsprites_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonsprites_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonsprites_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonsprites_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonsprites_avg_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_avg_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonsprites_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonsprites_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonsprites_bool_exp\\r\\n  _or: [pokemon_v2_pokemonsprites_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  sprites: String_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonsprites_max_fields {\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  sprites: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_max_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonsprites_min_fields {\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  sprites: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_min_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\".\\r\\ninput pokemon_v2_pokemonsprites_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  sprites: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\nenum pokemon_v2_pokemonsprites_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  sprites\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonsprites_stddev_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_stddev_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonsprites_stddev_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonsprites_stddev_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonsprites_sum_fields {\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_sum_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonsprites_var_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_var_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonsprites_var_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_var_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonsprites_variance_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\"\\r\\ninput pokemon_v2_pokemonsprites_variance_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ntype pokemon_v2_pokemonstat {\\r\\n  base_stat: Int!\\r\\n  effort: Int!\\r\\n  id: Int!\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An object relationship\\r\\n  pokemon_v2_stat: pokemon_v2_stat\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ntype pokemon_v2_pokemonstat_aggregate {\\r\\n  aggregate: pokemon_v2_pokemonstat_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemonstat!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ntype pokemon_v2_pokemonstat_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemonstat_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemonstat_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemonstat_max_fields\\r\\n  min: pokemon_v2_pokemonstat_min_fields\\r\\n  stddev: pokemon_v2_pokemonstat_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemonstat_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemonstat_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemonstat_sum_fields\\r\\n  var_pop: pokemon_v2_pokemonstat_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemonstat_var_samp_fields\\r\\n  variance: pokemon_v2_pokemonstat_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemonstat_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemonstat_max_order_by\\r\\n  min: pokemon_v2_pokemonstat_min_order_by\\r\\n  stddev: pokemon_v2_pokemonstat_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemonstat_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemonstat_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemonstat_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemonstat_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemonstat_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemonstat_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemonstat_avg_fields {\\r\\n  base_stat: Float\\r\\n  effort: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_avg_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemonstat_bool_exp {\\r\\n  _and: [pokemon_v2_pokemonstat_bool_exp!]\\r\\n  _not: pokemon_v2_pokemonstat_bool_exp\\r\\n  _or: [pokemon_v2_pokemonstat_bool_exp!]\\r\\n  base_stat: Int_comparison_exp\\r\\n  effort: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_stat: pokemon_v2_stat_bool_exp\\r\\n  stat_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemonstat_max_fields {\\r\\n  base_stat: Int\\r\\n  effort: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_max_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemonstat_min_fields {\\r\\n  base_stat: Int\\r\\n  effort: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_min_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemonstat\\\\\\\".\\r\\ninput pokemon_v2_pokemonstat_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_stat: pokemon_v2_stat_order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\nenum pokemon_v2_pokemonstat_select_column {\\r\\n  # column name\\r\\n  base_stat\\r\\n  # column name\\r\\n  effort\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  stat_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemonstat_stddev_fields {\\r\\n  base_stat: Float\\r\\n  effort: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_stddev_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemonstat_stddev_pop_fields {\\r\\n  base_stat: Float\\r\\n  effort: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_stddev_pop_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemonstat_stddev_samp_fields {\\r\\n  base_stat: Float\\r\\n  effort: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_stddev_samp_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemonstat_sum_fields {\\r\\n  base_stat: Int\\r\\n  effort: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_sum_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemonstat_var_pop_fields {\\r\\n  base_stat: Float\\r\\n  effort: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_var_pop_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemonstat_var_samp_fields {\\r\\n  base_stat: Float\\r\\n  effort: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_var_samp_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemonstat_variance_fields {\\r\\n  base_stat: Float\\r\\n  effort: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\ninput pokemon_v2_pokemonstat_variance_order_by {\\r\\n  base_stat: order_by\\r\\n  effort: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ntype pokemon_v2_pokemontype {\\r\\n  id: Int!\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  slot: Int!\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ntype pokemon_v2_pokemontype_aggregate {\\r\\n  aggregate: pokemon_v2_pokemontype_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemontype!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ntype pokemon_v2_pokemontype_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemontype_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemontype_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemontype_max_fields\\r\\n  min: pokemon_v2_pokemontype_min_fields\\r\\n  stddev: pokemon_v2_pokemontype_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemontype_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemontype_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemontype_sum_fields\\r\\n  var_pop: pokemon_v2_pokemontype_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemontype_var_samp_fields\\r\\n  variance: pokemon_v2_pokemontype_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemontype_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemontype_max_order_by\\r\\n  min: pokemon_v2_pokemontype_min_order_by\\r\\n  stddev: pokemon_v2_pokemontype_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemontype_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemontype_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemontype_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemontype_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemontype_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemontype_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemontype_avg_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_avg_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemontype\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemontype_bool_exp {\\r\\n  _and: [pokemon_v2_pokemontype_bool_exp!]\\r\\n  _not: pokemon_v2_pokemontype_bool_exp\\r\\n  _or: [pokemon_v2_pokemontype_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  slot: Int_comparison_exp\\r\\n  type_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemontype_max_fields {\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_max_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemontype_min_fields {\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_min_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemontype\\\\\\\".\\r\\ninput pokemon_v2_pokemontype_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\nenum pokemon_v2_pokemontype_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  slot\\r\\n  # column name\\r\\n  type_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemontype_stddev_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_stddev_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemontype_stddev_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemontype_stddev_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemontype_sum_fields {\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_sum_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemontype_var_pop_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_var_pop_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemontype_var_samp_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_var_samp_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemontype_variance_fields {\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\ninput pokemon_v2_pokemontype_variance_order_by {\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ntype pokemon_v2_pokemontypepast {\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  pokemon_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An object relationship\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  slot: Int!\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ntype pokemon_v2_pokemontypepast_aggregate {\\r\\n  aggregate: pokemon_v2_pokemontypepast_aggregate_fields\\r\\n  nodes: [pokemon_v2_pokemontypepast!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ntype pokemon_v2_pokemontypepast_aggregate_fields {\\r\\n  avg: pokemon_v2_pokemontypepast_avg_fields\\r\\n  count(columns: [pokemon_v2_pokemontypepast_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_pokemontypepast_max_fields\\r\\n  min: pokemon_v2_pokemontypepast_min_fields\\r\\n  stddev: pokemon_v2_pokemontypepast_stddev_fields\\r\\n  stddev_pop: pokemon_v2_pokemontypepast_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_pokemontypepast_stddev_samp_fields\\r\\n  sum: pokemon_v2_pokemontypepast_sum_fields\\r\\n  var_pop: pokemon_v2_pokemontypepast_var_pop_fields\\r\\n  var_samp: pokemon_v2_pokemontypepast_var_samp_fields\\r\\n  variance: pokemon_v2_pokemontypepast_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_aggregate_order_by {\\r\\n  avg: pokemon_v2_pokemontypepast_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_pokemontypepast_max_order_by\\r\\n  min: pokemon_v2_pokemontypepast_min_order_by\\r\\n  stddev: pokemon_v2_pokemontypepast_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_pokemontypepast_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_pokemontypepast_stddev_samp_order_by\\r\\n  sum: pokemon_v2_pokemontypepast_sum_order_by\\r\\n  var_pop: pokemon_v2_pokemontypepast_var_pop_order_by\\r\\n  var_samp: pokemon_v2_pokemontypepast_var_samp_order_by\\r\\n  variance: pokemon_v2_pokemontypepast_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_pokemontypepast_avg_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_avg_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_pokemontypepast_bool_exp {\\r\\n  _and: [pokemon_v2_pokemontypepast_bool_exp!]\\r\\n  _not: pokemon_v2_pokemontypepast_bool_exp\\r\\n  _or: [pokemon_v2_pokemontypepast_bool_exp!]\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_id: Int_comparison_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  slot: Int_comparison_exp\\r\\n  type_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_pokemontypepast_max_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_max_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_pokemontypepast_min_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_min_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\".\\r\\ninput pokemon_v2_pokemontypepast_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_pokemon: pokemon_v2_pokemon_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\nenum pokemon_v2_pokemontypepast_select_column {\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  pokemon_id\\r\\n  # column name\\r\\n  slot\\r\\n  # column name\\r\\n  type_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_pokemontypepast_stddev_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_stddev_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_pokemontypepast_stddev_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_stddev_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_pokemontypepast_stddev_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_stddev_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_pokemontypepast_sum_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  pokemon_id: Int\\r\\n  slot: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_sum_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_pokemontypepast_var_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_var_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_pokemontypepast_var_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_var_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_pokemontypepast_variance_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  pokemon_id: Float\\r\\n  slot: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\ninput pokemon_v2_pokemontypepast_variance_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_id: order_by\\r\\n  slot: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\ntype pokemon_v2_region {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_generations(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generation_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generation_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generation_bool_exp\\r\\n  ): [pokemon_v2_generation!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_generations_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generation_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generation_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generation_bool_exp\\r\\n  ): pokemon_v2_generation_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locations(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_location_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_location_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_location_bool_exp\\r\\n  ): [pokemon_v2_location!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locations_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_location_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_location_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_location_bool_exp\\r\\n  ): pokemon_v2_location_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokedexes(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedex_bool_exp\\r\\n  ): [pokemon_v2_pokedex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokedexes_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedex_bool_exp\\r\\n  ): pokemon_v2_pokedex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_regionnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): [pokemon_v2_regionname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_regionnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): pokemon_v2_regionname_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_versiongroupregions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): [pokemon_v2_versiongroupregion!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versiongroupregions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): pokemon_v2_versiongroupregion_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\ntype pokemon_v2_region_aggregate {\\r\\n  aggregate: pokemon_v2_region_aggregate_fields\\r\\n  nodes: [pokemon_v2_region!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\ntype pokemon_v2_region_aggregate_fields {\\r\\n  avg: pokemon_v2_region_avg_fields\\r\\n  count(columns: [pokemon_v2_region_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_region_max_fields\\r\\n  min: pokemon_v2_region_min_fields\\r\\n  stddev: pokemon_v2_region_stddev_fields\\r\\n  stddev_pop: pokemon_v2_region_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_region_stddev_samp_fields\\r\\n  sum: pokemon_v2_region_sum_fields\\r\\n  var_pop: pokemon_v2_region_var_pop_fields\\r\\n  var_samp: pokemon_v2_region_var_samp_fields\\r\\n  variance: pokemon_v2_region_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_region_avg_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_region\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_region_bool_exp {\\r\\n  _and: [pokemon_v2_region_bool_exp!]\\r\\n  _not: pokemon_v2_region_bool_exp\\r\\n  _or: [pokemon_v2_region_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_generations: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_locations: pokemon_v2_location_bool_exp\\r\\n  pokemon_v2_pokedexes: pokemon_v2_pokedex_bool_exp\\r\\n  pokemon_v2_regionnames: pokemon_v2_regionname_bool_exp\\r\\n  pokemon_v2_versiongroupregions: pokemon_v2_versiongroupregion_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_region_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_region_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_region\\\\\\\".\\r\\ninput pokemon_v2_region_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_generations_aggregate: pokemon_v2_generation_aggregate_order_by\\r\\n  pokemon_v2_locations_aggregate: pokemon_v2_location_aggregate_order_by\\r\\n  pokemon_v2_pokedexes_aggregate: pokemon_v2_pokedex_aggregate_order_by\\r\\n  pokemon_v2_regionnames_aggregate: pokemon_v2_regionname_aggregate_order_by\\r\\n  pokemon_v2_versiongroupregions_aggregate: pokemon_v2_versiongroupregion_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\nenum pokemon_v2_region_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_region_stddev_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_region_stddev_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_region_stddev_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_region_sum_fields {\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_region_var_pop_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_region_var_samp_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_region_variance_fields {\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ntype pokemon_v2_regionname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_region: pokemon_v2_region\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ntype pokemon_v2_regionname_aggregate {\\r\\n  aggregate: pokemon_v2_regionname_aggregate_fields\\r\\n  nodes: [pokemon_v2_regionname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ntype pokemon_v2_regionname_aggregate_fields {\\r\\n  avg: pokemon_v2_regionname_avg_fields\\r\\n  count(columns: [pokemon_v2_regionname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_regionname_max_fields\\r\\n  min: pokemon_v2_regionname_min_fields\\r\\n  stddev: pokemon_v2_regionname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_regionname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_regionname_stddev_samp_fields\\r\\n  sum: pokemon_v2_regionname_sum_fields\\r\\n  var_pop: pokemon_v2_regionname_var_pop_fields\\r\\n  var_samp: pokemon_v2_regionname_var_samp_fields\\r\\n  variance: pokemon_v2_regionname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_aggregate_order_by {\\r\\n  avg: pokemon_v2_regionname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_regionname_max_order_by\\r\\n  min: pokemon_v2_regionname_min_order_by\\r\\n  stddev: pokemon_v2_regionname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_regionname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_regionname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_regionname_sum_order_by\\r\\n  var_pop: pokemon_v2_regionname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_regionname_var_samp_order_by\\r\\n  variance: pokemon_v2_regionname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_regionname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_regionname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_regionname_bool_exp {\\r\\n  _and: [pokemon_v2_regionname_bool_exp!]\\r\\n  _not: pokemon_v2_regionname_bool_exp\\r\\n  _or: [pokemon_v2_regionname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_region: pokemon_v2_region_bool_exp\\r\\n  region_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_regionname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_regionname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_regionname\\\\\\\".\\r\\ninput pokemon_v2_regionname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_region: pokemon_v2_region_order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\nenum pokemon_v2_regionname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  region_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_regionname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_regionname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_regionname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_regionname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  region_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_regionname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_regionname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_regionname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  region_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\ninput pokemon_v2_regionname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  region_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ntype pokemon_v2_stat {\\r\\n  game_index: Int!\\r\\n  id: Int!\\r\\n  is_battle_only: Boolean!\\r\\n  move_damage_class_id: Int\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemonV2NaturesByIncreasedStatId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): [pokemon_v2_nature!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2NaturesByIncreasedStatId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): pokemon_v2_nature_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_characteristics(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristic_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristic_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristic_bool_exp\\r\\n  ): [pokemon_v2_characteristic!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_characteristics_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristic_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristic_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristic_bool_exp\\r\\n  ): pokemon_v2_characteristic_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemetastatchanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): [pokemon_v2_movemetastatchange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemetastatchanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): pokemon_v2_movemetastatchange_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_natures(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): [pokemon_v2_nature!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_natures_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): pokemon_v2_nature_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonstats(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): [pokemon_v2_pokemonstat!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonstats_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): pokemon_v2_pokemonstat_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_statnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): [pokemon_v2_statname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_statnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): pokemon_v2_statname_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ntype pokemon_v2_stat_aggregate {\\r\\n  aggregate: pokemon_v2_stat_aggregate_fields\\r\\n  nodes: [pokemon_v2_stat!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ntype pokemon_v2_stat_aggregate_fields {\\r\\n  avg: pokemon_v2_stat_avg_fields\\r\\n  count(columns: [pokemon_v2_stat_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_stat_max_fields\\r\\n  min: pokemon_v2_stat_min_fields\\r\\n  stddev: pokemon_v2_stat_stddev_fields\\r\\n  stddev_pop: pokemon_v2_stat_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_stat_stddev_samp_fields\\r\\n  sum: pokemon_v2_stat_sum_fields\\r\\n  var_pop: pokemon_v2_stat_var_pop_fields\\r\\n  var_samp: pokemon_v2_stat_var_samp_fields\\r\\n  variance: pokemon_v2_stat_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_aggregate_order_by {\\r\\n  avg: pokemon_v2_stat_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_stat_max_order_by\\r\\n  min: pokemon_v2_stat_min_order_by\\r\\n  stddev: pokemon_v2_stat_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_stat_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_stat_stddev_samp_order_by\\r\\n  sum: pokemon_v2_stat_sum_order_by\\r\\n  var_pop: pokemon_v2_stat_var_pop_order_by\\r\\n  var_samp: pokemon_v2_stat_var_samp_order_by\\r\\n  variance: pokemon_v2_stat_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_stat_avg_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_avg_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_stat\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_stat_bool_exp {\\r\\n  _and: [pokemon_v2_stat_bool_exp!]\\r\\n  _not: pokemon_v2_stat_bool_exp\\r\\n  _or: [pokemon_v2_stat_bool_exp!]\\r\\n  game_index: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  is_battle_only: Boolean_comparison_exp\\r\\n  move_damage_class_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemonV2NaturesByIncreasedStatId: pokemon_v2_nature_bool_exp\\r\\n  pokemon_v2_characteristics: pokemon_v2_characteristic_bool_exp\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_bool_exp\\r\\n  pokemon_v2_movemetastatchanges: pokemon_v2_movemetastatchange_bool_exp\\r\\n  pokemon_v2_natures: pokemon_v2_nature_bool_exp\\r\\n  pokemon_v2_pokemonstats: pokemon_v2_pokemonstat_bool_exp\\r\\n  pokemon_v2_statnames: pokemon_v2_statname_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_stat_max_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_max_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_stat_min_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_min_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_stat\\\\\\\".\\r\\ninput pokemon_v2_stat_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  is_battle_only: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n  pokemonV2NaturesByIncreasedStatId_aggregate: pokemon_v2_nature_aggregate_order_by\\r\\n  pokemon_v2_characteristics_aggregate: pokemon_v2_characteristic_aggregate_order_by\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_order_by\\r\\n  pokemon_v2_movemetastatchanges_aggregate: pokemon_v2_movemetastatchange_aggregate_order_by\\r\\n  pokemon_v2_natures_aggregate: pokemon_v2_nature_aggregate_order_by\\r\\n  pokemon_v2_pokemonstats_aggregate: pokemon_v2_pokemonstat_aggregate_order_by\\r\\n  pokemon_v2_statnames_aggregate: pokemon_v2_statname_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\nenum pokemon_v2_stat_select_column {\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  is_battle_only\\r\\n  # column name\\r\\n  move_damage_class_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_stat_stddev_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_stddev_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_stat_stddev_pop_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_stddev_pop_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_stat_stddev_samp_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_stddev_samp_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_stat_sum_fields {\\r\\n  game_index: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_sum_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_stat_var_pop_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_var_pop_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_stat_var_samp_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_var_samp_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_stat_variance_fields {\\r\\n  game_index: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\ninput pokemon_v2_stat_variance_order_by {\\r\\n  game_index: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ntype pokemon_v2_statname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_stat: pokemon_v2_stat\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ntype pokemon_v2_statname_aggregate {\\r\\n  aggregate: pokemon_v2_statname_aggregate_fields\\r\\n  nodes: [pokemon_v2_statname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ntype pokemon_v2_statname_aggregate_fields {\\r\\n  avg: pokemon_v2_statname_avg_fields\\r\\n  count(columns: [pokemon_v2_statname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_statname_max_fields\\r\\n  min: pokemon_v2_statname_min_fields\\r\\n  stddev: pokemon_v2_statname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_statname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_statname_stddev_samp_fields\\r\\n  sum: pokemon_v2_statname_sum_fields\\r\\n  var_pop: pokemon_v2_statname_var_pop_fields\\r\\n  var_samp: pokemon_v2_statname_var_samp_fields\\r\\n  variance: pokemon_v2_statname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_aggregate_order_by {\\r\\n  avg: pokemon_v2_statname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_statname_max_order_by\\r\\n  min: pokemon_v2_statname_min_order_by\\r\\n  stddev: pokemon_v2_statname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_statname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_statname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_statname_sum_order_by\\r\\n  var_pop: pokemon_v2_statname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_statname_var_samp_order_by\\r\\n  variance: pokemon_v2_statname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_statname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_statname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_statname_bool_exp {\\r\\n  _and: [pokemon_v2_statname_bool_exp!]\\r\\n  _not: pokemon_v2_statname_bool_exp\\r\\n  _or: [pokemon_v2_statname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_stat: pokemon_v2_stat_bool_exp\\r\\n  stat_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_statname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_statname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_statname\\\\\\\".\\r\\ninput pokemon_v2_statname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_stat: pokemon_v2_stat_order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\nenum pokemon_v2_statname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  stat_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_statname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_statname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_statname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_statname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  stat_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_statname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_statname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_statname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  stat_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\ninput pokemon_v2_statname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  stat_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ntype pokemon_v2_supercontestcombo {\\r\\n  first_move_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemonV2MoveBySecondMoveId: pokemon_v2_move\\r\\n  # An object relationship\\r\\n  pokemon_v2_move: pokemon_v2_move\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ntype pokemon_v2_supercontestcombo_aggregate {\\r\\n  aggregate: pokemon_v2_supercontestcombo_aggregate_fields\\r\\n  nodes: [pokemon_v2_supercontestcombo!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ntype pokemon_v2_supercontestcombo_aggregate_fields {\\r\\n  avg: pokemon_v2_supercontestcombo_avg_fields\\r\\n  count(columns: [pokemon_v2_supercontestcombo_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_supercontestcombo_max_fields\\r\\n  min: pokemon_v2_supercontestcombo_min_fields\\r\\n  stddev: pokemon_v2_supercontestcombo_stddev_fields\\r\\n  stddev_pop: pokemon_v2_supercontestcombo_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_supercontestcombo_stddev_samp_fields\\r\\n  sum: pokemon_v2_supercontestcombo_sum_fields\\r\\n  var_pop: pokemon_v2_supercontestcombo_var_pop_fields\\r\\n  var_samp: pokemon_v2_supercontestcombo_var_samp_fields\\r\\n  variance: pokemon_v2_supercontestcombo_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_aggregate_order_by {\\r\\n  avg: pokemon_v2_supercontestcombo_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_supercontestcombo_max_order_by\\r\\n  min: pokemon_v2_supercontestcombo_min_order_by\\r\\n  stddev: pokemon_v2_supercontestcombo_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_supercontestcombo_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_supercontestcombo_stddev_samp_order_by\\r\\n  sum: pokemon_v2_supercontestcombo_sum_order_by\\r\\n  var_pop: pokemon_v2_supercontestcombo_var_pop_order_by\\r\\n  var_samp: pokemon_v2_supercontestcombo_var_samp_order_by\\r\\n  variance: pokemon_v2_supercontestcombo_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_supercontestcombo_avg_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_avg_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_supercontestcombo_bool_exp {\\r\\n  _and: [pokemon_v2_supercontestcombo_bool_exp!]\\r\\n  _not: pokemon_v2_supercontestcombo_bool_exp\\r\\n  _or: [pokemon_v2_supercontestcombo_bool_exp!]\\r\\n  first_move_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemonV2MoveBySecondMoveId: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_move: pokemon_v2_move_bool_exp\\r\\n  second_move_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_supercontestcombo_max_fields {\\r\\n  first_move_id: Int\\r\\n  id: Int\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_max_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_supercontestcombo_min_fields {\\r\\n  first_move_id: Int\\r\\n  id: Int\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_min_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\".\\r\\ninput pokemon_v2_supercontestcombo_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  pokemonV2MoveBySecondMoveId: pokemon_v2_move_order_by\\r\\n  pokemon_v2_move: pokemon_v2_move_order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\nenum pokemon_v2_supercontestcombo_select_column {\\r\\n  # column name\\r\\n  first_move_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  second_move_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_supercontestcombo_stddev_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_stddev_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_supercontestcombo_stddev_pop_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_stddev_pop_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_supercontestcombo_stddev_samp_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_stddev_samp_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_supercontestcombo_sum_fields {\\r\\n  first_move_id: Int\\r\\n  id: Int\\r\\n  second_move_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_sum_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_supercontestcombo_var_pop_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_var_pop_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_supercontestcombo_var_samp_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_var_samp_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_supercontestcombo_variance_fields {\\r\\n  first_move_id: Float\\r\\n  id: Float\\r\\n  second_move_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\ninput pokemon_v2_supercontestcombo_variance_order_by {\\r\\n  first_move_id: order_by\\r\\n  id: order_by\\r\\n  second_move_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\ntype pokemon_v2_supercontesteffect {\\r\\n  appeal: Int!\\r\\n  id: Int!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_supercontesteffectflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_supercontesteffectflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_supercontesteffectflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_supercontesteffectflavortext_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\ntype pokemon_v2_supercontesteffect_aggregate {\\r\\n  aggregate: pokemon_v2_supercontesteffect_aggregate_fields\\r\\n  nodes: [pokemon_v2_supercontesteffect!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\ntype pokemon_v2_supercontesteffect_aggregate_fields {\\r\\n  avg: pokemon_v2_supercontesteffect_avg_fields\\r\\n  count(columns: [pokemon_v2_supercontesteffect_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_supercontesteffect_max_fields\\r\\n  min: pokemon_v2_supercontesteffect_min_fields\\r\\n  stddev: pokemon_v2_supercontesteffect_stddev_fields\\r\\n  stddev_pop: pokemon_v2_supercontesteffect_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_supercontesteffect_stddev_samp_fields\\r\\n  sum: pokemon_v2_supercontesteffect_sum_fields\\r\\n  var_pop: pokemon_v2_supercontesteffect_var_pop_fields\\r\\n  var_samp: pokemon_v2_supercontesteffect_var_samp_fields\\r\\n  variance: pokemon_v2_supercontesteffect_variance_fields\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_supercontesteffect_avg_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_supercontesteffect_bool_exp {\\r\\n  _and: [pokemon_v2_supercontesteffect_bool_exp!]\\r\\n  _not: pokemon_v2_supercontesteffect_bool_exp\\r\\n  _or: [pokemon_v2_supercontesteffect_bool_exp!]\\r\\n  appeal: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_supercontesteffectflavortexts: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_supercontesteffect_max_fields {\\r\\n  appeal: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_supercontesteffect_min_fields {\\r\\n  appeal: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\".\\r\\ninput pokemon_v2_supercontesteffect_order_by {\\r\\n  appeal: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n  pokemon_v2_supercontesteffectflavortexts_aggregate: pokemon_v2_supercontesteffectflavortext_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\nenum pokemon_v2_supercontesteffect_select_column {\\r\\n  # column name\\r\\n  appeal\\r\\n  # column name\\r\\n  id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_supercontesteffect_stddev_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_supercontesteffect_stddev_pop_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_supercontesteffect_stddev_samp_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_supercontesteffect_sum_fields {\\r\\n  appeal: Int\\r\\n  id: Int\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_supercontesteffect_var_pop_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_supercontesteffect_var_samp_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_supercontesteffect_variance_fields {\\r\\n  appeal: Float\\r\\n  id: Float\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ntype pokemon_v2_supercontesteffectflavortext {\\r\\n  flavor_text: String!\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_supercontesteffect: pokemon_v2_supercontesteffect\\r\\n  super_contest_effect_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ntype pokemon_v2_supercontesteffectflavortext_aggregate {\\r\\n  aggregate: pokemon_v2_supercontesteffectflavortext_aggregate_fields\\r\\n  nodes: [pokemon_v2_supercontesteffectflavortext!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ntype pokemon_v2_supercontesteffectflavortext_aggregate_fields {\\r\\n  avg: pokemon_v2_supercontesteffectflavortext_avg_fields\\r\\n  count(columns: [pokemon_v2_supercontesteffectflavortext_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_supercontesteffectflavortext_max_fields\\r\\n  min: pokemon_v2_supercontesteffectflavortext_min_fields\\r\\n  stddev: pokemon_v2_supercontesteffectflavortext_stddev_fields\\r\\n  stddev_pop: pokemon_v2_supercontesteffectflavortext_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_supercontesteffectflavortext_stddev_samp_fields\\r\\n  sum: pokemon_v2_supercontesteffectflavortext_sum_fields\\r\\n  var_pop: pokemon_v2_supercontesteffectflavortext_var_pop_fields\\r\\n  var_samp: pokemon_v2_supercontesteffectflavortext_var_samp_fields\\r\\n  variance: pokemon_v2_supercontesteffectflavortext_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_aggregate_order_by {\\r\\n  avg: pokemon_v2_supercontesteffectflavortext_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_supercontesteffectflavortext_max_order_by\\r\\n  min: pokemon_v2_supercontesteffectflavortext_min_order_by\\r\\n  stddev: pokemon_v2_supercontesteffectflavortext_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_supercontesteffectflavortext_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_supercontesteffectflavortext_stddev_samp_order_by\\r\\n  sum: pokemon_v2_supercontesteffectflavortext_sum_order_by\\r\\n  var_pop: pokemon_v2_supercontesteffectflavortext_var_pop_order_by\\r\\n  var_samp: pokemon_v2_supercontesteffectflavortext_var_samp_order_by\\r\\n  variance: pokemon_v2_supercontesteffectflavortext_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  super_contest_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_supercontesteffectflavortext_bool_exp {\\r\\n  _and: [pokemon_v2_supercontesteffectflavortext_bool_exp!]\\r\\n  _not: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  _or: [pokemon_v2_supercontesteffectflavortext_bool_exp!]\\r\\n  flavor_text: String_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_supercontesteffect: pokemon_v2_supercontesteffect_bool_exp\\r\\n  super_contest_effect_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_max_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  super_contest_effect_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_max_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_min_fields {\\r\\n  flavor_text: String\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  super_contest_effect_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_min_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\".\\r\\ninput pokemon_v2_supercontesteffectflavortext_order_by {\\r\\n  flavor_text: order_by\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_supercontesteffect: pokemon_v2_supercontesteffect_order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\nenum pokemon_v2_supercontesteffectflavortext_select_column {\\r\\n  # column name\\r\\n  flavor_text\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  super_contest_effect_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  super_contest_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  super_contest_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  super_contest_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  super_contest_effect_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  super_contest_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  super_contest_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_supercontesteffectflavortext_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  super_contest_effect_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\ninput pokemon_v2_supercontesteffectflavortext_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  super_contest_effect_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ntype pokemon_v2_type {\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  move_damage_class_id: Int\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemonV2PokemonevolutionsByPartyTypeId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2PokemonevolutionsByPartyTypeId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An array relationship\\r\\n  pokemonV2TypeefficaciesByTargetTypeId(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): [pokemon_v2_typeefficacy!]!\\r\\n  # An aggregate relationship\\r\\n  pokemonV2TypeefficaciesByTargetTypeId_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): pokemon_v2_typeefficacy_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_berries(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): [pokemon_v2_berry!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_berries_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): pokemon_v2_berry_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An array relationship\\r\\n  pokemon_v2_movechanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): [pokemon_v2_movechange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movechanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): pokemon_v2_movechange_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass\\r\\n  # An array relationship\\r\\n  pokemon_v2_moves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonevolutions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonevolutions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformtypes(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): [pokemon_v2_pokemonformtype!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformtypes_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): pokemon_v2_pokemonformtype_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemontypepasts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): [pokemon_v2_pokemontypepast!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemontypepasts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): pokemon_v2_pokemontypepast_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemontypes(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): [pokemon_v2_pokemontype!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemontypes_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): pokemon_v2_pokemontype_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_typeefficacies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): [pokemon_v2_typeefficacy!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_typeefficacies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): pokemon_v2_typeefficacy_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_typegameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): [pokemon_v2_typegameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_typegameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): pokemon_v2_typegameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_typenames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): [pokemon_v2_typename!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_typenames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): pokemon_v2_typename_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ntype pokemon_v2_type_aggregate {\\r\\n  aggregate: pokemon_v2_type_aggregate_fields\\r\\n  nodes: [pokemon_v2_type!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ntype pokemon_v2_type_aggregate_fields {\\r\\n  avg: pokemon_v2_type_avg_fields\\r\\n  count(columns: [pokemon_v2_type_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_type_max_fields\\r\\n  min: pokemon_v2_type_min_fields\\r\\n  stddev: pokemon_v2_type_stddev_fields\\r\\n  stddev_pop: pokemon_v2_type_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_type_stddev_samp_fields\\r\\n  sum: pokemon_v2_type_sum_fields\\r\\n  var_pop: pokemon_v2_type_var_pop_fields\\r\\n  var_samp: pokemon_v2_type_var_samp_fields\\r\\n  variance: pokemon_v2_type_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_aggregate_order_by {\\r\\n  avg: pokemon_v2_type_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_type_max_order_by\\r\\n  min: pokemon_v2_type_min_order_by\\r\\n  stddev: pokemon_v2_type_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_type_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_type_stddev_samp_order_by\\r\\n  sum: pokemon_v2_type_sum_order_by\\r\\n  var_pop: pokemon_v2_type_var_pop_order_by\\r\\n  var_samp: pokemon_v2_type_var_samp_order_by\\r\\n  variance: pokemon_v2_type_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_type_avg_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_avg_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_type\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_type_bool_exp {\\r\\n  _and: [pokemon_v2_type_bool_exp!]\\r\\n  _not: pokemon_v2_type_bool_exp\\r\\n  _or: [pokemon_v2_type_bool_exp!]\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  move_damage_class_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemonV2PokemonevolutionsByPartyTypeId: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemonV2TypeefficaciesByTargetTypeId: pokemon_v2_typeefficacy_bool_exp\\r\\n  pokemon_v2_berries: pokemon_v2_berry_bool_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_movechanges: pokemon_v2_movechange_bool_exp\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_bool_exp\\r\\n  pokemon_v2_moves: pokemon_v2_move_bool_exp\\r\\n  pokemon_v2_pokemonevolutions: pokemon_v2_pokemonevolution_bool_exp\\r\\n  pokemon_v2_pokemonformtypes: pokemon_v2_pokemonformtype_bool_exp\\r\\n  pokemon_v2_pokemontypepasts: pokemon_v2_pokemontypepast_bool_exp\\r\\n  pokemon_v2_pokemontypes: pokemon_v2_pokemontype_bool_exp\\r\\n  pokemon_v2_typeefficacies: pokemon_v2_typeefficacy_bool_exp\\r\\n  pokemon_v2_typegameindices: pokemon_v2_typegameindex_bool_exp\\r\\n  pokemon_v2_typenames: pokemon_v2_typename_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_type_max_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_max_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_type_min_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n  name: String\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_min_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_type\\\\\\\".\\r\\ninput pokemon_v2_type_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n  name: order_by\\r\\n  pokemonV2PokemonevolutionsByPartyTypeId_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemonV2TypeefficaciesByTargetTypeId_aggregate: pokemon_v2_typeefficacy_aggregate_order_by\\r\\n  pokemon_v2_berries_aggregate: pokemon_v2_berry_aggregate_order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_movechanges_aggregate: pokemon_v2_movechange_aggregate_order_by\\r\\n  pokemon_v2_movedamageclass: pokemon_v2_movedamageclass_order_by\\r\\n  pokemon_v2_moves_aggregate: pokemon_v2_move_aggregate_order_by\\r\\n  pokemon_v2_pokemonevolutions_aggregate: pokemon_v2_pokemonevolution_aggregate_order_by\\r\\n  pokemon_v2_pokemonformtypes_aggregate: pokemon_v2_pokemonformtype_aggregate_order_by\\r\\n  pokemon_v2_pokemontypepasts_aggregate: pokemon_v2_pokemontypepast_aggregate_order_by\\r\\n  pokemon_v2_pokemontypes_aggregate: pokemon_v2_pokemontype_aggregate_order_by\\r\\n  pokemon_v2_typeefficacies_aggregate: pokemon_v2_typeefficacy_aggregate_order_by\\r\\n  pokemon_v2_typegameindices_aggregate: pokemon_v2_typegameindex_aggregate_order_by\\r\\n  pokemon_v2_typenames_aggregate: pokemon_v2_typename_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\nenum pokemon_v2_type_select_column {\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  move_damage_class_id\\r\\n  # column name\\r\\n  name\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_type_stddev_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_stddev_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_type_stddev_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_stddev_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_type_stddev_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_stddev_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_type_sum_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  move_damage_class_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_sum_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_type_var_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_var_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_type_var_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_var_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_type_variance_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  move_damage_class_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\ninput pokemon_v2_type_variance_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  move_damage_class_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ntype pokemon_v2_typeefficacy {\\r\\n  damage_factor: Int!\\r\\n  damage_type_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemonV2TypeByTargetTypeId: pokemon_v2_type\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  target_type_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ntype pokemon_v2_typeefficacy_aggregate {\\r\\n  aggregate: pokemon_v2_typeefficacy_aggregate_fields\\r\\n  nodes: [pokemon_v2_typeefficacy!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ntype pokemon_v2_typeefficacy_aggregate_fields {\\r\\n  avg: pokemon_v2_typeefficacy_avg_fields\\r\\n  count(columns: [pokemon_v2_typeefficacy_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_typeefficacy_max_fields\\r\\n  min: pokemon_v2_typeefficacy_min_fields\\r\\n  stddev: pokemon_v2_typeefficacy_stddev_fields\\r\\n  stddev_pop: pokemon_v2_typeefficacy_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_typeefficacy_stddev_samp_fields\\r\\n  sum: pokemon_v2_typeefficacy_sum_fields\\r\\n  var_pop: pokemon_v2_typeefficacy_var_pop_fields\\r\\n  var_samp: pokemon_v2_typeefficacy_var_samp_fields\\r\\n  variance: pokemon_v2_typeefficacy_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_aggregate_order_by {\\r\\n  avg: pokemon_v2_typeefficacy_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_typeefficacy_max_order_by\\r\\n  min: pokemon_v2_typeefficacy_min_order_by\\r\\n  stddev: pokemon_v2_typeefficacy_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_typeefficacy_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_typeefficacy_stddev_samp_order_by\\r\\n  sum: pokemon_v2_typeefficacy_sum_order_by\\r\\n  var_pop: pokemon_v2_typeefficacy_var_pop_order_by\\r\\n  var_samp: pokemon_v2_typeefficacy_var_samp_order_by\\r\\n  variance: pokemon_v2_typeefficacy_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_typeefficacy_avg_fields {\\r\\n  damage_factor: Float\\r\\n  damage_type_id: Float\\r\\n  id: Float\\r\\n  target_type_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_avg_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_typeefficacy_bool_exp {\\r\\n  _and: [pokemon_v2_typeefficacy_bool_exp!]\\r\\n  _not: pokemon_v2_typeefficacy_bool_exp\\r\\n  _or: [pokemon_v2_typeefficacy_bool_exp!]\\r\\n  damage_factor: Int_comparison_exp\\r\\n  damage_type_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemonV2TypeByTargetTypeId: pokemon_v2_type_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  target_type_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_typeefficacy_max_fields {\\r\\n  damage_factor: Int\\r\\n  damage_type_id: Int\\r\\n  id: Int\\r\\n  target_type_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_max_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_typeefficacy_min_fields {\\r\\n  damage_factor: Int\\r\\n  damage_type_id: Int\\r\\n  id: Int\\r\\n  target_type_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_min_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_typeefficacy\\\\\\\".\\r\\ninput pokemon_v2_typeefficacy_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  pokemonV2TypeByTargetTypeId: pokemon_v2_type_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\nenum pokemon_v2_typeefficacy_select_column {\\r\\n  # column name\\r\\n  damage_factor\\r\\n  # column name\\r\\n  damage_type_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  target_type_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_typeefficacy_stddev_fields {\\r\\n  damage_factor: Float\\r\\n  damage_type_id: Float\\r\\n  id: Float\\r\\n  target_type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_stddev_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_typeefficacy_stddev_pop_fields {\\r\\n  damage_factor: Float\\r\\n  damage_type_id: Float\\r\\n  id: Float\\r\\n  target_type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_stddev_pop_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_typeefficacy_stddev_samp_fields {\\r\\n  damage_factor: Float\\r\\n  damage_type_id: Float\\r\\n  id: Float\\r\\n  target_type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_stddev_samp_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_typeefficacy_sum_fields {\\r\\n  damage_factor: Int\\r\\n  damage_type_id: Int\\r\\n  id: Int\\r\\n  target_type_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_sum_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_typeefficacy_var_pop_fields {\\r\\n  damage_factor: Float\\r\\n  damage_type_id: Float\\r\\n  id: Float\\r\\n  target_type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_var_pop_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_typeefficacy_var_samp_fields {\\r\\n  damage_factor: Float\\r\\n  damage_type_id: Float\\r\\n  id: Float\\r\\n  target_type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_var_samp_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_typeefficacy_variance_fields {\\r\\n  damage_factor: Float\\r\\n  damage_type_id: Float\\r\\n  id: Float\\r\\n  target_type_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\ninput pokemon_v2_typeefficacy_variance_order_by {\\r\\n  damage_factor: order_by\\r\\n  damage_type_id: order_by\\r\\n  id: order_by\\r\\n  target_type_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ntype pokemon_v2_typegameindex {\\r\\n  game_index: Int!\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ntype pokemon_v2_typegameindex_aggregate {\\r\\n  aggregate: pokemon_v2_typegameindex_aggregate_fields\\r\\n  nodes: [pokemon_v2_typegameindex!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ntype pokemon_v2_typegameindex_aggregate_fields {\\r\\n  avg: pokemon_v2_typegameindex_avg_fields\\r\\n  count(columns: [pokemon_v2_typegameindex_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_typegameindex_max_fields\\r\\n  min: pokemon_v2_typegameindex_min_fields\\r\\n  stddev: pokemon_v2_typegameindex_stddev_fields\\r\\n  stddev_pop: pokemon_v2_typegameindex_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_typegameindex_stddev_samp_fields\\r\\n  sum: pokemon_v2_typegameindex_sum_fields\\r\\n  var_pop: pokemon_v2_typegameindex_var_pop_fields\\r\\n  var_samp: pokemon_v2_typegameindex_var_samp_fields\\r\\n  variance: pokemon_v2_typegameindex_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_aggregate_order_by {\\r\\n  avg: pokemon_v2_typegameindex_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_typegameindex_max_order_by\\r\\n  min: pokemon_v2_typegameindex_min_order_by\\r\\n  stddev: pokemon_v2_typegameindex_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_typegameindex_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_typegameindex_stddev_samp_order_by\\r\\n  sum: pokemon_v2_typegameindex_sum_order_by\\r\\n  var_pop: pokemon_v2_typegameindex_var_pop_order_by\\r\\n  var_samp: pokemon_v2_typegameindex_var_samp_order_by\\r\\n  variance: pokemon_v2_typegameindex_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_typegameindex_avg_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_avg_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_typegameindex\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_typegameindex_bool_exp {\\r\\n  _and: [pokemon_v2_typegameindex_bool_exp!]\\r\\n  _not: pokemon_v2_typegameindex_bool_exp\\r\\n  _or: [pokemon_v2_typegameindex_bool_exp!]\\r\\n  game_index: Int_comparison_exp\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  type_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_typegameindex_max_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_max_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_typegameindex_min_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_min_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_typegameindex\\\\\\\".\\r\\ninput pokemon_v2_typegameindex_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\nenum pokemon_v2_typegameindex_select_column {\\r\\n  # column name\\r\\n  game_index\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  type_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_typegameindex_stddev_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_stddev_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_typegameindex_stddev_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_stddev_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_typegameindex_stddev_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_stddev_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_typegameindex_sum_fields {\\r\\n  game_index: Int\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_sum_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_typegameindex_var_pop_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_var_pop_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_typegameindex_var_samp_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_var_samp_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_typegameindex_variance_fields {\\r\\n  game_index: Float\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\ninput pokemon_v2_typegameindex_variance_order_by {\\r\\n  game_index: order_by\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ntype pokemon_v2_typename {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_type: pokemon_v2_type\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ntype pokemon_v2_typename_aggregate {\\r\\n  aggregate: pokemon_v2_typename_aggregate_fields\\r\\n  nodes: [pokemon_v2_typename!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ntype pokemon_v2_typename_aggregate_fields {\\r\\n  avg: pokemon_v2_typename_avg_fields\\r\\n  count(columns: [pokemon_v2_typename_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_typename_max_fields\\r\\n  min: pokemon_v2_typename_min_fields\\r\\n  stddev: pokemon_v2_typename_stddev_fields\\r\\n  stddev_pop: pokemon_v2_typename_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_typename_stddev_samp_fields\\r\\n  sum: pokemon_v2_typename_sum_fields\\r\\n  var_pop: pokemon_v2_typename_var_pop_fields\\r\\n  var_samp: pokemon_v2_typename_var_samp_fields\\r\\n  variance: pokemon_v2_typename_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_aggregate_order_by {\\r\\n  avg: pokemon_v2_typename_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_typename_max_order_by\\r\\n  min: pokemon_v2_typename_min_order_by\\r\\n  stddev: pokemon_v2_typename_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_typename_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_typename_stddev_samp_order_by\\r\\n  sum: pokemon_v2_typename_sum_order_by\\r\\n  var_pop: pokemon_v2_typename_var_pop_order_by\\r\\n  var_samp: pokemon_v2_typename_var_samp_order_by\\r\\n  variance: pokemon_v2_typename_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_typename_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_typename\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_typename_bool_exp {\\r\\n  _and: [pokemon_v2_typename_bool_exp!]\\r\\n  _not: pokemon_v2_typename_bool_exp\\r\\n  _or: [pokemon_v2_typename_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_type: pokemon_v2_type_bool_exp\\r\\n  type_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_typename_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_typename_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_typename\\\\\\\".\\r\\ninput pokemon_v2_typename_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_type: pokemon_v2_type_order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\nenum pokemon_v2_typename_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  type_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_typename_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_typename_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_typename_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_typename_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  type_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_typename_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_typename_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_typename_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  type_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\ninput pokemon_v2_typename_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  type_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ntype pokemon_v2_version {\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounters(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): [pokemon_v2_encounter!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounters_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): pokemon_v2_encounter_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_locationareaencounterrates(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): [pokemon_v2_locationareaencounterrate!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_locationareaencounterrates_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): pokemon_v2_locationareaencounterrate_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemongameindices(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): [pokemon_v2_pokemongameindex!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemongameindices_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): pokemon_v2_pokemongameindex_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonitems(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): [pokemon_v2_pokemonitem!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonitems_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): pokemon_v2_pokemonitem_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspeciesflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspeciesflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesflavortext_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  # An array relationship\\r\\n  pokemon_v2_versionnames(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): [pokemon_v2_versionname!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versionnames_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): pokemon_v2_versionname_aggregate!\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ntype pokemon_v2_version_aggregate {\\r\\n  aggregate: pokemon_v2_version_aggregate_fields\\r\\n  nodes: [pokemon_v2_version!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ntype pokemon_v2_version_aggregate_fields {\\r\\n  avg: pokemon_v2_version_avg_fields\\r\\n  count(columns: [pokemon_v2_version_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_version_max_fields\\r\\n  min: pokemon_v2_version_min_fields\\r\\n  stddev: pokemon_v2_version_stddev_fields\\r\\n  stddev_pop: pokemon_v2_version_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_version_stddev_samp_fields\\r\\n  sum: pokemon_v2_version_sum_fields\\r\\n  var_pop: pokemon_v2_version_var_pop_fields\\r\\n  var_samp: pokemon_v2_version_var_samp_fields\\r\\n  variance: pokemon_v2_version_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_aggregate_order_by {\\r\\n  avg: pokemon_v2_version_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_version_max_order_by\\r\\n  min: pokemon_v2_version_min_order_by\\r\\n  stddev: pokemon_v2_version_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_version_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_version_stddev_samp_order_by\\r\\n  sum: pokemon_v2_version_sum_order_by\\r\\n  var_pop: pokemon_v2_version_var_pop_order_by\\r\\n  var_samp: pokemon_v2_version_var_samp_order_by\\r\\n  variance: pokemon_v2_version_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_version_avg_fields {\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_avg_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_version\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_version_bool_exp {\\r\\n  _and: [pokemon_v2_version_bool_exp!]\\r\\n  _not: pokemon_v2_version_bool_exp\\r\\n  _or: [pokemon_v2_version_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_encounters: pokemon_v2_encounter_bool_exp\\r\\n  pokemon_v2_locationareaencounterrates: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  pokemon_v2_pokemongameindices: pokemon_v2_pokemongameindex_bool_exp\\r\\n  pokemon_v2_pokemonitems: pokemon_v2_pokemonitem_bool_exp\\r\\n  pokemon_v2_pokemonspeciesflavortexts: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  pokemon_v2_versionnames: pokemon_v2_versionname_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_version_max_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_max_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_version_min_fields {\\r\\n  id: Int\\r\\n  name: String\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_min_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_version\\\\\\\".\\r\\ninput pokemon_v2_version_order_by {\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_encounters_aggregate: pokemon_v2_encounter_aggregate_order_by\\r\\n  pokemon_v2_locationareaencounterrates_aggregate: pokemon_v2_locationareaencounterrate_aggregate_order_by\\r\\n  pokemon_v2_pokemongameindices_aggregate: pokemon_v2_pokemongameindex_aggregate_order_by\\r\\n  pokemon_v2_pokemonitems_aggregate: pokemon_v2_pokemonitem_aggregate_order_by\\r\\n  pokemon_v2_pokemonspeciesflavortexts_aggregate: pokemon_v2_pokemonspeciesflavortext_aggregate_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  pokemon_v2_versionnames_aggregate: pokemon_v2_versionname_aggregate_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\nenum pokemon_v2_version_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_version_stddev_fields {\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_stddev_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_version_stddev_pop_fields {\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_version_stddev_samp_fields {\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_version_sum_fields {\\r\\n  id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_sum_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_version_var_pop_fields {\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_var_pop_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_version_var_samp_fields {\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_var_samp_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_version_variance_fields {\\r\\n  id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\ninput pokemon_v2_version_variance_order_by {\\r\\n  id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ntype pokemon_v2_versiongroup {\\r\\n  generation_id: Int\\r\\n  id: Int!\\r\\n  name: String!\\r\\n  order: Int\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilitychanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): [pokemon_v2_abilitychange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilitychanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): pokemon_v2_abilitychange_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_abilityflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): [pokemon_v2_abilityflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_abilityflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): pokemon_v2_abilityflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_encounterslots(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): [pokemon_v2_encounterslot!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_encounterslots_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): pokemon_v2_encounterslot_aggregate!\\r\\n  # An object relationship\\r\\n  pokemon_v2_generation: pokemon_v2_generation\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): [pokemon_v2_itemflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): pokemon_v2_itemflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_machines(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): [pokemon_v2_machine!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_machines_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): pokemon_v2_machine_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_movechanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): [pokemon_v2_movechange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movechanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): pokemon_v2_movechange_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveeffectchanges(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchange!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveeffectchanges_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): pokemon_v2_moveeffectchange_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_moveflavortexts(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): [pokemon_v2_moveflavortext!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_moveflavortexts_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): pokemon_v2_moveflavortext_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokedexversiongroups(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): [pokemon_v2_pokedexversiongroup!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokedexversiongroups_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): pokemon_v2_pokedexversiongroup_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonforms(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): [pokemon_v2_pokemonform!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonforms_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): pokemon_v2_pokemonform_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonmoves(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): [pokemon_v2_pokemonmove!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonmoves_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): pokemon_v2_pokemonmove_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_versiongroupmovelearnmethods(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): [pokemon_v2_versiongroupmovelearnmethod!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versiongroupmovelearnmethods_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): pokemon_v2_versiongroupmovelearnmethod_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_versiongroupregions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): [pokemon_v2_versiongroupregion!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versiongroupregions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): pokemon_v2_versiongroupregion_aggregate!\\r\\n  # An array relationship\\r\\n  pokemon_v2_versions(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_version_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_version_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_version_bool_exp\\r\\n  ): [pokemon_v2_version!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_versions_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_version_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_version_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_version_bool_exp\\r\\n  ): pokemon_v2_version_aggregate!\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ntype pokemon_v2_versiongroup_aggregate {\\r\\n  aggregate: pokemon_v2_versiongroup_aggregate_fields\\r\\n  nodes: [pokemon_v2_versiongroup!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ntype pokemon_v2_versiongroup_aggregate_fields {\\r\\n  avg: pokemon_v2_versiongroup_avg_fields\\r\\n  count(columns: [pokemon_v2_versiongroup_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_versiongroup_max_fields\\r\\n  min: pokemon_v2_versiongroup_min_fields\\r\\n  stddev: pokemon_v2_versiongroup_stddev_fields\\r\\n  stddev_pop: pokemon_v2_versiongroup_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_versiongroup_stddev_samp_fields\\r\\n  sum: pokemon_v2_versiongroup_sum_fields\\r\\n  var_pop: pokemon_v2_versiongroup_var_pop_fields\\r\\n  var_samp: pokemon_v2_versiongroup_var_samp_fields\\r\\n  variance: pokemon_v2_versiongroup_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_aggregate_order_by {\\r\\n  avg: pokemon_v2_versiongroup_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_versiongroup_max_order_by\\r\\n  min: pokemon_v2_versiongroup_min_order_by\\r\\n  stddev: pokemon_v2_versiongroup_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_versiongroup_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_versiongroup_stddev_samp_order_by\\r\\n  sum: pokemon_v2_versiongroup_sum_order_by\\r\\n  var_pop: pokemon_v2_versiongroup_var_pop_order_by\\r\\n  var_samp: pokemon_v2_versiongroup_var_samp_order_by\\r\\n  variance: pokemon_v2_versiongroup_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_versiongroup_avg_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_avg_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_versiongroup\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_versiongroup_bool_exp {\\r\\n  _and: [pokemon_v2_versiongroup_bool_exp!]\\r\\n  _not: pokemon_v2_versiongroup_bool_exp\\r\\n  _or: [pokemon_v2_versiongroup_bool_exp!]\\r\\n  generation_id: Int_comparison_exp\\r\\n  id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  order: Int_comparison_exp\\r\\n  pokemon_v2_abilitychanges: pokemon_v2_abilitychange_bool_exp\\r\\n  pokemon_v2_abilityflavortexts: pokemon_v2_abilityflavortext_bool_exp\\r\\n  pokemon_v2_encounterslots: pokemon_v2_encounterslot_bool_exp\\r\\n  pokemon_v2_generation: pokemon_v2_generation_bool_exp\\r\\n  pokemon_v2_itemflavortexts: pokemon_v2_itemflavortext_bool_exp\\r\\n  pokemon_v2_machines: pokemon_v2_machine_bool_exp\\r\\n  pokemon_v2_movechanges: pokemon_v2_movechange_bool_exp\\r\\n  pokemon_v2_moveeffectchanges: pokemon_v2_moveeffectchange_bool_exp\\r\\n  pokemon_v2_moveflavortexts: pokemon_v2_moveflavortext_bool_exp\\r\\n  pokemon_v2_pokedexversiongroups: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  pokemon_v2_pokemonforms: pokemon_v2_pokemonform_bool_exp\\r\\n  pokemon_v2_pokemonmoves: pokemon_v2_pokemonmove_bool_exp\\r\\n  pokemon_v2_versiongroupmovelearnmethods: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  pokemon_v2_versiongroupregions: pokemon_v2_versiongroupregion_bool_exp\\r\\n  pokemon_v2_versions: pokemon_v2_version_bool_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_versiongroup_max_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_max_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_versiongroup_min_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  name: String\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_min_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_versiongroup\\\\\\\".\\r\\ninput pokemon_v2_versiongroup_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  name: order_by\\r\\n  order: order_by\\r\\n  pokemon_v2_abilitychanges_aggregate: pokemon_v2_abilitychange_aggregate_order_by\\r\\n  pokemon_v2_abilityflavortexts_aggregate: pokemon_v2_abilityflavortext_aggregate_order_by\\r\\n  pokemon_v2_encounterslots_aggregate: pokemon_v2_encounterslot_aggregate_order_by\\r\\n  pokemon_v2_generation: pokemon_v2_generation_order_by\\r\\n  pokemon_v2_itemflavortexts_aggregate: pokemon_v2_itemflavortext_aggregate_order_by\\r\\n  pokemon_v2_machines_aggregate: pokemon_v2_machine_aggregate_order_by\\r\\n  pokemon_v2_movechanges_aggregate: pokemon_v2_movechange_aggregate_order_by\\r\\n  pokemon_v2_moveeffectchanges_aggregate: pokemon_v2_moveeffectchange_aggregate_order_by\\r\\n  pokemon_v2_moveflavortexts_aggregate: pokemon_v2_moveflavortext_aggregate_order_by\\r\\n  pokemon_v2_pokedexversiongroups_aggregate: pokemon_v2_pokedexversiongroup_aggregate_order_by\\r\\n  pokemon_v2_pokemonforms_aggregate: pokemon_v2_pokemonform_aggregate_order_by\\r\\n  pokemon_v2_pokemonmoves_aggregate: pokemon_v2_pokemonmove_aggregate_order_by\\r\\n  pokemon_v2_versiongroupmovelearnmethods_aggregate: pokemon_v2_versiongroupmovelearnmethod_aggregate_order_by\\r\\n  pokemon_v2_versiongroupregions_aggregate: pokemon_v2_versiongroupregion_aggregate_order_by\\r\\n  pokemon_v2_versions_aggregate: pokemon_v2_version_aggregate_order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\nenum pokemon_v2_versiongroup_select_column {\\r\\n  # column name\\r\\n  generation_id\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  order\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_versiongroup_stddev_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_stddev_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_versiongroup_stddev_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_stddev_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_versiongroup_stddev_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_stddev_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_versiongroup_sum_fields {\\r\\n  generation_id: Int\\r\\n  id: Int\\r\\n  order: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_sum_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_versiongroup_var_pop_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_var_pop_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_versiongroup_var_samp_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_var_samp_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_versiongroup_variance_fields {\\r\\n  generation_id: Float\\r\\n  id: Float\\r\\n  order: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\ninput pokemon_v2_versiongroup_variance_order_by {\\r\\n  generation_id: order_by\\r\\n  id: order_by\\r\\n  order: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ntype pokemon_v2_versiongroupmovelearnmethod {\\r\\n  id: Int!\\r\\n  move_learn_method_id: Int\\r\\n  # An object relationship\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_aggregate {\\r\\n  aggregate: pokemon_v2_versiongroupmovelearnmethod_aggregate_fields\\r\\n  nodes: [pokemon_v2_versiongroupmovelearnmethod!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_aggregate_fields {\\r\\n  avg: pokemon_v2_versiongroupmovelearnmethod_avg_fields\\r\\n  count(columns: [pokemon_v2_versiongroupmovelearnmethod_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_versiongroupmovelearnmethod_max_fields\\r\\n  min: pokemon_v2_versiongroupmovelearnmethod_min_fields\\r\\n  stddev: pokemon_v2_versiongroupmovelearnmethod_stddev_fields\\r\\n  stddev_pop: pokemon_v2_versiongroupmovelearnmethod_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_versiongroupmovelearnmethod_stddev_samp_fields\\r\\n  sum: pokemon_v2_versiongroupmovelearnmethod_sum_fields\\r\\n  var_pop: pokemon_v2_versiongroupmovelearnmethod_var_pop_fields\\r\\n  var_samp: pokemon_v2_versiongroupmovelearnmethod_var_samp_fields\\r\\n  variance: pokemon_v2_versiongroupmovelearnmethod_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_aggregate_order_by {\\r\\n  avg: pokemon_v2_versiongroupmovelearnmethod_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_versiongroupmovelearnmethod_max_order_by\\r\\n  min: pokemon_v2_versiongroupmovelearnmethod_min_order_by\\r\\n  stddev: pokemon_v2_versiongroupmovelearnmethod_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_versiongroupmovelearnmethod_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_versiongroupmovelearnmethod_stddev_samp_order_by\\r\\n  sum: pokemon_v2_versiongroupmovelearnmethod_sum_order_by\\r\\n  var_pop: pokemon_v2_versiongroupmovelearnmethod_var_pop_order_by\\r\\n  var_samp: pokemon_v2_versiongroupmovelearnmethod_var_samp_order_by\\r\\n  variance: pokemon_v2_versiongroupmovelearnmethod_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_avg_fields {\\r\\n  id: Float\\r\\n  move_learn_method_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_avg_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_bool_exp {\\r\\n  _and: [pokemon_v2_versiongroupmovelearnmethod_bool_exp!]\\r\\n  _not: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  _or: [pokemon_v2_versiongroupmovelearnmethod_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  move_learn_method_id: Int_comparison_exp\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_max_fields {\\r\\n  id: Int\\r\\n  move_learn_method_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_max_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_min_fields {\\r\\n  id: Int\\r\\n  move_learn_method_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_min_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\".\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  pokemon_v2_movelearnmethod: pokemon_v2_movelearnmethod_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\nenum pokemon_v2_versiongroupmovelearnmethod_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  move_learn_method_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_stddev_fields {\\r\\n  id: Float\\r\\n  move_learn_method_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_stddev_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_stddev_pop_fields {\\r\\n  id: Float\\r\\n  move_learn_method_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_stddev_samp_fields {\\r\\n  id: Float\\r\\n  move_learn_method_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_sum_fields {\\r\\n  id: Int\\r\\n  move_learn_method_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_sum_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_var_pop_fields {\\r\\n  id: Float\\r\\n  move_learn_method_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_var_pop_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_var_samp_fields {\\r\\n  id: Float\\r\\n  move_learn_method_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_var_samp_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_versiongroupmovelearnmethod_variance_fields {\\r\\n  id: Float\\r\\n  move_learn_method_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\ninput pokemon_v2_versiongroupmovelearnmethod_variance_order_by {\\r\\n  id: order_by\\r\\n  move_learn_method_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ntype pokemon_v2_versiongroupregion {\\r\\n  id: Int!\\r\\n  # An object relationship\\r\\n  pokemon_v2_region: pokemon_v2_region\\r\\n  # An object relationship\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup\\r\\n  region_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ntype pokemon_v2_versiongroupregion_aggregate {\\r\\n  aggregate: pokemon_v2_versiongroupregion_aggregate_fields\\r\\n  nodes: [pokemon_v2_versiongroupregion!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ntype pokemon_v2_versiongroupregion_aggregate_fields {\\r\\n  avg: pokemon_v2_versiongroupregion_avg_fields\\r\\n  count(columns: [pokemon_v2_versiongroupregion_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_versiongroupregion_max_fields\\r\\n  min: pokemon_v2_versiongroupregion_min_fields\\r\\n  stddev: pokemon_v2_versiongroupregion_stddev_fields\\r\\n  stddev_pop: pokemon_v2_versiongroupregion_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_versiongroupregion_stddev_samp_fields\\r\\n  sum: pokemon_v2_versiongroupregion_sum_fields\\r\\n  var_pop: pokemon_v2_versiongroupregion_var_pop_fields\\r\\n  var_samp: pokemon_v2_versiongroupregion_var_samp_fields\\r\\n  variance: pokemon_v2_versiongroupregion_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_aggregate_order_by {\\r\\n  avg: pokemon_v2_versiongroupregion_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_versiongroupregion_max_order_by\\r\\n  min: pokemon_v2_versiongroupregion_min_order_by\\r\\n  stddev: pokemon_v2_versiongroupregion_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_versiongroupregion_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_versiongroupregion_stddev_samp_order_by\\r\\n  sum: pokemon_v2_versiongroupregion_sum_order_by\\r\\n  var_pop: pokemon_v2_versiongroupregion_var_pop_order_by\\r\\n  var_samp: pokemon_v2_versiongroupregion_var_samp_order_by\\r\\n  variance: pokemon_v2_versiongroupregion_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_versiongroupregion_avg_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_avg_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_versiongroupregion_bool_exp {\\r\\n  _and: [pokemon_v2_versiongroupregion_bool_exp!]\\r\\n  _not: pokemon_v2_versiongroupregion_bool_exp\\r\\n  _or: [pokemon_v2_versiongroupregion_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  pokemon_v2_region: pokemon_v2_region_bool_exp\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_bool_exp\\r\\n  region_id: Int_comparison_exp\\r\\n  version_group_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_versiongroupregion_max_fields {\\r\\n  id: Int\\r\\n  region_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_max_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_versiongroupregion_min_fields {\\r\\n  id: Int\\r\\n  region_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_min_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\".\\r\\ninput pokemon_v2_versiongroupregion_order_by {\\r\\n  id: order_by\\r\\n  pokemon_v2_region: pokemon_v2_region_order_by\\r\\n  pokemon_v2_versiongroup: pokemon_v2_versiongroup_order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\nenum pokemon_v2_versiongroupregion_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  region_id\\r\\n  # column name\\r\\n  version_group_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_versiongroupregion_stddev_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_stddev_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_versiongroupregion_stddev_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_versiongroupregion_stddev_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_versiongroupregion_sum_fields {\\r\\n  id: Int\\r\\n  region_id: Int\\r\\n  version_group_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_sum_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_versiongroupregion_var_pop_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_var_pop_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_versiongroupregion_var_samp_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_var_samp_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_versiongroupregion_variance_fields {\\r\\n  id: Float\\r\\n  region_id: Float\\r\\n  version_group_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\ninput pokemon_v2_versiongroupregion_variance_order_by {\\r\\n  id: order_by\\r\\n  region_id: order_by\\r\\n  version_group_id: order_by\\r\\n}\\r\\n\\r\\n# columns and relationships of \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ntype pokemon_v2_versionname {\\r\\n  id: Int!\\r\\n  language_id: Int\\r\\n  name: String!\\r\\n  # An object relationship\\r\\n  pokemon_v2_language: pokemon_v2_language\\r\\n  # An object relationship\\r\\n  pokemon_v2_version: pokemon_v2_version\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# aggregated selection of \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ntype pokemon_v2_versionname_aggregate {\\r\\n  aggregate: pokemon_v2_versionname_aggregate_fields\\r\\n  nodes: [pokemon_v2_versionname!]!\\r\\n}\\r\\n\\r\\n# aggregate fields of \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ntype pokemon_v2_versionname_aggregate_fields {\\r\\n  avg: pokemon_v2_versionname_avg_fields\\r\\n  count(columns: [pokemon_v2_versionname_select_column!], distinct: Boolean): Int!\\r\\n  max: pokemon_v2_versionname_max_fields\\r\\n  min: pokemon_v2_versionname_min_fields\\r\\n  stddev: pokemon_v2_versionname_stddev_fields\\r\\n  stddev_pop: pokemon_v2_versionname_stddev_pop_fields\\r\\n  stddev_samp: pokemon_v2_versionname_stddev_samp_fields\\r\\n  sum: pokemon_v2_versionname_sum_fields\\r\\n  var_pop: pokemon_v2_versionname_var_pop_fields\\r\\n  var_samp: pokemon_v2_versionname_var_samp_fields\\r\\n  variance: pokemon_v2_versionname_variance_fields\\r\\n}\\r\\n\\r\\n# order by aggregate values of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_aggregate_order_by {\\r\\n  avg: pokemon_v2_versionname_avg_order_by\\r\\n  count: order_by\\r\\n  max: pokemon_v2_versionname_max_order_by\\r\\n  min: pokemon_v2_versionname_min_order_by\\r\\n  stddev: pokemon_v2_versionname_stddev_order_by\\r\\n  stddev_pop: pokemon_v2_versionname_stddev_pop_order_by\\r\\n  stddev_samp: pokemon_v2_versionname_stddev_samp_order_by\\r\\n  sum: pokemon_v2_versionname_sum_order_by\\r\\n  var_pop: pokemon_v2_versionname_var_pop_order_by\\r\\n  var_samp: pokemon_v2_versionname_var_samp_order_by\\r\\n  variance: pokemon_v2_versionname_variance_order_by\\r\\n}\\r\\n\\r\\n# aggregate avg on columns\\r\\ntype pokemon_v2_versionname_avg_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by avg() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_avg_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Boolean expression to filter rows from the table \\\\\\\"pokemon_v2_versionname\\\\\\\". All fields are combined with a logical 'AND'.\\r\\ninput pokemon_v2_versionname_bool_exp {\\r\\n  _and: [pokemon_v2_versionname_bool_exp!]\\r\\n  _not: pokemon_v2_versionname_bool_exp\\r\\n  _or: [pokemon_v2_versionname_bool_exp!]\\r\\n  id: Int_comparison_exp\\r\\n  language_id: Int_comparison_exp\\r\\n  name: String_comparison_exp\\r\\n  pokemon_v2_language: pokemon_v2_language_bool_exp\\r\\n  pokemon_v2_version: pokemon_v2_version_bool_exp\\r\\n  version_id: Int_comparison_exp\\r\\n}\\r\\n\\r\\n# aggregate max on columns\\r\\ntype pokemon_v2_versionname_max_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by max() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_max_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate min on columns\\r\\ntype pokemon_v2_versionname_min_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  name: String\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by min() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_min_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# Ordering options when selecting data from \\\\\\\"pokemon_v2_versionname\\\\\\\".\\r\\ninput pokemon_v2_versionname_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  name: order_by\\r\\n  pokemon_v2_language: pokemon_v2_language_order_by\\r\\n  pokemon_v2_version: pokemon_v2_version_order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# select columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\nenum pokemon_v2_versionname_select_column {\\r\\n  # column name\\r\\n  id\\r\\n  # column name\\r\\n  language_id\\r\\n  # column name\\r\\n  name\\r\\n  # column name\\r\\n  version_id\\r\\n}\\r\\n\\r\\n# aggregate stddev on columns\\r\\ntype pokemon_v2_versionname_stddev_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_stddev_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_pop on columns\\r\\ntype pokemon_v2_versionname_stddev_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_pop() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_stddev_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate stddev_samp on columns\\r\\ntype pokemon_v2_versionname_stddev_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by stddev_samp() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_stddev_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate sum on columns\\r\\ntype pokemon_v2_versionname_sum_fields {\\r\\n  id: Int\\r\\n  language_id: Int\\r\\n  version_id: Int\\r\\n}\\r\\n\\r\\n# order by sum() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_sum_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_pop on columns\\r\\ntype pokemon_v2_versionname_var_pop_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_pop() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_var_pop_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate var_samp on columns\\r\\ntype pokemon_v2_versionname_var_samp_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by var_samp() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_var_samp_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\n# aggregate variance on columns\\r\\ntype pokemon_v2_versionname_variance_fields {\\r\\n  id: Float\\r\\n  language_id: Float\\r\\n  version_id: Float\\r\\n}\\r\\n\\r\\n# order by variance() on columns of table \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\ninput pokemon_v2_versionname_variance_order_by {\\r\\n  id: order_by\\r\\n  language_id: order_by\\r\\n  version_id: order_by\\r\\n}\\r\\n\\r\\ntype query_root {\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\n  pokemon_v2_ability(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_ability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_ability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_ability_bool_exp\\r\\n  ): [pokemon_v2_ability!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\n  pokemon_v2_ability_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_ability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_ability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_ability_bool_exp\\r\\n  ): pokemon_v2_ability_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_ability\\\\\\\" using primary key columns\\r\\n  pokemon_v2_ability_by_pk(id: Int!): pokemon_v2_ability\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\n  pokemon_v2_abilitychange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): [pokemon_v2_abilitychange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\n  pokemon_v2_abilitychange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): pokemon_v2_abilitychange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilitychange_by_pk(id: Int!): pokemon_v2_abilitychange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilitychangeeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilitychangeeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilitychangeeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilitychangeeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilitychangeeffecttext_by_pk(id: Int!): pokemon_v2_abilitychangeeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilityeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilityeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilityeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilityeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilityeffecttext_by_pk(id: Int!): pokemon_v2_abilityeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\n  pokemon_v2_abilityflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): [pokemon_v2_abilityflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\n  pokemon_v2_abilityflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): pokemon_v2_abilityflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilityflavortext_by_pk(id: Int!): pokemon_v2_abilityflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\n  pokemon_v2_abilityname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): [pokemon_v2_abilityname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\n  pokemon_v2_abilityname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): pokemon_v2_abilityname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilityname_by_pk(id: Int!): pokemon_v2_abilityname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\n  pokemon_v2_berry(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): [pokemon_v2_berry!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\n  pokemon_v2_berry_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): pokemon_v2_berry_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berry\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berry_by_pk(id: Int!): pokemon_v2_berry\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\n  pokemon_v2_berryfirmness(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmness_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmness_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmness_bool_exp\\r\\n  ): [pokemon_v2_berryfirmness!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\n  pokemon_v2_berryfirmness_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmness_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmness_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmness_bool_exp\\r\\n  ): pokemon_v2_berryfirmness_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmness\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryfirmness_by_pk(id: Int!): pokemon_v2_berryfirmness\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\n  pokemon_v2_berryfirmnessname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): [pokemon_v2_berryfirmnessname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\n  pokemon_v2_berryfirmnessname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): pokemon_v2_berryfirmnessname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryfirmnessname_by_pk(id: Int!): pokemon_v2_berryfirmnessname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\n  pokemon_v2_berryflavor(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavor_bool_exp\\r\\n  ): [pokemon_v2_berryflavor!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\n  pokemon_v2_berryflavor_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavor_bool_exp\\r\\n  ): pokemon_v2_berryflavor_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavor\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryflavor_by_pk(id: Int!): pokemon_v2_berryflavor\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\n  pokemon_v2_berryflavormap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): [pokemon_v2_berryflavormap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\n  pokemon_v2_berryflavormap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): pokemon_v2_berryflavormap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavormap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryflavormap_by_pk(id: Int!): pokemon_v2_berryflavormap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\n  pokemon_v2_berryflavorname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): [pokemon_v2_berryflavorname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\n  pokemon_v2_berryflavorname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): pokemon_v2_berryflavorname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavorname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryflavorname_by_pk(id: Int!): pokemon_v2_berryflavorname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\n  pokemon_v2_characteristic(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristic_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristic_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristic_bool_exp\\r\\n  ): [pokemon_v2_characteristic!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\n  pokemon_v2_characteristic_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristic_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristic_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristic_bool_exp\\r\\n  ): pokemon_v2_characteristic_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristic\\\\\\\" using primary key columns\\r\\n  pokemon_v2_characteristic_by_pk(id: Int!): pokemon_v2_characteristic\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\n  pokemon_v2_characteristicdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): [pokemon_v2_characteristicdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\n  pokemon_v2_characteristicdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): pokemon_v2_characteristicdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_characteristicdescription_by_pk(id: Int!): pokemon_v2_characteristicdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\n  pokemon_v2_contestcombo(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): [pokemon_v2_contestcombo!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\n  pokemon_v2_contestcombo_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): pokemon_v2_contestcombo_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contestcombo\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contestcombo_by_pk(id: Int!): pokemon_v2_contestcombo\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\n  pokemon_v2_contesteffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffect_bool_exp\\r\\n  ): [pokemon_v2_contesteffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\n  pokemon_v2_contesteffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffect_bool_exp\\r\\n  ): pokemon_v2_contesteffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesteffect_by_pk(id: Int!): pokemon_v2_contesteffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_contesteffecteffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_contesteffecteffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_contesteffecteffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_contesteffecteffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesteffecteffecttext_by_pk(id: Int!): pokemon_v2_contesteffecteffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_contesteffectflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_contesteffectflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_contesteffectflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_contesteffectflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesteffectflavortext_by_pk(id: Int!): pokemon_v2_contesteffectflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\n  pokemon_v2_contesttype(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttype_bool_exp\\r\\n  ): [pokemon_v2_contesttype!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\n  pokemon_v2_contesttype_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttype_bool_exp\\r\\n  ): pokemon_v2_contesttype_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttype\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesttype_by_pk(id: Int!): pokemon_v2_contesttype\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\n  pokemon_v2_contesttypename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): [pokemon_v2_contesttypename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\n  pokemon_v2_contesttypename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): pokemon_v2_contesttypename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttypename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesttypename_by_pk(id: Int!): pokemon_v2_contesttypename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\n  pokemon_v2_egggroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroup_bool_exp\\r\\n  ): [pokemon_v2_egggroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\n  pokemon_v2_egggroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroup_bool_exp\\r\\n  ): pokemon_v2_egggroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_egggroup_by_pk(id: Int!): pokemon_v2_egggroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\n  pokemon_v2_egggroupname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): [pokemon_v2_egggroupname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\n  pokemon_v2_egggroupname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): pokemon_v2_egggroupname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroupname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_egggroupname_by_pk(id: Int!): pokemon_v2_egggroupname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\n  pokemon_v2_encounter(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): [pokemon_v2_encounter!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\n  pokemon_v2_encounter_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): pokemon_v2_encounter_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounter\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounter_by_pk(id: Int!): pokemon_v2_encounter\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\n  pokemon_v2_encountercondition(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountercondition_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountercondition_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountercondition_bool_exp\\r\\n  ): [pokemon_v2_encountercondition!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\n  pokemon_v2_encountercondition_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountercondition_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountercondition_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountercondition_bool_exp\\r\\n  ): pokemon_v2_encountercondition_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountercondition\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encountercondition_by_pk(id: Int!): pokemon_v2_encountercondition\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\n  pokemon_v2_encounterconditionname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\n  pokemon_v2_encounterconditionname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): pokemon_v2_encounterconditionname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionname_by_pk(id: Int!): pokemon_v2_encounterconditionname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvalue(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvalue_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvalue_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvalue!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvalue_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvalue_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvalue_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvalue_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionvalue_by_pk(id: Int!): pokemon_v2_encounterconditionvalue\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluemap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluemap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluemap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluemap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionvaluemap_by_pk(id: Int!): pokemon_v2_encounterconditionvaluemap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionvaluename_by_pk(id: Int!): pokemon_v2_encounterconditionvaluename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\n  pokemon_v2_encountermethod(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethod_bool_exp\\r\\n  ): [pokemon_v2_encountermethod!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\n  pokemon_v2_encountermethod_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethod_bool_exp\\r\\n  ): pokemon_v2_encountermethod_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethod\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encountermethod_by_pk(id: Int!): pokemon_v2_encountermethod\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\n  pokemon_v2_encountermethodname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): [pokemon_v2_encountermethodname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\n  pokemon_v2_encountermethodname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): pokemon_v2_encountermethodname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethodname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encountermethodname_by_pk(id: Int!): pokemon_v2_encountermethodname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\n  pokemon_v2_encounterslot(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): [pokemon_v2_encounterslot!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\n  pokemon_v2_encounterslot_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): pokemon_v2_encounterslot_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterslot\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterslot_by_pk(id: Int!): pokemon_v2_encounterslot\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\n  pokemon_v2_evolutionchain(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutionchain_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutionchain_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutionchain_bool_exp\\r\\n  ): [pokemon_v2_evolutionchain!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\n  pokemon_v2_evolutionchain_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutionchain_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutionchain_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutionchain_bool_exp\\r\\n  ): pokemon_v2_evolutionchain_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutionchain\\\\\\\" using primary key columns\\r\\n  pokemon_v2_evolutionchain_by_pk(id: Int!): pokemon_v2_evolutionchain\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\n  pokemon_v2_evolutiontrigger(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontrigger_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontrigger_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontrigger_bool_exp\\r\\n  ): [pokemon_v2_evolutiontrigger!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\n  pokemon_v2_evolutiontrigger_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontrigger_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontrigger_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontrigger_bool_exp\\r\\n  ): pokemon_v2_evolutiontrigger_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\" using primary key columns\\r\\n  pokemon_v2_evolutiontrigger_by_pk(id: Int!): pokemon_v2_evolutiontrigger\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\n  pokemon_v2_evolutiontriggername(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): [pokemon_v2_evolutiontriggername!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\n  pokemon_v2_evolutiontriggername_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): pokemon_v2_evolutiontriggername_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\" using primary key columns\\r\\n  pokemon_v2_evolutiontriggername_by_pk(id: Int!): pokemon_v2_evolutiontriggername\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\n  pokemon_v2_experience(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_experience_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_experience_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_experience_bool_exp\\r\\n  ): [pokemon_v2_experience!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\n  pokemon_v2_experience_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_experience_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_experience_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_experience_bool_exp\\r\\n  ): pokemon_v2_experience_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_experience\\\\\\\" using primary key columns\\r\\n  pokemon_v2_experience_by_pk(id: Int!): pokemon_v2_experience\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\n  pokemon_v2_gender(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_gender_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_gender_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_gender_bool_exp\\r\\n  ): [pokemon_v2_gender!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\n  pokemon_v2_gender_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_gender_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_gender_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_gender_bool_exp\\r\\n  ): pokemon_v2_gender_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_gender\\\\\\\" using primary key columns\\r\\n  pokemon_v2_gender_by_pk(id: Int!): pokemon_v2_gender\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\n  pokemon_v2_generation(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generation_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generation_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generation_bool_exp\\r\\n  ): [pokemon_v2_generation!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\n  pokemon_v2_generation_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generation_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generation_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generation_bool_exp\\r\\n  ): pokemon_v2_generation_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generation\\\\\\\" using primary key columns\\r\\n  pokemon_v2_generation_by_pk(id: Int!): pokemon_v2_generation\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\n  pokemon_v2_generationname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): [pokemon_v2_generationname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\n  pokemon_v2_generationname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): pokemon_v2_generationname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generationname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_generationname_by_pk(id: Int!): pokemon_v2_generationname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\n  pokemon_v2_growthrate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthrate_bool_exp\\r\\n  ): [pokemon_v2_growthrate!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\n  pokemon_v2_growthrate_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthrate_bool_exp\\r\\n  ): pokemon_v2_growthrate_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthrate\\\\\\\" using primary key columns\\r\\n  pokemon_v2_growthrate_by_pk(id: Int!): pokemon_v2_growthrate\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\n  pokemon_v2_growthratedescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): [pokemon_v2_growthratedescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\n  pokemon_v2_growthratedescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): pokemon_v2_growthratedescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthratedescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_growthratedescription_by_pk(id: Int!): pokemon_v2_growthratedescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\n  pokemon_v2_item(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): [pokemon_v2_item!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\n  pokemon_v2_item_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): pokemon_v2_item_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_item\\\\\\\" using primary key columns\\r\\n  pokemon_v2_item_by_pk(id: Int!): pokemon_v2_item\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\n  pokemon_v2_itemattribute(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattribute_bool_exp\\r\\n  ): [pokemon_v2_itemattribute!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\n  pokemon_v2_itemattribute_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattribute_bool_exp\\r\\n  ): pokemon_v2_itemattribute_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattribute\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattribute_by_pk(id: Int!): pokemon_v2_itemattribute\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\n  pokemon_v2_itemattributedescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): [pokemon_v2_itemattributedescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\n  pokemon_v2_itemattributedescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): pokemon_v2_itemattributedescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattributedescription_by_pk(id: Int!): pokemon_v2_itemattributedescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\n  pokemon_v2_itemattributemap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): [pokemon_v2_itemattributemap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\n  pokemon_v2_itemattributemap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): pokemon_v2_itemattributemap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributemap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattributemap_by_pk(id: Int!): pokemon_v2_itemattributemap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\n  pokemon_v2_itemattributename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): [pokemon_v2_itemattributename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\n  pokemon_v2_itemattributename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): pokemon_v2_itemattributename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattributename_by_pk(id: Int!): pokemon_v2_itemattributename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\n  pokemon_v2_itemcategory(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategory_bool_exp\\r\\n  ): [pokemon_v2_itemcategory!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\n  pokemon_v2_itemcategory_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategory_bool_exp\\r\\n  ): pokemon_v2_itemcategory_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategory\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemcategory_by_pk(id: Int!): pokemon_v2_itemcategory\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\n  pokemon_v2_itemcategoryname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): [pokemon_v2_itemcategoryname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\n  pokemon_v2_itemcategoryname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): pokemon_v2_itemcategoryname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemcategoryname_by_pk(id: Int!): pokemon_v2_itemcategoryname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\n  pokemon_v2_itemeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\n  pokemon_v2_itemeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): pokemon_v2_itemeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemeffecttext_by_pk(id: Int!): pokemon_v2_itemeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\n  pokemon_v2_itemflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): [pokemon_v2_itemflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\n  pokemon_v2_itemflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): pokemon_v2_itemflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemflavortext_by_pk(id: Int!): pokemon_v2_itemflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\n  pokemon_v2_itemflingeffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffect_bool_exp\\r\\n  ): [pokemon_v2_itemflingeffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\n  pokemon_v2_itemflingeffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffect_bool_exp\\r\\n  ): pokemon_v2_itemflingeffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemflingeffect_by_pk(id: Int!): pokemon_v2_itemflingeffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_itemflingeffecteffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemflingeffecteffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_itemflingeffecteffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_itemflingeffecteffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemflingeffecteffecttext_by_pk(id: Int!): pokemon_v2_itemflingeffecteffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\n  pokemon_v2_itemgameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): [pokemon_v2_itemgameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\n  pokemon_v2_itemgameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): pokemon_v2_itemgameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemgameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemgameindex_by_pk(id: Int!): pokemon_v2_itemgameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\n  pokemon_v2_itemname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): [pokemon_v2_itemname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\n  pokemon_v2_itemname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): pokemon_v2_itemname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemname_by_pk(id: Int!): pokemon_v2_itemname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\n  pokemon_v2_itempocket(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocket_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocket_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocket_bool_exp\\r\\n  ): [pokemon_v2_itempocket!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\n  pokemon_v2_itempocket_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocket_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocket_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocket_bool_exp\\r\\n  ): pokemon_v2_itempocket_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocket\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itempocket_by_pk(id: Int!): pokemon_v2_itempocket\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\n  pokemon_v2_itempocketname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): [pokemon_v2_itempocketname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\n  pokemon_v2_itempocketname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): pokemon_v2_itempocketname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocketname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itempocketname_by_pk(id: Int!): pokemon_v2_itempocketname\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemsprites_bool_exp\\r\\n  ): [pokemon_v2_itemsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemsprites_bool_exp\\r\\n  ): pokemon_v2_itemsprites_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemsprites\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemsprites_by_pk(id: Int!): pokemon_v2_itemsprites\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\n  pokemon_v2_language(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_language_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_language_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_language_bool_exp\\r\\n  ): [pokemon_v2_language!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\n  pokemon_v2_language_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_language_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_language_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_language_bool_exp\\r\\n  ): pokemon_v2_language_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_language\\\\\\\" using primary key columns\\r\\n  pokemon_v2_language_by_pk(id: Int!): pokemon_v2_language\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\n  pokemon_v2_languagename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): [pokemon_v2_languagename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\n  pokemon_v2_languagename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): pokemon_v2_languagename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_languagename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_languagename_by_pk(id: Int!): pokemon_v2_languagename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\n  pokemon_v2_location(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_location_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_location_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_location_bool_exp\\r\\n  ): [pokemon_v2_location!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\n  pokemon_v2_location_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_location_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_location_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_location_bool_exp\\r\\n  ): pokemon_v2_location_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_location\\\\\\\" using primary key columns\\r\\n  pokemon_v2_location_by_pk(id: Int!): pokemon_v2_location\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\n  pokemon_v2_locationarea(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationarea_bool_exp\\r\\n  ): [pokemon_v2_locationarea!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\n  pokemon_v2_locationarea_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationarea_bool_exp\\r\\n  ): pokemon_v2_locationarea_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationarea\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationarea_by_pk(id: Int!): pokemon_v2_locationarea\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\n  pokemon_v2_locationareaencounterrate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): [pokemon_v2_locationareaencounterrate!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\n  pokemon_v2_locationareaencounterrate_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): pokemon_v2_locationareaencounterrate_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationareaencounterrate_by_pk(id: Int!): pokemon_v2_locationareaencounterrate\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\n  pokemon_v2_locationareaname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): [pokemon_v2_locationareaname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\n  pokemon_v2_locationareaname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): pokemon_v2_locationareaname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationareaname_by_pk(id: Int!): pokemon_v2_locationareaname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\n  pokemon_v2_locationgameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): [pokemon_v2_locationgameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\n  pokemon_v2_locationgameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): pokemon_v2_locationgameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationgameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationgameindex_by_pk(id: Int!): pokemon_v2_locationgameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\n  pokemon_v2_locationname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): [pokemon_v2_locationname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\n  pokemon_v2_locationname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): pokemon_v2_locationname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationname_by_pk(id: Int!): pokemon_v2_locationname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\n  pokemon_v2_machine(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): [pokemon_v2_machine!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\n  pokemon_v2_machine_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): pokemon_v2_machine_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_machine\\\\\\\" using primary key columns\\r\\n  pokemon_v2_machine_by_pk(id: Int!): pokemon_v2_machine\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\n  pokemon_v2_move(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\n  pokemon_v2_move_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_move\\\\\\\" using primary key columns\\r\\n  pokemon_v2_move_by_pk(id: Int!): pokemon_v2_move\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\n  pokemon_v2_moveattribute(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattribute_bool_exp\\r\\n  ): [pokemon_v2_moveattribute!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\n  pokemon_v2_moveattribute_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattribute_bool_exp\\r\\n  ): pokemon_v2_moveattribute_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattribute\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattribute_by_pk(id: Int!): pokemon_v2_moveattribute\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\n  pokemon_v2_moveattributedescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): [pokemon_v2_moveattributedescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\n  pokemon_v2_moveattributedescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): pokemon_v2_moveattributedescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattributedescription_by_pk(id: Int!): pokemon_v2_moveattributedescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\n  pokemon_v2_moveattributemap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): [pokemon_v2_moveattributemap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\n  pokemon_v2_moveattributemap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): pokemon_v2_moveattributemap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributemap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattributemap_by_pk(id: Int!): pokemon_v2_moveattributemap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\n  pokemon_v2_moveattributename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): [pokemon_v2_moveattributename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\n  pokemon_v2_moveattributename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): pokemon_v2_moveattributename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattributename_by_pk(id: Int!): pokemon_v2_moveattributename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\n  pokemon_v2_movebattlestyle(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestyle_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestyle_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestyle_bool_exp\\r\\n  ): [pokemon_v2_movebattlestyle!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\n  pokemon_v2_movebattlestyle_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestyle_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestyle_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestyle_bool_exp\\r\\n  ): pokemon_v2_movebattlestyle_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movebattlestyle_by_pk(id: Int!): pokemon_v2_movebattlestyle\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\n  pokemon_v2_movebattlestylename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): [pokemon_v2_movebattlestylename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\n  pokemon_v2_movebattlestylename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): pokemon_v2_movebattlestylename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movebattlestylename_by_pk(id: Int!): pokemon_v2_movebattlestylename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\n  pokemon_v2_movechange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): [pokemon_v2_movechange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\n  pokemon_v2_movechange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): pokemon_v2_movechange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movechange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movechange_by_pk(id: Int!): pokemon_v2_movechange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\n  pokemon_v2_movedamageclass(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclass_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclass_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclass_bool_exp\\r\\n  ): [pokemon_v2_movedamageclass!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\n  pokemon_v2_movedamageclass_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclass_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclass_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclass_bool_exp\\r\\n  ): pokemon_v2_movedamageclass_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclass\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movedamageclass_by_pk(id: Int!): pokemon_v2_movedamageclass\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\n  pokemon_v2_movedamageclassdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\n  pokemon_v2_movedamageclassdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): pokemon_v2_movedamageclassdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movedamageclassdescription_by_pk(id: Int!): pokemon_v2_movedamageclassdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\n  pokemon_v2_movedamageclassname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\n  pokemon_v2_movedamageclassname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): pokemon_v2_movedamageclassname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movedamageclassname_by_pk(id: Int!): pokemon_v2_movedamageclassname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\n  pokemon_v2_moveeffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffect_bool_exp\\r\\n  ): [pokemon_v2_moveeffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\n  pokemon_v2_moveeffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffect_bool_exp\\r\\n  ): pokemon_v2_moveeffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffect_by_pk(id: Int!): pokemon_v2_moveeffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\n  pokemon_v2_moveeffectchange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\n  pokemon_v2_moveeffectchange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): pokemon_v2_moveeffectchange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffectchange_by_pk(id: Int!): pokemon_v2_moveeffectchange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffectchangeeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchangeeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffectchangeeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffectchangeeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffectchangeeffecttext_by_pk(id: Int!): pokemon_v2_moveeffectchangeeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffecteffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffecteffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffecteffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffecteffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffecteffecttext_by_pk(id: Int!): pokemon_v2_moveeffecteffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\n  pokemon_v2_moveflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): [pokemon_v2_moveflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\n  pokemon_v2_moveflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): pokemon_v2_moveflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveflavortext_by_pk(id: Int!): pokemon_v2_moveflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\n  pokemon_v2_movelearnmethod(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethod_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethod!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\n  pokemon_v2_movelearnmethod_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethod_bool_exp\\r\\n  ): pokemon_v2_movelearnmethod_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movelearnmethod_by_pk(id: Int!): pokemon_v2_movelearnmethod\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\n  pokemon_v2_movelearnmethoddescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethoddescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\n  pokemon_v2_movelearnmethoddescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): pokemon_v2_movelearnmethoddescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movelearnmethoddescription_by_pk(id: Int!): pokemon_v2_movelearnmethoddescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\n  pokemon_v2_movelearnmethodname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethodname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\n  pokemon_v2_movelearnmethodname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): pokemon_v2_movelearnmethodname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movelearnmethodname_by_pk(id: Int!): pokemon_v2_movelearnmethodname\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemeta(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): [pokemon_v2_movemeta!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemeta_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): pokemon_v2_movemeta_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemeta\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemeta_by_pk(id: Int!): pokemon_v2_movemeta\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\n  pokemon_v2_movemetaailment(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailment_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailment_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailment_bool_exp\\r\\n  ): [pokemon_v2_movemetaailment!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\n  pokemon_v2_movemetaailment_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailment_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailment_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailment_bool_exp\\r\\n  ): pokemon_v2_movemetaailment_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailment\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetaailment_by_pk(id: Int!): pokemon_v2_movemetaailment\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\n  pokemon_v2_movemetaailmentname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): [pokemon_v2_movemetaailmentname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\n  pokemon_v2_movemetaailmentname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): pokemon_v2_movemetaailmentname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetaailmentname_by_pk(id: Int!): pokemon_v2_movemetaailmentname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\n  pokemon_v2_movemetacategory(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategory_bool_exp\\r\\n  ): [pokemon_v2_movemetacategory!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\n  pokemon_v2_movemetacategory_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategory_bool_exp\\r\\n  ): pokemon_v2_movemetacategory_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategory\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetacategory_by_pk(id: Int!): pokemon_v2_movemetacategory\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\n  pokemon_v2_movemetacategorydescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): [pokemon_v2_movemetacategorydescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\n  pokemon_v2_movemetacategorydescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): pokemon_v2_movemetacategorydescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetacategorydescription_by_pk(id: Int!): pokemon_v2_movemetacategorydescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\n  pokemon_v2_movemetastatchange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): [pokemon_v2_movemetastatchange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\n  pokemon_v2_movemetastatchange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): pokemon_v2_movemetastatchange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetastatchange_by_pk(id: Int!): pokemon_v2_movemetastatchange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\n  pokemon_v2_movename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): [pokemon_v2_movename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\n  pokemon_v2_movename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): pokemon_v2_movename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movename_by_pk(id: Int!): pokemon_v2_movename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\n  pokemon_v2_movetarget(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetarget_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetarget_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetarget_bool_exp\\r\\n  ): [pokemon_v2_movetarget!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\n  pokemon_v2_movetarget_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetarget_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetarget_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetarget_bool_exp\\r\\n  ): pokemon_v2_movetarget_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetarget\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movetarget_by_pk(id: Int!): pokemon_v2_movetarget\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\n  pokemon_v2_movetargetdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): [pokemon_v2_movetargetdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\n  pokemon_v2_movetargetdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): pokemon_v2_movetargetdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movetargetdescription_by_pk(id: Int!): pokemon_v2_movetargetdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\n  pokemon_v2_movetargetname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): [pokemon_v2_movetargetname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\n  pokemon_v2_movetargetname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): pokemon_v2_movetargetname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movetargetname_by_pk(id: Int!): pokemon_v2_movetargetname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\n  pokemon_v2_nature(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): [pokemon_v2_nature!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\n  pokemon_v2_nature_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): pokemon_v2_nature_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_nature\\\\\\\" using primary key columns\\r\\n  pokemon_v2_nature_by_pk(id: Int!): pokemon_v2_nature\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\n  pokemon_v2_naturebattlestylepreference(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): [pokemon_v2_naturebattlestylepreference!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\n  pokemon_v2_naturebattlestylepreference_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): pokemon_v2_naturebattlestylepreference_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\" using primary key columns\\r\\n  pokemon_v2_naturebattlestylepreference_by_pk(id: Int!): pokemon_v2_naturebattlestylepreference\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\n  pokemon_v2_naturename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): [pokemon_v2_naturename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\n  pokemon_v2_naturename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): pokemon_v2_naturename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_naturename_by_pk(id: Int!): pokemon_v2_naturename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_naturepokeathlonstat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): [pokemon_v2_naturepokeathlonstat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_naturepokeathlonstat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): pokemon_v2_naturepokeathlonstat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_naturepokeathlonstat_by_pk(id: Int!): pokemon_v2_naturepokeathlonstat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\n  pokemon_v2_palpark(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): [pokemon_v2_palpark!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\n  pokemon_v2_palpark_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): pokemon_v2_palpark_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palpark\\\\\\\" using primary key columns\\r\\n  pokemon_v2_palpark_by_pk(id: Int!): pokemon_v2_palpark\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\n  pokemon_v2_palparkarea(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkarea_bool_exp\\r\\n  ): [pokemon_v2_palparkarea!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\n  pokemon_v2_palparkarea_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkarea_bool_exp\\r\\n  ): pokemon_v2_palparkarea_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkarea\\\\\\\" using primary key columns\\r\\n  pokemon_v2_palparkarea_by_pk(id: Int!): pokemon_v2_palparkarea\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\n  pokemon_v2_palparkareaname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): [pokemon_v2_palparkareaname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\n  pokemon_v2_palparkareaname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): pokemon_v2_palparkareaname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkareaname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_palparkareaname_by_pk(id: Int!): pokemon_v2_palparkareaname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstat_bool_exp\\r\\n  ): [pokemon_v2_pokeathlonstat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstat_bool_exp\\r\\n  ): pokemon_v2_pokeathlonstat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokeathlonstat_by_pk(id: Int!): pokemon_v2_pokeathlonstat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstatname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): [pokemon_v2_pokeathlonstatname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstatname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): pokemon_v2_pokeathlonstatname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokeathlonstatname_by_pk(id: Int!): pokemon_v2_pokeathlonstatname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\n  pokemon_v2_pokedex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedex_bool_exp\\r\\n  ): [pokemon_v2_pokedex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\n  pokemon_v2_pokedex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedex_bool_exp\\r\\n  ): pokemon_v2_pokedex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedex_by_pk(id: Int!): pokemon_v2_pokedex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\n  pokemon_v2_pokedexdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): [pokemon_v2_pokedexdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\n  pokemon_v2_pokedexdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): pokemon_v2_pokedexdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedexdescription_by_pk(id: Int!): pokemon_v2_pokedexdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\n  pokemon_v2_pokedexname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): [pokemon_v2_pokedexname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\n  pokemon_v2_pokedexname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): pokemon_v2_pokedexname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedexname_by_pk(id: Int!): pokemon_v2_pokedexname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\n  pokemon_v2_pokedexversiongroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): [pokemon_v2_pokedexversiongroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\n  pokemon_v2_pokedexversiongroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): pokemon_v2_pokedexversiongroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedexversiongroup_by_pk(id: Int!): pokemon_v2_pokedexversiongroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\n  pokemon_v2_pokemon(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemon_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemon_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemon_bool_exp\\r\\n  ): [pokemon_v2_pokemon!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\n  pokemon_v2_pokemon_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemon_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemon_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemon_bool_exp\\r\\n  ): pokemon_v2_pokemon_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemon\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemon_by_pk(id: Int!): pokemon_v2_pokemon\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\n  pokemon_v2_pokemonability(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): [pokemon_v2_pokemonability!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\n  pokemon_v2_pokemonability_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): pokemon_v2_pokemonability_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonability\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonability_by_pk(id: Int!): pokemon_v2_pokemonability\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\n  pokemon_v2_pokemoncolor(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolor_bool_exp\\r\\n  ): [pokemon_v2_pokemoncolor!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\n  pokemon_v2_pokemoncolor_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolor_bool_exp\\r\\n  ): pokemon_v2_pokemoncolor_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemoncolor_by_pk(id: Int!): pokemon_v2_pokemoncolor\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\n  pokemon_v2_pokemoncolorname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): [pokemon_v2_pokemoncolorname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\n  pokemon_v2_pokemoncolorname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): pokemon_v2_pokemoncolorname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemoncolorname_by_pk(id: Int!): pokemon_v2_pokemoncolorname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\n  pokemon_v2_pokemondexnumber(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): [pokemon_v2_pokemondexnumber!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\n  pokemon_v2_pokemondexnumber_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): pokemon_v2_pokemondexnumber_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemondexnumber_by_pk(id: Int!): pokemon_v2_pokemondexnumber\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\n  pokemon_v2_pokemonegggroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): [pokemon_v2_pokemonegggroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\n  pokemon_v2_pokemonegggroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): pokemon_v2_pokemonegggroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonegggroup_by_pk(id: Int!): pokemon_v2_pokemonegggroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\n  pokemon_v2_pokemonevolution(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\n  pokemon_v2_pokemonevolution_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonevolution_by_pk(id: Int!): pokemon_v2_pokemonevolution\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\n  pokemon_v2_pokemonform(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): [pokemon_v2_pokemonform!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\n  pokemon_v2_pokemonform_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): pokemon_v2_pokemonform_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonform\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonform_by_pk(id: Int!): pokemon_v2_pokemonform\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\n  pokemon_v2_pokemonformgeneration(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): [pokemon_v2_pokemonformgeneration!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\n  pokemon_v2_pokemonformgeneration_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): pokemon_v2_pokemonformgeneration_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformgeneration_by_pk(id: Int!): pokemon_v2_pokemonformgeneration\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\n  pokemon_v2_pokemonformname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): [pokemon_v2_pokemonformname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\n  pokemon_v2_pokemonformname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): pokemon_v2_pokemonformname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformname_by_pk(id: Int!): pokemon_v2_pokemonformname\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  ): [pokemon_v2_pokemonformsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  ): pokemon_v2_pokemonformsprites_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformsprites_by_pk(id: Int!): pokemon_v2_pokemonformsprites\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\n  pokemon_v2_pokemonformtype(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): [pokemon_v2_pokemonformtype!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\n  pokemon_v2_pokemonformtype_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): pokemon_v2_pokemonformtype_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformtype_by_pk(id: Int!): pokemon_v2_pokemonformtype\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\n  pokemon_v2_pokemongameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): [pokemon_v2_pokemongameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\n  pokemon_v2_pokemongameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): pokemon_v2_pokemongameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemongameindex_by_pk(id: Int!): pokemon_v2_pokemongameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitat_bool_exp\\r\\n  ): [pokemon_v2_pokemonhabitat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitat_bool_exp\\r\\n  ): pokemon_v2_pokemonhabitat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonhabitat_by_pk(id: Int!): pokemon_v2_pokemonhabitat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitatname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): [pokemon_v2_pokemonhabitatname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitatname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): pokemon_v2_pokemonhabitatname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonhabitatname_by_pk(id: Int!): pokemon_v2_pokemonhabitatname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\n  pokemon_v2_pokemonitem(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): [pokemon_v2_pokemonitem!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\n  pokemon_v2_pokemonitem_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): pokemon_v2_pokemonitem_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonitem\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonitem_by_pk(id: Int!): pokemon_v2_pokemonitem\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\n  pokemon_v2_pokemonmove(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): [pokemon_v2_pokemonmove!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\n  pokemon_v2_pokemonmove_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): pokemon_v2_pokemonmove_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonmove\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonmove_by_pk(id: Int!): pokemon_v2_pokemonmove\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\n  pokemon_v2_pokemonshape(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshape_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshape_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshape_bool_exp\\r\\n  ): [pokemon_v2_pokemonshape!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\n  pokemon_v2_pokemonshape_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshape_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshape_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshape_bool_exp\\r\\n  ): pokemon_v2_pokemonshape_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshape\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonshape_by_pk(id: Int!): pokemon_v2_pokemonshape\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\n  pokemon_v2_pokemonshapename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): [pokemon_v2_pokemonshapename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\n  pokemon_v2_pokemonshapename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): pokemon_v2_pokemonshapename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonshapename_by_pk(id: Int!): pokemon_v2_pokemonshapename\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspecies_by_pk(id: Int!): pokemon_v2_pokemonspecies\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspeciesdescription_by_pk(id: Int!): pokemon_v2_pokemonspeciesdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspeciesflavortext_by_pk(id: Int!): pokemon_v2_pokemonspeciesflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspeciesname_by_pk(id: Int!): pokemon_v2_pokemonspeciesname\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonsprites_bool_exp\\r\\n  ): [pokemon_v2_pokemonsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonsprites_bool_exp\\r\\n  ): pokemon_v2_pokemonsprites_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonsprites_by_pk(id: Int!): pokemon_v2_pokemonsprites\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\n  pokemon_v2_pokemonstat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): [pokemon_v2_pokemonstat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\n  pokemon_v2_pokemonstat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): pokemon_v2_pokemonstat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonstat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonstat_by_pk(id: Int!): pokemon_v2_pokemonstat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\n  pokemon_v2_pokemontype(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): [pokemon_v2_pokemontype!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\n  pokemon_v2_pokemontype_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): pokemon_v2_pokemontype_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontype\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemontype_by_pk(id: Int!): pokemon_v2_pokemontype\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\n  pokemon_v2_pokemontypepast(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): [pokemon_v2_pokemontypepast!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\n  pokemon_v2_pokemontypepast_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): pokemon_v2_pokemontypepast_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemontypepast_by_pk(id: Int!): pokemon_v2_pokemontypepast\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\n  pokemon_v2_region(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_region_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_region_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_region_bool_exp\\r\\n  ): [pokemon_v2_region!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\n  pokemon_v2_region_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_region_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_region_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_region_bool_exp\\r\\n  ): pokemon_v2_region_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_region\\\\\\\" using primary key columns\\r\\n  pokemon_v2_region_by_pk(id: Int!): pokemon_v2_region\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\n  pokemon_v2_regionname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): [pokemon_v2_regionname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\n  pokemon_v2_regionname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): pokemon_v2_regionname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_regionname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_regionname_by_pk(id: Int!): pokemon_v2_regionname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\n  pokemon_v2_stat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_stat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_stat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_stat_bool_exp\\r\\n  ): [pokemon_v2_stat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\n  pokemon_v2_stat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_stat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_stat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_stat_bool_exp\\r\\n  ): pokemon_v2_stat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_stat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_stat_by_pk(id: Int!): pokemon_v2_stat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\n  pokemon_v2_statname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): [pokemon_v2_statname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\n  pokemon_v2_statname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): pokemon_v2_statname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_statname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_statname_by_pk(id: Int!): pokemon_v2_statname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\n  pokemon_v2_supercontestcombo(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): [pokemon_v2_supercontestcombo!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\n  pokemon_v2_supercontestcombo_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): pokemon_v2_supercontestcombo_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\" using primary key columns\\r\\n  pokemon_v2_supercontestcombo_by_pk(id: Int!): pokemon_v2_supercontestcombo\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\n  pokemon_v2_supercontesteffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffect_bool_exp\\r\\n  ): [pokemon_v2_supercontesteffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\n  pokemon_v2_supercontesteffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffect_bool_exp\\r\\n  ): pokemon_v2_supercontesteffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_supercontesteffect_by_pk(id: Int!): pokemon_v2_supercontesteffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_supercontesteffectflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_supercontesteffectflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_supercontesteffectflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_supercontesteffectflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_supercontesteffectflavortext_by_pk(id: Int!): pokemon_v2_supercontesteffectflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\n  pokemon_v2_type(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): [pokemon_v2_type!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\n  pokemon_v2_type_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): pokemon_v2_type_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_type\\\\\\\" using primary key columns\\r\\n  pokemon_v2_type_by_pk(id: Int!): pokemon_v2_type\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\n  pokemon_v2_typeefficacy(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): [pokemon_v2_typeefficacy!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\n  pokemon_v2_typeefficacy_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): pokemon_v2_typeefficacy_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typeefficacy\\\\\\\" using primary key columns\\r\\n  pokemon_v2_typeefficacy_by_pk(id: Int!): pokemon_v2_typeefficacy\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\n  pokemon_v2_typegameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): [pokemon_v2_typegameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\n  pokemon_v2_typegameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): pokemon_v2_typegameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typegameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_typegameindex_by_pk(id: Int!): pokemon_v2_typegameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\n  pokemon_v2_typename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): [pokemon_v2_typename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\n  pokemon_v2_typename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): pokemon_v2_typename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_typename_by_pk(id: Int!): pokemon_v2_typename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\n  pokemon_v2_version(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_version_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_version_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_version_bool_exp\\r\\n  ): [pokemon_v2_version!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\n  pokemon_v2_version_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_version_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_version_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_version_bool_exp\\r\\n  ): pokemon_v2_version_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_version\\\\\\\" using primary key columns\\r\\n  pokemon_v2_version_by_pk(id: Int!): pokemon_v2_version\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\n  pokemon_v2_versiongroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroup_bool_exp\\r\\n  ): [pokemon_v2_versiongroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\n  pokemon_v2_versiongroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroup_bool_exp\\r\\n  ): pokemon_v2_versiongroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versiongroup_by_pk(id: Int!): pokemon_v2_versiongroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\n  pokemon_v2_versiongroupmovelearnmethod(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): [pokemon_v2_versiongroupmovelearnmethod!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\n  pokemon_v2_versiongroupmovelearnmethod_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): pokemon_v2_versiongroupmovelearnmethod_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versiongroupmovelearnmethod_by_pk(id: Int!): pokemon_v2_versiongroupmovelearnmethod\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\n  pokemon_v2_versiongroupregion(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): [pokemon_v2_versiongroupregion!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\n  pokemon_v2_versiongroupregion_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): pokemon_v2_versiongroupregion_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versiongroupregion_by_pk(id: Int!): pokemon_v2_versiongroupregion\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\n  pokemon_v2_versionname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): [pokemon_v2_versionname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\n  pokemon_v2_versionname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): pokemon_v2_versionname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versionname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versionname_by_pk(id: Int!): pokemon_v2_versionname\\r\\n}\\r\\n\\r\\ntype subscription_root {\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\n  pokemon_v2_ability(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_ability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_ability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_ability_bool_exp\\r\\n  ): [pokemon_v2_ability!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_ability\\\\\\\"\\r\\n  pokemon_v2_ability_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_ability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_ability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_ability_bool_exp\\r\\n  ): pokemon_v2_ability_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_ability\\\\\\\" using primary key columns\\r\\n  pokemon_v2_ability_by_pk(id: Int!): pokemon_v2_ability\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\n  pokemon_v2_abilitychange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): [pokemon_v2_abilitychange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilitychange\\\\\\\"\\r\\n  pokemon_v2_abilitychange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychange_bool_exp\\r\\n  ): pokemon_v2_abilitychange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilitychange_by_pk(id: Int!): pokemon_v2_abilitychange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilitychangeeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilitychangeeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilitychangeeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilitychangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilitychangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilitychangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilitychangeeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilitychangeeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilitychangeeffecttext_by_pk(id: Int!): pokemon_v2_abilitychangeeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilityeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): [pokemon_v2_abilityeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\"\\r\\n  pokemon_v2_abilityeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityeffecttext_bool_exp\\r\\n  ): pokemon_v2_abilityeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilityeffecttext_by_pk(id: Int!): pokemon_v2_abilityeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\n  pokemon_v2_abilityflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): [pokemon_v2_abilityflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\"\\r\\n  pokemon_v2_abilityflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityflavortext_bool_exp\\r\\n  ): pokemon_v2_abilityflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilityflavortext_by_pk(id: Int!): pokemon_v2_abilityflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\n  pokemon_v2_abilityname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): [pokemon_v2_abilityname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_abilityname\\\\\\\"\\r\\n  pokemon_v2_abilityname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_abilityname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_abilityname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_abilityname_bool_exp\\r\\n  ): pokemon_v2_abilityname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_abilityname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_abilityname_by_pk(id: Int!): pokemon_v2_abilityname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\n  pokemon_v2_berry(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): [pokemon_v2_berry!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berry\\\\\\\"\\r\\n  pokemon_v2_berry_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berry_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berry_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berry_bool_exp\\r\\n  ): pokemon_v2_berry_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berry\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berry_by_pk(id: Int!): pokemon_v2_berry\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\n  pokemon_v2_berryfirmness(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmness_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmness_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmness_bool_exp\\r\\n  ): [pokemon_v2_berryfirmness!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryfirmness\\\\\\\"\\r\\n  pokemon_v2_berryfirmness_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmness_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmness_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmness_bool_exp\\r\\n  ): pokemon_v2_berryfirmness_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmness\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryfirmness_by_pk(id: Int!): pokemon_v2_berryfirmness\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\n  pokemon_v2_berryfirmnessname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): [pokemon_v2_berryfirmnessname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\"\\r\\n  pokemon_v2_berryfirmnessname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryfirmnessname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryfirmnessname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryfirmnessname_bool_exp\\r\\n  ): pokemon_v2_berryfirmnessname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryfirmnessname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryfirmnessname_by_pk(id: Int!): pokemon_v2_berryfirmnessname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\n  pokemon_v2_berryflavor(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavor_bool_exp\\r\\n  ): [pokemon_v2_berryflavor!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryflavor\\\\\\\"\\r\\n  pokemon_v2_berryflavor_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavor_bool_exp\\r\\n  ): pokemon_v2_berryflavor_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavor\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryflavor_by_pk(id: Int!): pokemon_v2_berryflavor\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\n  pokemon_v2_berryflavormap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): [pokemon_v2_berryflavormap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryflavormap\\\\\\\"\\r\\n  pokemon_v2_berryflavormap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavormap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavormap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavormap_bool_exp\\r\\n  ): pokemon_v2_berryflavormap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavormap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryflavormap_by_pk(id: Int!): pokemon_v2_berryflavormap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\n  pokemon_v2_berryflavorname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): [pokemon_v2_berryflavorname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_berryflavorname\\\\\\\"\\r\\n  pokemon_v2_berryflavorname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_berryflavorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_berryflavorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_berryflavorname_bool_exp\\r\\n  ): pokemon_v2_berryflavorname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_berryflavorname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_berryflavorname_by_pk(id: Int!): pokemon_v2_berryflavorname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\n  pokemon_v2_characteristic(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristic_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristic_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristic_bool_exp\\r\\n  ): [pokemon_v2_characteristic!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_characteristic\\\\\\\"\\r\\n  pokemon_v2_characteristic_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristic_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristic_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristic_bool_exp\\r\\n  ): pokemon_v2_characteristic_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristic\\\\\\\" using primary key columns\\r\\n  pokemon_v2_characteristic_by_pk(id: Int!): pokemon_v2_characteristic\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\n  pokemon_v2_characteristicdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): [pokemon_v2_characteristicdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\"\\r\\n  pokemon_v2_characteristicdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_characteristicdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_characteristicdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_characteristicdescription_bool_exp\\r\\n  ): pokemon_v2_characteristicdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_characteristicdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_characteristicdescription_by_pk(id: Int!): pokemon_v2_characteristicdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\n  pokemon_v2_contestcombo(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): [pokemon_v2_contestcombo!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contestcombo\\\\\\\"\\r\\n  pokemon_v2_contestcombo_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contestcombo_bool_exp\\r\\n  ): pokemon_v2_contestcombo_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contestcombo\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contestcombo_by_pk(id: Int!): pokemon_v2_contestcombo\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\n  pokemon_v2_contesteffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffect_bool_exp\\r\\n  ): [pokemon_v2_contesteffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesteffect\\\\\\\"\\r\\n  pokemon_v2_contesteffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffect_bool_exp\\r\\n  ): pokemon_v2_contesteffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesteffect_by_pk(id: Int!): pokemon_v2_contesteffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_contesteffecteffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_contesteffecteffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_contesteffecteffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_contesteffecteffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffecteffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesteffecteffecttext_by_pk(id: Int!): pokemon_v2_contesteffecteffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_contesteffectflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_contesteffectflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_contesteffectflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_contesteffectflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesteffectflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesteffectflavortext_by_pk(id: Int!): pokemon_v2_contesteffectflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\n  pokemon_v2_contesttype(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttype_bool_exp\\r\\n  ): [pokemon_v2_contesttype!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesttype\\\\\\\"\\r\\n  pokemon_v2_contesttype_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttype_bool_exp\\r\\n  ): pokemon_v2_contesttype_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttype\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesttype_by_pk(id: Int!): pokemon_v2_contesttype\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\n  pokemon_v2_contesttypename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): [pokemon_v2_contesttypename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_contesttypename\\\\\\\"\\r\\n  pokemon_v2_contesttypename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_contesttypename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_contesttypename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_contesttypename_bool_exp\\r\\n  ): pokemon_v2_contesttypename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_contesttypename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_contesttypename_by_pk(id: Int!): pokemon_v2_contesttypename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\n  pokemon_v2_egggroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroup_bool_exp\\r\\n  ): [pokemon_v2_egggroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_egggroup\\\\\\\"\\r\\n  pokemon_v2_egggroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroup_bool_exp\\r\\n  ): pokemon_v2_egggroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_egggroup_by_pk(id: Int!): pokemon_v2_egggroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\n  pokemon_v2_egggroupname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): [pokemon_v2_egggroupname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_egggroupname\\\\\\\"\\r\\n  pokemon_v2_egggroupname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_egggroupname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_egggroupname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_egggroupname_bool_exp\\r\\n  ): pokemon_v2_egggroupname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_egggroupname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_egggroupname_by_pk(id: Int!): pokemon_v2_egggroupname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\n  pokemon_v2_encounter(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): [pokemon_v2_encounter!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounter\\\\\\\"\\r\\n  pokemon_v2_encounter_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounter_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounter_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounter_bool_exp\\r\\n  ): pokemon_v2_encounter_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounter\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounter_by_pk(id: Int!): pokemon_v2_encounter\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\n  pokemon_v2_encountercondition(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountercondition_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountercondition_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountercondition_bool_exp\\r\\n  ): [pokemon_v2_encountercondition!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encountercondition\\\\\\\"\\r\\n  pokemon_v2_encountercondition_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountercondition_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountercondition_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountercondition_bool_exp\\r\\n  ): pokemon_v2_encountercondition_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountercondition\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encountercondition_by_pk(id: Int!): pokemon_v2_encountercondition\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\n  pokemon_v2_encounterconditionname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\"\\r\\n  pokemon_v2_encounterconditionname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionname_bool_exp\\r\\n  ): pokemon_v2_encounterconditionname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionname_by_pk(id: Int!): pokemon_v2_encounterconditionname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvalue(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvalue_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvalue_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvalue!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvalue_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvalue_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvalue_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvalue_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvalue_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvalue\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionvalue_by_pk(id: Int!): pokemon_v2_encounterconditionvalue\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluemap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluemap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluemap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluemap_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluemap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluemap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionvaluemap_by_pk(id: Int!): pokemon_v2_encounterconditionvaluemap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): [pokemon_v2_encounterconditionvaluename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\"\\r\\n  pokemon_v2_encounterconditionvaluename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterconditionvaluename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterconditionvaluename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterconditionvaluename_bool_exp\\r\\n  ): pokemon_v2_encounterconditionvaluename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterconditionvaluename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterconditionvaluename_by_pk(id: Int!): pokemon_v2_encounterconditionvaluename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\n  pokemon_v2_encountermethod(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethod_bool_exp\\r\\n  ): [pokemon_v2_encountermethod!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encountermethod\\\\\\\"\\r\\n  pokemon_v2_encountermethod_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethod_bool_exp\\r\\n  ): pokemon_v2_encountermethod_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethod\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encountermethod_by_pk(id: Int!): pokemon_v2_encountermethod\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\n  pokemon_v2_encountermethodname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): [pokemon_v2_encountermethodname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encountermethodname\\\\\\\"\\r\\n  pokemon_v2_encountermethodname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encountermethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encountermethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encountermethodname_bool_exp\\r\\n  ): pokemon_v2_encountermethodname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encountermethodname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encountermethodname_by_pk(id: Int!): pokemon_v2_encountermethodname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\n  pokemon_v2_encounterslot(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): [pokemon_v2_encounterslot!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_encounterslot\\\\\\\"\\r\\n  pokemon_v2_encounterslot_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_encounterslot_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_encounterslot_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_encounterslot_bool_exp\\r\\n  ): pokemon_v2_encounterslot_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_encounterslot\\\\\\\" using primary key columns\\r\\n  pokemon_v2_encounterslot_by_pk(id: Int!): pokemon_v2_encounterslot\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\n  pokemon_v2_evolutionchain(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutionchain_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutionchain_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutionchain_bool_exp\\r\\n  ): [pokemon_v2_evolutionchain!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_evolutionchain\\\\\\\"\\r\\n  pokemon_v2_evolutionchain_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutionchain_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutionchain_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutionchain_bool_exp\\r\\n  ): pokemon_v2_evolutionchain_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutionchain\\\\\\\" using primary key columns\\r\\n  pokemon_v2_evolutionchain_by_pk(id: Int!): pokemon_v2_evolutionchain\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\n  pokemon_v2_evolutiontrigger(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontrigger_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontrigger_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontrigger_bool_exp\\r\\n  ): [pokemon_v2_evolutiontrigger!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\"\\r\\n  pokemon_v2_evolutiontrigger_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontrigger_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontrigger_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontrigger_bool_exp\\r\\n  ): pokemon_v2_evolutiontrigger_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontrigger\\\\\\\" using primary key columns\\r\\n  pokemon_v2_evolutiontrigger_by_pk(id: Int!): pokemon_v2_evolutiontrigger\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\n  pokemon_v2_evolutiontriggername(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): [pokemon_v2_evolutiontriggername!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\"\\r\\n  pokemon_v2_evolutiontriggername_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_evolutiontriggername_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_evolutiontriggername_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_evolutiontriggername_bool_exp\\r\\n  ): pokemon_v2_evolutiontriggername_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_evolutiontriggername\\\\\\\" using primary key columns\\r\\n  pokemon_v2_evolutiontriggername_by_pk(id: Int!): pokemon_v2_evolutiontriggername\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\n  pokemon_v2_experience(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_experience_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_experience_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_experience_bool_exp\\r\\n  ): [pokemon_v2_experience!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_experience\\\\\\\"\\r\\n  pokemon_v2_experience_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_experience_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_experience_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_experience_bool_exp\\r\\n  ): pokemon_v2_experience_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_experience\\\\\\\" using primary key columns\\r\\n  pokemon_v2_experience_by_pk(id: Int!): pokemon_v2_experience\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\n  pokemon_v2_gender(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_gender_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_gender_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_gender_bool_exp\\r\\n  ): [pokemon_v2_gender!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_gender\\\\\\\"\\r\\n  pokemon_v2_gender_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_gender_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_gender_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_gender_bool_exp\\r\\n  ): pokemon_v2_gender_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_gender\\\\\\\" using primary key columns\\r\\n  pokemon_v2_gender_by_pk(id: Int!): pokemon_v2_gender\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\n  pokemon_v2_generation(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generation_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generation_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generation_bool_exp\\r\\n  ): [pokemon_v2_generation!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_generation\\\\\\\"\\r\\n  pokemon_v2_generation_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generation_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generation_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generation_bool_exp\\r\\n  ): pokemon_v2_generation_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generation\\\\\\\" using primary key columns\\r\\n  pokemon_v2_generation_by_pk(id: Int!): pokemon_v2_generation\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\n  pokemon_v2_generationname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): [pokemon_v2_generationname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_generationname\\\\\\\"\\r\\n  pokemon_v2_generationname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_generationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_generationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_generationname_bool_exp\\r\\n  ): pokemon_v2_generationname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_generationname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_generationname_by_pk(id: Int!): pokemon_v2_generationname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\n  pokemon_v2_growthrate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthrate_bool_exp\\r\\n  ): [pokemon_v2_growthrate!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_growthrate\\\\\\\"\\r\\n  pokemon_v2_growthrate_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthrate_bool_exp\\r\\n  ): pokemon_v2_growthrate_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthrate\\\\\\\" using primary key columns\\r\\n  pokemon_v2_growthrate_by_pk(id: Int!): pokemon_v2_growthrate\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\n  pokemon_v2_growthratedescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): [pokemon_v2_growthratedescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_growthratedescription\\\\\\\"\\r\\n  pokemon_v2_growthratedescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_growthratedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_growthratedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_growthratedescription_bool_exp\\r\\n  ): pokemon_v2_growthratedescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_growthratedescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_growthratedescription_by_pk(id: Int!): pokemon_v2_growthratedescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\n  pokemon_v2_item(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): [pokemon_v2_item!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_item\\\\\\\"\\r\\n  pokemon_v2_item_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_item_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_item_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_item_bool_exp\\r\\n  ): pokemon_v2_item_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_item\\\\\\\" using primary key columns\\r\\n  pokemon_v2_item_by_pk(id: Int!): pokemon_v2_item\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\n  pokemon_v2_itemattribute(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattribute_bool_exp\\r\\n  ): [pokemon_v2_itemattribute!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattribute\\\\\\\"\\r\\n  pokemon_v2_itemattribute_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattribute_bool_exp\\r\\n  ): pokemon_v2_itemattribute_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattribute\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattribute_by_pk(id: Int!): pokemon_v2_itemattribute\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\n  pokemon_v2_itemattributedescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): [pokemon_v2_itemattributedescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\"\\r\\n  pokemon_v2_itemattributedescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributedescription_bool_exp\\r\\n  ): pokemon_v2_itemattributedescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributedescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattributedescription_by_pk(id: Int!): pokemon_v2_itemattributedescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\n  pokemon_v2_itemattributemap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): [pokemon_v2_itemattributemap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattributemap\\\\\\\"\\r\\n  pokemon_v2_itemattributemap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributemap_bool_exp\\r\\n  ): pokemon_v2_itemattributemap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributemap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattributemap_by_pk(id: Int!): pokemon_v2_itemattributemap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\n  pokemon_v2_itemattributename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): [pokemon_v2_itemattributename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemattributename\\\\\\\"\\r\\n  pokemon_v2_itemattributename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemattributename_bool_exp\\r\\n  ): pokemon_v2_itemattributename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemattributename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemattributename_by_pk(id: Int!): pokemon_v2_itemattributename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\n  pokemon_v2_itemcategory(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategory_bool_exp\\r\\n  ): [pokemon_v2_itemcategory!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemcategory\\\\\\\"\\r\\n  pokemon_v2_itemcategory_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategory_bool_exp\\r\\n  ): pokemon_v2_itemcategory_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategory\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemcategory_by_pk(id: Int!): pokemon_v2_itemcategory\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\n  pokemon_v2_itemcategoryname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): [pokemon_v2_itemcategoryname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\"\\r\\n  pokemon_v2_itemcategoryname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemcategoryname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemcategoryname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemcategoryname_bool_exp\\r\\n  ): pokemon_v2_itemcategoryname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemcategoryname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemcategoryname_by_pk(id: Int!): pokemon_v2_itemcategoryname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\n  pokemon_v2_itemeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\"\\r\\n  pokemon_v2_itemeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemeffecttext_bool_exp\\r\\n  ): pokemon_v2_itemeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemeffecttext_by_pk(id: Int!): pokemon_v2_itemeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\n  pokemon_v2_itemflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): [pokemon_v2_itemflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemflavortext\\\\\\\"\\r\\n  pokemon_v2_itemflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflavortext_bool_exp\\r\\n  ): pokemon_v2_itemflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemflavortext_by_pk(id: Int!): pokemon_v2_itemflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\n  pokemon_v2_itemflingeffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffect_bool_exp\\r\\n  ): [pokemon_v2_itemflingeffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\"\\r\\n  pokemon_v2_itemflingeffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffect_bool_exp\\r\\n  ): pokemon_v2_itemflingeffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemflingeffect_by_pk(id: Int!): pokemon_v2_itemflingeffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_itemflingeffecteffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_itemflingeffecteffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_itemflingeffecteffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemflingeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemflingeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemflingeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_itemflingeffecteffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemflingeffecteffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemflingeffecteffecttext_by_pk(id: Int!): pokemon_v2_itemflingeffecteffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\n  pokemon_v2_itemgameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): [pokemon_v2_itemgameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemgameindex\\\\\\\"\\r\\n  pokemon_v2_itemgameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemgameindex_bool_exp\\r\\n  ): pokemon_v2_itemgameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemgameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemgameindex_by_pk(id: Int!): pokemon_v2_itemgameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\n  pokemon_v2_itemname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): [pokemon_v2_itemname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itemname\\\\\\\"\\r\\n  pokemon_v2_itemname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemname_bool_exp\\r\\n  ): pokemon_v2_itemname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemname_by_pk(id: Int!): pokemon_v2_itemname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\n  pokemon_v2_itempocket(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocket_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocket_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocket_bool_exp\\r\\n  ): [pokemon_v2_itempocket!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itempocket\\\\\\\"\\r\\n  pokemon_v2_itempocket_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocket_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocket_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocket_bool_exp\\r\\n  ): pokemon_v2_itempocket_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocket\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itempocket_by_pk(id: Int!): pokemon_v2_itempocket\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\n  pokemon_v2_itempocketname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): [pokemon_v2_itempocketname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_itempocketname\\\\\\\"\\r\\n  pokemon_v2_itempocketname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itempocketname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itempocketname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itempocketname_bool_exp\\r\\n  ): pokemon_v2_itempocketname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itempocketname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itempocketname_by_pk(id: Int!): pokemon_v2_itempocketname\\r\\n  # An array relationship\\r\\n  pokemon_v2_itemsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemsprites_bool_exp\\r\\n  ): [pokemon_v2_itemsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_itemsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_itemsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_itemsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_itemsprites_bool_exp\\r\\n  ): pokemon_v2_itemsprites_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_itemsprites\\\\\\\" using primary key columns\\r\\n  pokemon_v2_itemsprites_by_pk(id: Int!): pokemon_v2_itemsprites\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\n  pokemon_v2_language(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_language_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_language_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_language_bool_exp\\r\\n  ): [pokemon_v2_language!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_language\\\\\\\"\\r\\n  pokemon_v2_language_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_language_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_language_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_language_bool_exp\\r\\n  ): pokemon_v2_language_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_language\\\\\\\" using primary key columns\\r\\n  pokemon_v2_language_by_pk(id: Int!): pokemon_v2_language\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\n  pokemon_v2_languagename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): [pokemon_v2_languagename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_languagename\\\\\\\"\\r\\n  pokemon_v2_languagename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_languagename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_languagename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_languagename_bool_exp\\r\\n  ): pokemon_v2_languagename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_languagename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_languagename_by_pk(id: Int!): pokemon_v2_languagename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\n  pokemon_v2_location(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_location_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_location_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_location_bool_exp\\r\\n  ): [pokemon_v2_location!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_location\\\\\\\"\\r\\n  pokemon_v2_location_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_location_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_location_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_location_bool_exp\\r\\n  ): pokemon_v2_location_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_location\\\\\\\" using primary key columns\\r\\n  pokemon_v2_location_by_pk(id: Int!): pokemon_v2_location\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\n  pokemon_v2_locationarea(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationarea_bool_exp\\r\\n  ): [pokemon_v2_locationarea!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationarea\\\\\\\"\\r\\n  pokemon_v2_locationarea_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationarea_bool_exp\\r\\n  ): pokemon_v2_locationarea_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationarea\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationarea_by_pk(id: Int!): pokemon_v2_locationarea\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\n  pokemon_v2_locationareaencounterrate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): [pokemon_v2_locationareaencounterrate!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\"\\r\\n  pokemon_v2_locationareaencounterrate_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaencounterrate_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaencounterrate_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaencounterrate_bool_exp\\r\\n  ): pokemon_v2_locationareaencounterrate_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaencounterrate\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationareaencounterrate_by_pk(id: Int!): pokemon_v2_locationareaencounterrate\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\n  pokemon_v2_locationareaname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): [pokemon_v2_locationareaname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationareaname\\\\\\\"\\r\\n  pokemon_v2_locationareaname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationareaname_bool_exp\\r\\n  ): pokemon_v2_locationareaname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationareaname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationareaname_by_pk(id: Int!): pokemon_v2_locationareaname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\n  pokemon_v2_locationgameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): [pokemon_v2_locationgameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationgameindex\\\\\\\"\\r\\n  pokemon_v2_locationgameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationgameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationgameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationgameindex_bool_exp\\r\\n  ): pokemon_v2_locationgameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationgameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationgameindex_by_pk(id: Int!): pokemon_v2_locationgameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\n  pokemon_v2_locationname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): [pokemon_v2_locationname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_locationname\\\\\\\"\\r\\n  pokemon_v2_locationname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_locationname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_locationname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_locationname_bool_exp\\r\\n  ): pokemon_v2_locationname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_locationname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_locationname_by_pk(id: Int!): pokemon_v2_locationname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\n  pokemon_v2_machine(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): [pokemon_v2_machine!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_machine\\\\\\\"\\r\\n  pokemon_v2_machine_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_machine_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_machine_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_machine_bool_exp\\r\\n  ): pokemon_v2_machine_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_machine\\\\\\\" using primary key columns\\r\\n  pokemon_v2_machine_by_pk(id: Int!): pokemon_v2_machine\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\n  pokemon_v2_move(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): [pokemon_v2_move!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_move\\\\\\\"\\r\\n  pokemon_v2_move_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_move_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_move_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_move_bool_exp\\r\\n  ): pokemon_v2_move_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_move\\\\\\\" using primary key columns\\r\\n  pokemon_v2_move_by_pk(id: Int!): pokemon_v2_move\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\n  pokemon_v2_moveattribute(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattribute_bool_exp\\r\\n  ): [pokemon_v2_moveattribute!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattribute\\\\\\\"\\r\\n  pokemon_v2_moveattribute_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattribute_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattribute_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattribute_bool_exp\\r\\n  ): pokemon_v2_moveattribute_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattribute\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattribute_by_pk(id: Int!): pokemon_v2_moveattribute\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\n  pokemon_v2_moveattributedescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): [pokemon_v2_moveattributedescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\"\\r\\n  pokemon_v2_moveattributedescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributedescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributedescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributedescription_bool_exp\\r\\n  ): pokemon_v2_moveattributedescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributedescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattributedescription_by_pk(id: Int!): pokemon_v2_moveattributedescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\n  pokemon_v2_moveattributemap(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): [pokemon_v2_moveattributemap!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattributemap\\\\\\\"\\r\\n  pokemon_v2_moveattributemap_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributemap_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributemap_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributemap_bool_exp\\r\\n  ): pokemon_v2_moveattributemap_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributemap\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattributemap_by_pk(id: Int!): pokemon_v2_moveattributemap\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\n  pokemon_v2_moveattributename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): [pokemon_v2_moveattributename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveattributename\\\\\\\"\\r\\n  pokemon_v2_moveattributename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveattributename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveattributename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveattributename_bool_exp\\r\\n  ): pokemon_v2_moveattributename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveattributename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveattributename_by_pk(id: Int!): pokemon_v2_moveattributename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\n  pokemon_v2_movebattlestyle(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestyle_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestyle_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestyle_bool_exp\\r\\n  ): [pokemon_v2_movebattlestyle!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\"\\r\\n  pokemon_v2_movebattlestyle_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestyle_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestyle_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestyle_bool_exp\\r\\n  ): pokemon_v2_movebattlestyle_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestyle\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movebattlestyle_by_pk(id: Int!): pokemon_v2_movebattlestyle\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\n  pokemon_v2_movebattlestylename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): [pokemon_v2_movebattlestylename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\"\\r\\n  pokemon_v2_movebattlestylename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movebattlestylename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movebattlestylename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movebattlestylename_bool_exp\\r\\n  ): pokemon_v2_movebattlestylename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movebattlestylename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movebattlestylename_by_pk(id: Int!): pokemon_v2_movebattlestylename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\n  pokemon_v2_movechange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): [pokemon_v2_movechange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movechange\\\\\\\"\\r\\n  pokemon_v2_movechange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movechange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movechange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movechange_bool_exp\\r\\n  ): pokemon_v2_movechange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movechange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movechange_by_pk(id: Int!): pokemon_v2_movechange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\n  pokemon_v2_movedamageclass(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclass_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclass_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclass_bool_exp\\r\\n  ): [pokemon_v2_movedamageclass!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movedamageclass\\\\\\\"\\r\\n  pokemon_v2_movedamageclass_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclass_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclass_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclass_bool_exp\\r\\n  ): pokemon_v2_movedamageclass_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclass\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movedamageclass_by_pk(id: Int!): pokemon_v2_movedamageclass\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\n  pokemon_v2_movedamageclassdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\"\\r\\n  pokemon_v2_movedamageclassdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassdescription_bool_exp\\r\\n  ): pokemon_v2_movedamageclassdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movedamageclassdescription_by_pk(id: Int!): pokemon_v2_movedamageclassdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\n  pokemon_v2_movedamageclassname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): [pokemon_v2_movedamageclassname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\"\\r\\n  pokemon_v2_movedamageclassname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movedamageclassname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movedamageclassname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movedamageclassname_bool_exp\\r\\n  ): pokemon_v2_movedamageclassname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movedamageclassname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movedamageclassname_by_pk(id: Int!): pokemon_v2_movedamageclassname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\n  pokemon_v2_moveeffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffect_bool_exp\\r\\n  ): [pokemon_v2_moveeffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffect\\\\\\\"\\r\\n  pokemon_v2_moveeffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffect_bool_exp\\r\\n  ): pokemon_v2_moveeffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffect_by_pk(id: Int!): pokemon_v2_moveeffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\n  pokemon_v2_moveeffectchange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\"\\r\\n  pokemon_v2_moveeffectchange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchange_bool_exp\\r\\n  ): pokemon_v2_moveeffectchange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffectchange_by_pk(id: Int!): pokemon_v2_moveeffectchange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffectchangeeffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffectchangeeffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffectchangeeffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffectchangeeffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffectchangeeffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffectchangeeffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffectchangeeffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffectchangeeffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffectchangeeffecttext_by_pk(id: Int!): pokemon_v2_moveeffectchangeeffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffecteffecttext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): [pokemon_v2_moveeffecteffecttext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\"\\r\\n  pokemon_v2_moveeffecteffecttext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveeffecteffecttext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveeffecteffecttext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveeffecteffecttext_bool_exp\\r\\n  ): pokemon_v2_moveeffecteffecttext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveeffecteffecttext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveeffecteffecttext_by_pk(id: Int!): pokemon_v2_moveeffecteffecttext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\n  pokemon_v2_moveflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): [pokemon_v2_moveflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_moveflavortext\\\\\\\"\\r\\n  pokemon_v2_moveflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_moveflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_moveflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_moveflavortext_bool_exp\\r\\n  ): pokemon_v2_moveflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_moveflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_moveflavortext_by_pk(id: Int!): pokemon_v2_moveflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\n  pokemon_v2_movelearnmethod(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethod_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethod!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\"\\r\\n  pokemon_v2_movelearnmethod_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethod_bool_exp\\r\\n  ): pokemon_v2_movelearnmethod_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethod\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movelearnmethod_by_pk(id: Int!): pokemon_v2_movelearnmethod\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\n  pokemon_v2_movelearnmethoddescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethoddescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\"\\r\\n  pokemon_v2_movelearnmethoddescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethoddescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethoddescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethoddescription_bool_exp\\r\\n  ): pokemon_v2_movelearnmethoddescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethoddescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movelearnmethoddescription_by_pk(id: Int!): pokemon_v2_movelearnmethoddescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\n  pokemon_v2_movelearnmethodname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): [pokemon_v2_movelearnmethodname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\"\\r\\n  pokemon_v2_movelearnmethodname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movelearnmethodname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movelearnmethodname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movelearnmethodname_bool_exp\\r\\n  ): pokemon_v2_movelearnmethodname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movelearnmethodname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movelearnmethodname_by_pk(id: Int!): pokemon_v2_movelearnmethodname\\r\\n  # An array relationship\\r\\n  pokemon_v2_movemeta(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): [pokemon_v2_movemeta!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_movemeta_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemeta_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemeta_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemeta_bool_exp\\r\\n  ): pokemon_v2_movemeta_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemeta\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemeta_by_pk(id: Int!): pokemon_v2_movemeta\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\n  pokemon_v2_movemetaailment(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailment_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailment_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailment_bool_exp\\r\\n  ): [pokemon_v2_movemetaailment!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetaailment\\\\\\\"\\r\\n  pokemon_v2_movemetaailment_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailment_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailment_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailment_bool_exp\\r\\n  ): pokemon_v2_movemetaailment_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailment\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetaailment_by_pk(id: Int!): pokemon_v2_movemetaailment\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\n  pokemon_v2_movemetaailmentname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): [pokemon_v2_movemetaailmentname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\"\\r\\n  pokemon_v2_movemetaailmentname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetaailmentname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetaailmentname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetaailmentname_bool_exp\\r\\n  ): pokemon_v2_movemetaailmentname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetaailmentname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetaailmentname_by_pk(id: Int!): pokemon_v2_movemetaailmentname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\n  pokemon_v2_movemetacategory(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategory_bool_exp\\r\\n  ): [pokemon_v2_movemetacategory!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetacategory\\\\\\\"\\r\\n  pokemon_v2_movemetacategory_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategory_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategory_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategory_bool_exp\\r\\n  ): pokemon_v2_movemetacategory_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategory\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetacategory_by_pk(id: Int!): pokemon_v2_movemetacategory\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\n  pokemon_v2_movemetacategorydescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): [pokemon_v2_movemetacategorydescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\"\\r\\n  pokemon_v2_movemetacategorydescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetacategorydescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetacategorydescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetacategorydescription_bool_exp\\r\\n  ): pokemon_v2_movemetacategorydescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetacategorydescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetacategorydescription_by_pk(id: Int!): pokemon_v2_movemetacategorydescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\n  pokemon_v2_movemetastatchange(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): [pokemon_v2_movemetastatchange!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\"\\r\\n  pokemon_v2_movemetastatchange_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movemetastatchange_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movemetastatchange_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movemetastatchange_bool_exp\\r\\n  ): pokemon_v2_movemetastatchange_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movemetastatchange\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movemetastatchange_by_pk(id: Int!): pokemon_v2_movemetastatchange\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\n  pokemon_v2_movename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): [pokemon_v2_movename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movename\\\\\\\"\\r\\n  pokemon_v2_movename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movename_bool_exp\\r\\n  ): pokemon_v2_movename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movename_by_pk(id: Int!): pokemon_v2_movename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\n  pokemon_v2_movetarget(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetarget_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetarget_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetarget_bool_exp\\r\\n  ): [pokemon_v2_movetarget!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movetarget\\\\\\\"\\r\\n  pokemon_v2_movetarget_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetarget_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetarget_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetarget_bool_exp\\r\\n  ): pokemon_v2_movetarget_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetarget\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movetarget_by_pk(id: Int!): pokemon_v2_movetarget\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\n  pokemon_v2_movetargetdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): [pokemon_v2_movetargetdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\"\\r\\n  pokemon_v2_movetargetdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetdescription_bool_exp\\r\\n  ): pokemon_v2_movetargetdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movetargetdescription_by_pk(id: Int!): pokemon_v2_movetargetdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\n  pokemon_v2_movetargetname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): [pokemon_v2_movetargetname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_movetargetname\\\\\\\"\\r\\n  pokemon_v2_movetargetname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_movetargetname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_movetargetname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_movetargetname_bool_exp\\r\\n  ): pokemon_v2_movetargetname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_movetargetname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_movetargetname_by_pk(id: Int!): pokemon_v2_movetargetname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\n  pokemon_v2_nature(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): [pokemon_v2_nature!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_nature\\\\\\\"\\r\\n  pokemon_v2_nature_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_nature_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_nature_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_nature_bool_exp\\r\\n  ): pokemon_v2_nature_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_nature\\\\\\\" using primary key columns\\r\\n  pokemon_v2_nature_by_pk(id: Int!): pokemon_v2_nature\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\n  pokemon_v2_naturebattlestylepreference(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): [pokemon_v2_naturebattlestylepreference!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\"\\r\\n  pokemon_v2_naturebattlestylepreference_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturebattlestylepreference_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturebattlestylepreference_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturebattlestylepreference_bool_exp\\r\\n  ): pokemon_v2_naturebattlestylepreference_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturebattlestylepreference\\\\\\\" using primary key columns\\r\\n  pokemon_v2_naturebattlestylepreference_by_pk(id: Int!): pokemon_v2_naturebattlestylepreference\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\n  pokemon_v2_naturename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): [pokemon_v2_naturename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_naturename\\\\\\\"\\r\\n  pokemon_v2_naturename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturename_bool_exp\\r\\n  ): pokemon_v2_naturename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_naturename_by_pk(id: Int!): pokemon_v2_naturename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_naturepokeathlonstat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): [pokemon_v2_naturepokeathlonstat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_naturepokeathlonstat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_naturepokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_naturepokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_naturepokeathlonstat_bool_exp\\r\\n  ): pokemon_v2_naturepokeathlonstat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_naturepokeathlonstat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_naturepokeathlonstat_by_pk(id: Int!): pokemon_v2_naturepokeathlonstat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\n  pokemon_v2_palpark(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): [pokemon_v2_palpark!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_palpark\\\\\\\"\\r\\n  pokemon_v2_palpark_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palpark_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palpark_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palpark_bool_exp\\r\\n  ): pokemon_v2_palpark_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palpark\\\\\\\" using primary key columns\\r\\n  pokemon_v2_palpark_by_pk(id: Int!): pokemon_v2_palpark\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\n  pokemon_v2_palparkarea(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkarea_bool_exp\\r\\n  ): [pokemon_v2_palparkarea!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_palparkarea\\\\\\\"\\r\\n  pokemon_v2_palparkarea_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkarea_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkarea_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkarea_bool_exp\\r\\n  ): pokemon_v2_palparkarea_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkarea\\\\\\\" using primary key columns\\r\\n  pokemon_v2_palparkarea_by_pk(id: Int!): pokemon_v2_palparkarea\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\n  pokemon_v2_palparkareaname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): [pokemon_v2_palparkareaname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_palparkareaname\\\\\\\"\\r\\n  pokemon_v2_palparkareaname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_palparkareaname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_palparkareaname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_palparkareaname_bool_exp\\r\\n  ): pokemon_v2_palparkareaname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_palparkareaname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_palparkareaname_by_pk(id: Int!): pokemon_v2_palparkareaname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstat_bool_exp\\r\\n  ): [pokemon_v2_pokeathlonstat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstat_bool_exp\\r\\n  ): pokemon_v2_pokeathlonstat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokeathlonstat_by_pk(id: Int!): pokemon_v2_pokeathlonstat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstatname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): [pokemon_v2_pokeathlonstatname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\"\\r\\n  pokemon_v2_pokeathlonstatname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokeathlonstatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokeathlonstatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokeathlonstatname_bool_exp\\r\\n  ): pokemon_v2_pokeathlonstatname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokeathlonstatname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokeathlonstatname_by_pk(id: Int!): pokemon_v2_pokeathlonstatname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\n  pokemon_v2_pokedex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedex_bool_exp\\r\\n  ): [pokemon_v2_pokedex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedex\\\\\\\"\\r\\n  pokemon_v2_pokedex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedex_bool_exp\\r\\n  ): pokemon_v2_pokedex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedex_by_pk(id: Int!): pokemon_v2_pokedex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\n  pokemon_v2_pokedexdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): [pokemon_v2_pokedexdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\"\\r\\n  pokemon_v2_pokedexdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexdescription_bool_exp\\r\\n  ): pokemon_v2_pokedexdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedexdescription_by_pk(id: Int!): pokemon_v2_pokedexdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\n  pokemon_v2_pokedexname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): [pokemon_v2_pokedexname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedexname\\\\\\\"\\r\\n  pokemon_v2_pokedexname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexname_bool_exp\\r\\n  ): pokemon_v2_pokedexname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedexname_by_pk(id: Int!): pokemon_v2_pokedexname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\n  pokemon_v2_pokedexversiongroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): [pokemon_v2_pokedexversiongroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\"\\r\\n  pokemon_v2_pokedexversiongroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokedexversiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokedexversiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokedexversiongroup_bool_exp\\r\\n  ): pokemon_v2_pokedexversiongroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokedexversiongroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokedexversiongroup_by_pk(id: Int!): pokemon_v2_pokedexversiongroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\n  pokemon_v2_pokemon(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemon_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemon_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemon_bool_exp\\r\\n  ): [pokemon_v2_pokemon!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemon\\\\\\\"\\r\\n  pokemon_v2_pokemon_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemon_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemon_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemon_bool_exp\\r\\n  ): pokemon_v2_pokemon_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemon\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemon_by_pk(id: Int!): pokemon_v2_pokemon\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\n  pokemon_v2_pokemonability(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): [pokemon_v2_pokemonability!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonability\\\\\\\"\\r\\n  pokemon_v2_pokemonability_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonability_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonability_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonability_bool_exp\\r\\n  ): pokemon_v2_pokemonability_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonability\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonability_by_pk(id: Int!): pokemon_v2_pokemonability\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\n  pokemon_v2_pokemoncolor(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolor_bool_exp\\r\\n  ): [pokemon_v2_pokemoncolor!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\"\\r\\n  pokemon_v2_pokemoncolor_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolor_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolor_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolor_bool_exp\\r\\n  ): pokemon_v2_pokemoncolor_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolor\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemoncolor_by_pk(id: Int!): pokemon_v2_pokemoncolor\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\n  pokemon_v2_pokemoncolorname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): [pokemon_v2_pokemoncolorname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\"\\r\\n  pokemon_v2_pokemoncolorname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemoncolorname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemoncolorname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemoncolorname_bool_exp\\r\\n  ): pokemon_v2_pokemoncolorname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemoncolorname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemoncolorname_by_pk(id: Int!): pokemon_v2_pokemoncolorname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\n  pokemon_v2_pokemondexnumber(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): [pokemon_v2_pokemondexnumber!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\"\\r\\n  pokemon_v2_pokemondexnumber_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemondexnumber_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemondexnumber_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemondexnumber_bool_exp\\r\\n  ): pokemon_v2_pokemondexnumber_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemondexnumber\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemondexnumber_by_pk(id: Int!): pokemon_v2_pokemondexnumber\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\n  pokemon_v2_pokemonegggroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): [pokemon_v2_pokemonegggroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\"\\r\\n  pokemon_v2_pokemonegggroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonegggroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonegggroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonegggroup_bool_exp\\r\\n  ): pokemon_v2_pokemonegggroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonegggroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonegggroup_by_pk(id: Int!): pokemon_v2_pokemonegggroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\n  pokemon_v2_pokemonevolution(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): [pokemon_v2_pokemonevolution!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\"\\r\\n  pokemon_v2_pokemonevolution_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonevolution_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonevolution_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonevolution_bool_exp\\r\\n  ): pokemon_v2_pokemonevolution_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonevolution\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonevolution_by_pk(id: Int!): pokemon_v2_pokemonevolution\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\n  pokemon_v2_pokemonform(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): [pokemon_v2_pokemonform!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonform\\\\\\\"\\r\\n  pokemon_v2_pokemonform_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonform_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonform_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonform_bool_exp\\r\\n  ): pokemon_v2_pokemonform_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonform\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonform_by_pk(id: Int!): pokemon_v2_pokemonform\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\n  pokemon_v2_pokemonformgeneration(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): [pokemon_v2_pokemonformgeneration!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\"\\r\\n  pokemon_v2_pokemonformgeneration_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformgeneration_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformgeneration_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformgeneration_bool_exp\\r\\n  ): pokemon_v2_pokemonformgeneration_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformgeneration\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformgeneration_by_pk(id: Int!): pokemon_v2_pokemonformgeneration\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\n  pokemon_v2_pokemonformname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): [pokemon_v2_pokemonformname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonformname\\\\\\\"\\r\\n  pokemon_v2_pokemonformname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformname_bool_exp\\r\\n  ): pokemon_v2_pokemonformname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformname_by_pk(id: Int!): pokemon_v2_pokemonformname\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonformsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  ): [pokemon_v2_pokemonformsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonformsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformsprites_bool_exp\\r\\n  ): pokemon_v2_pokemonformsprites_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformsprites\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformsprites_by_pk(id: Int!): pokemon_v2_pokemonformsprites\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\n  pokemon_v2_pokemonformtype(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): [pokemon_v2_pokemonformtype!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\"\\r\\n  pokemon_v2_pokemonformtype_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonformtype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonformtype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonformtype_bool_exp\\r\\n  ): pokemon_v2_pokemonformtype_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonformtype\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonformtype_by_pk(id: Int!): pokemon_v2_pokemonformtype\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\n  pokemon_v2_pokemongameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): [pokemon_v2_pokemongameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\"\\r\\n  pokemon_v2_pokemongameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemongameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemongameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemongameindex_bool_exp\\r\\n  ): pokemon_v2_pokemongameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemongameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemongameindex_by_pk(id: Int!): pokemon_v2_pokemongameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitat_bool_exp\\r\\n  ): [pokemon_v2_pokemonhabitat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitat_bool_exp\\r\\n  ): pokemon_v2_pokemonhabitat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonhabitat_by_pk(id: Int!): pokemon_v2_pokemonhabitat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitatname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): [pokemon_v2_pokemonhabitatname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\"\\r\\n  pokemon_v2_pokemonhabitatname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonhabitatname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonhabitatname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonhabitatname_bool_exp\\r\\n  ): pokemon_v2_pokemonhabitatname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonhabitatname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonhabitatname_by_pk(id: Int!): pokemon_v2_pokemonhabitatname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\n  pokemon_v2_pokemonitem(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): [pokemon_v2_pokemonitem!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonitem\\\\\\\"\\r\\n  pokemon_v2_pokemonitem_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonitem_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonitem_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonitem_bool_exp\\r\\n  ): pokemon_v2_pokemonitem_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonitem\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonitem_by_pk(id: Int!): pokemon_v2_pokemonitem\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\n  pokemon_v2_pokemonmove(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): [pokemon_v2_pokemonmove!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonmove\\\\\\\"\\r\\n  pokemon_v2_pokemonmove_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonmove_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonmove_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonmove_bool_exp\\r\\n  ): pokemon_v2_pokemonmove_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonmove\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonmove_by_pk(id: Int!): pokemon_v2_pokemonmove\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\n  pokemon_v2_pokemonshape(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshape_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshape_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshape_bool_exp\\r\\n  ): [pokemon_v2_pokemonshape!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonshape\\\\\\\"\\r\\n  pokemon_v2_pokemonshape_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshape_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshape_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshape_bool_exp\\r\\n  ): pokemon_v2_pokemonshape_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshape\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonshape_by_pk(id: Int!): pokemon_v2_pokemonshape\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\n  pokemon_v2_pokemonshapename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): [pokemon_v2_pokemonshapename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\"\\r\\n  pokemon_v2_pokemonshapename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonshapename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonshapename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonshapename_bool_exp\\r\\n  ): pokemon_v2_pokemonshapename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonshapename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonshapename_by_pk(id: Int!): pokemon_v2_pokemonshapename\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonspecies(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): [pokemon_v2_pokemonspecies!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonspecies_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspecies_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspecies_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspecies_bool_exp\\r\\n  ): pokemon_v2_pokemonspecies_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspecies\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspecies_by_pk(id: Int!): pokemon_v2_pokemonspecies\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesdescription(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesdescription!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesdescription_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesdescription_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesdescription_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesdescription_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesdescription_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesdescription\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspeciesdescription_by_pk(id: Int!): pokemon_v2_pokemonspeciesdescription\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesflavortext_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspeciesflavortext_by_pk(id: Int!): pokemon_v2_pokemonspeciesflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): [pokemon_v2_pokemonspeciesname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\"\\r\\n  pokemon_v2_pokemonspeciesname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonspeciesname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonspeciesname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonspeciesname_bool_exp\\r\\n  ): pokemon_v2_pokemonspeciesname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonspeciesname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonspeciesname_by_pk(id: Int!): pokemon_v2_pokemonspeciesname\\r\\n  # An array relationship\\r\\n  pokemon_v2_pokemonsprites(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonsprites_bool_exp\\r\\n  ): [pokemon_v2_pokemonsprites!]!\\r\\n  # An aggregate relationship\\r\\n  pokemon_v2_pokemonsprites_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonsprites_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonsprites_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonsprites_bool_exp\\r\\n  ): pokemon_v2_pokemonsprites_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonsprites\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonsprites_by_pk(id: Int!): pokemon_v2_pokemonsprites\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\n  pokemon_v2_pokemonstat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): [pokemon_v2_pokemonstat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemonstat\\\\\\\"\\r\\n  pokemon_v2_pokemonstat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemonstat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemonstat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemonstat_bool_exp\\r\\n  ): pokemon_v2_pokemonstat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemonstat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemonstat_by_pk(id: Int!): pokemon_v2_pokemonstat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\n  pokemon_v2_pokemontype(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): [pokemon_v2_pokemontype!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemontype\\\\\\\"\\r\\n  pokemon_v2_pokemontype_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontype_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontype_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontype_bool_exp\\r\\n  ): pokemon_v2_pokemontype_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontype\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemontype_by_pk(id: Int!): pokemon_v2_pokemontype\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\n  pokemon_v2_pokemontypepast(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): [pokemon_v2_pokemontypepast!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\"\\r\\n  pokemon_v2_pokemontypepast_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_pokemontypepast_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_pokemontypepast_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_pokemontypepast_bool_exp\\r\\n  ): pokemon_v2_pokemontypepast_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_pokemontypepast\\\\\\\" using primary key columns\\r\\n  pokemon_v2_pokemontypepast_by_pk(id: Int!): pokemon_v2_pokemontypepast\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\n  pokemon_v2_region(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_region_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_region_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_region_bool_exp\\r\\n  ): [pokemon_v2_region!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_region\\\\\\\"\\r\\n  pokemon_v2_region_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_region_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_region_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_region_bool_exp\\r\\n  ): pokemon_v2_region_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_region\\\\\\\" using primary key columns\\r\\n  pokemon_v2_region_by_pk(id: Int!): pokemon_v2_region\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\n  pokemon_v2_regionname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): [pokemon_v2_regionname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_regionname\\\\\\\"\\r\\n  pokemon_v2_regionname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_regionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_regionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_regionname_bool_exp\\r\\n  ): pokemon_v2_regionname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_regionname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_regionname_by_pk(id: Int!): pokemon_v2_regionname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\n  pokemon_v2_stat(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_stat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_stat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_stat_bool_exp\\r\\n  ): [pokemon_v2_stat!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_stat\\\\\\\"\\r\\n  pokemon_v2_stat_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_stat_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_stat_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_stat_bool_exp\\r\\n  ): pokemon_v2_stat_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_stat\\\\\\\" using primary key columns\\r\\n  pokemon_v2_stat_by_pk(id: Int!): pokemon_v2_stat\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\n  pokemon_v2_statname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): [pokemon_v2_statname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_statname\\\\\\\"\\r\\n  pokemon_v2_statname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_statname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_statname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_statname_bool_exp\\r\\n  ): pokemon_v2_statname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_statname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_statname_by_pk(id: Int!): pokemon_v2_statname\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\n  pokemon_v2_supercontestcombo(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): [pokemon_v2_supercontestcombo!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\"\\r\\n  pokemon_v2_supercontestcombo_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontestcombo_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontestcombo_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontestcombo_bool_exp\\r\\n  ): pokemon_v2_supercontestcombo_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontestcombo\\\\\\\" using primary key columns\\r\\n  pokemon_v2_supercontestcombo_by_pk(id: Int!): pokemon_v2_supercontestcombo\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\n  pokemon_v2_supercontesteffect(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffect_bool_exp\\r\\n  ): [pokemon_v2_supercontesteffect!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\"\\r\\n  pokemon_v2_supercontesteffect_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffect_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffect_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffect_bool_exp\\r\\n  ): pokemon_v2_supercontesteffect_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffect\\\\\\\" using primary key columns\\r\\n  pokemon_v2_supercontesteffect_by_pk(id: Int!): pokemon_v2_supercontesteffect\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_supercontesteffectflavortext(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): [pokemon_v2_supercontesteffectflavortext!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\"\\r\\n  pokemon_v2_supercontesteffectflavortext_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_supercontesteffectflavortext_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_supercontesteffectflavortext_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_supercontesteffectflavortext_bool_exp\\r\\n  ): pokemon_v2_supercontesteffectflavortext_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_supercontesteffectflavortext\\\\\\\" using primary key columns\\r\\n  pokemon_v2_supercontesteffectflavortext_by_pk(id: Int!): pokemon_v2_supercontesteffectflavortext\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\n  pokemon_v2_type(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): [pokemon_v2_type!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_type\\\\\\\"\\r\\n  pokemon_v2_type_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_type_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_type_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_type_bool_exp\\r\\n  ): pokemon_v2_type_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_type\\\\\\\" using primary key columns\\r\\n  pokemon_v2_type_by_pk(id: Int!): pokemon_v2_type\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\n  pokemon_v2_typeefficacy(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): [pokemon_v2_typeefficacy!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_typeefficacy\\\\\\\"\\r\\n  pokemon_v2_typeefficacy_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typeefficacy_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typeefficacy_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typeefficacy_bool_exp\\r\\n  ): pokemon_v2_typeefficacy_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typeefficacy\\\\\\\" using primary key columns\\r\\n  pokemon_v2_typeefficacy_by_pk(id: Int!): pokemon_v2_typeefficacy\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\n  pokemon_v2_typegameindex(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): [pokemon_v2_typegameindex!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_typegameindex\\\\\\\"\\r\\n  pokemon_v2_typegameindex_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typegameindex_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typegameindex_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typegameindex_bool_exp\\r\\n  ): pokemon_v2_typegameindex_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typegameindex\\\\\\\" using primary key columns\\r\\n  pokemon_v2_typegameindex_by_pk(id: Int!): pokemon_v2_typegameindex\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\n  pokemon_v2_typename(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): [pokemon_v2_typename!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_typename\\\\\\\"\\r\\n  pokemon_v2_typename_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_typename_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_typename_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_typename_bool_exp\\r\\n  ): pokemon_v2_typename_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_typename\\\\\\\" using primary key columns\\r\\n  pokemon_v2_typename_by_pk(id: Int!): pokemon_v2_typename\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\n  pokemon_v2_version(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_version_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_version_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_version_bool_exp\\r\\n  ): [pokemon_v2_version!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_version\\\\\\\"\\r\\n  pokemon_v2_version_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_version_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_version_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_version_bool_exp\\r\\n  ): pokemon_v2_version_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_version\\\\\\\" using primary key columns\\r\\n  pokemon_v2_version_by_pk(id: Int!): pokemon_v2_version\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\n  pokemon_v2_versiongroup(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroup_bool_exp\\r\\n  ): [pokemon_v2_versiongroup!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versiongroup\\\\\\\"\\r\\n  pokemon_v2_versiongroup_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroup_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroup_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroup_bool_exp\\r\\n  ): pokemon_v2_versiongroup_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroup\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versiongroup_by_pk(id: Int!): pokemon_v2_versiongroup\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\n  pokemon_v2_versiongroupmovelearnmethod(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): [pokemon_v2_versiongroupmovelearnmethod!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\"\\r\\n  pokemon_v2_versiongroupmovelearnmethod_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupmovelearnmethod_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupmovelearnmethod_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupmovelearnmethod_bool_exp\\r\\n  ): pokemon_v2_versiongroupmovelearnmethod_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupmovelearnmethod\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versiongroupmovelearnmethod_by_pk(id: Int!): pokemon_v2_versiongroupmovelearnmethod\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\n  pokemon_v2_versiongroupregion(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): [pokemon_v2_versiongroupregion!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\"\\r\\n  pokemon_v2_versiongroupregion_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versiongroupregion_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versiongroupregion_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versiongroupregion_bool_exp\\r\\n  ): pokemon_v2_versiongroupregion_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versiongroupregion\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versiongroupregion_by_pk(id: Int!): pokemon_v2_versiongroupregion\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\n  pokemon_v2_versionname(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): [pokemon_v2_versionname!]!\\r\\n  # fetch aggregated fields from the table: \\\\\\\"pokemon_v2_versionname\\\\\\\"\\r\\n  pokemon_v2_versionname_aggregate(\\r\\n    # distinct select on columns\\r\\n    distinct_on: [pokemon_v2_versionname_select_column!]\\r\\n    # limit the number of rows returned\\r\\n    limit: Int\\r\\n    # skip the first n rows. Use only with order_by\\r\\n    offset: Int\\r\\n    # sort the rows by one or more columns\\r\\n    order_by: [pokemon_v2_versionname_order_by!]\\r\\n    # filter the rows returned\\r\\n    where: pokemon_v2_versionname_bool_exp\\r\\n  ): pokemon_v2_versionname_aggregate!\\r\\n  # fetch data from the table: \\\\\\\"pokemon_v2_versionname\\\\\\\" using primary key columns\\r\\n  pokemon_v2_versionname_by_pk(id: Int!): pokemon_v2_versionname\\r\\n}\\r\\n\"\n}"
        }
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/starter/basic-calculator-api')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'basic-calculator-api')]"
      ],
      "properties": {
        "displayName": "Starter",
        "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/unlimited/basic-calculator-api')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products/apis', parameters('apimServiceName'), 'starter', 'basic-calculator-api')]"
      ],
      "properties": {
        "displayName": "Unlimited",
        "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
        "subscriptionRequired": true,
        "approvalRequired": true,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/starter/echo-api')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "displayName": "Starter",
        "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/unlimited/echo-api')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products/apis', parameters('apimServiceName'), 'starter', 'echo-api')]"
      ],
      "properties": {
        "displayName": "Unlimited",
        "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
        "subscriptionRequired": true,
        "approvalRequired": true,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/starter/star-wars-api')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api')]"
      ],
      "properties": {
        "displayName": "Starter",
        "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/unlimited/star-wars-api')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products/apis', parameters('apimServiceName'), 'starter', 'star-wars-api')]"
      ],
      "properties": {
        "displayName": "Unlimited",
        "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
        "subscriptionRequired": true,
        "approvalRequired": true,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/starter/star-wars-api;rev=2')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api;rev=2')]"
      ],
      "properties": {
        "displayName": "Starter",
        "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
        "subscriptionRequired": true,
        "approvalRequired": false,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "name": "[concat(parameters('apimServiceName'), '/unlimited/star-wars-api;rev=2')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/products/apis', parameters('apimServiceName'), 'starter', 'star-wars-api;rev=2')]"
      ],
      "properties": {
        "displayName": "Unlimited",
        "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
        "subscriptionRequired": true,
        "approvalRequired": true,
        "state": "published"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "name": "[concat(parameters('apimServiceName'), '/basic-calculator-api/math')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'basic-calculator-api')]"
      ],
      "properties": {
        "displayName": "Math"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api/popculture')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api')]"
      ],
      "properties": {
        "displayName": "PopCulture"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2/popculture')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api;rev=2')]"
      ],
      "properties": {
        "displayName": "PopCulture"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/basic-calculator-api/626b0c464634611238caaf42')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'basic-calculator-api')]"
      ],
      "properties": {
        "displayName": "Add two integers",
        "method": "GET",
        "urlTemplate": "/add?a={a}&b={b}",
        "description": "Produces a sum of two numbers.",
        "templateParameters": [
          {
            "name": "a",
            "description": "First operand. Default value is <code>51</code>.",
            "defaultValue": "51",
            "required": true,
            "values": [
              "51"
            ]
          },
          {
            "name": "b",
            "description": "Second operand. Default value is <code>49</code>.",
            "defaultValue": "49",
            "required": true,
            "values": [
              "49"
            ]
          }
        ],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/basic-calculator-api/626b0c464634611238caaf45')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'basic-calculator-api')]"
      ],
      "properties": {
        "displayName": "Divide two integers",
        "method": "GET",
        "urlTemplate": "/div?a={a}&b={b}",
        "description": "Produces a quotient of two numbers.",
        "templateParameters": [
          {
            "name": "a",
            "description": "First operand. Default value is <code>51</code>.",
            "defaultValue": "51",
            "required": true,
            "values": [
              "51"
            ]
          },
          {
            "name": "b",
            "description": "Second operand. Default value is <code>49</code>.",
            "defaultValue": "49",
            "required": true,
            "values": [
              "49"
            ]
          }
        ],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/basic-calculator-api/626b0c464634611238caaf44')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'basic-calculator-api')]"
      ],
      "properties": {
        "displayName": "Multiply two integers",
        "method": "GET",
        "urlTemplate": "/mul?a={a}&b={b}",
        "description": "Produces a product of two numbers.",
        "templateParameters": [
          {
            "name": "a",
            "description": "First operand. Default value is <code>51</code>.",
            "defaultValue": "51",
            "required": true,
            "values": [
              "51"
            ]
          },
          {
            "name": "b",
            "description": "Second operand. Default value is <code>49</code>.",
            "defaultValue": "49",
            "required": true,
            "values": [
              "49"
            ]
          }
        ],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/basic-calculator-api/626b0c464634611238caaf43')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'basic-calculator-api')]"
      ],
      "properties": {
        "displayName": "Subtract two integers",
        "method": "GET",
        "urlTemplate": "/sub?a={a}&b={b}",
        "description": "Produces a difference between two numbers.",
        "templateParameters": [
          {
            "name": "a",
            "description": "First operand. Default value is <code>51</code>.",
            "defaultValue": "51",
            "required": true,
            "values": [
              "51"
            ]
          },
          {
            "name": "b",
            "description": "Second operand. Default value is <code>49</code>.",
            "defaultValue": "49",
            "required": true,
            "values": [
              "49"
            ]
          }
        ],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/color-api/ApiColorsByIdDelete')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'color-api')]"
      ],
      "properties": {
        "displayName": "ApiColorsByIdDelete",
        "method": "DELETE",
        "urlTemplate": "/api/Colors/{id}",
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "Success",
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/color-api/ApiColorsByIdGet')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'color-api')]"
      ],
      "properties": {
        "displayName": "ApiColorsByIdGet",
        "method": "GET",
        "urlTemplate": "/api/Colors/{id}",
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "responses": [
          {
            "description": "Success",
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/color-api/ApiColorsByIdPut')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'color-api')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), 'color-api', '626b0c9d4634611238caaf4c')]"
      ],
      "properties": {
        "displayName": "ApiColorsByIdPut",
        "method": "PUT",
        "urlTemplate": "/api/Colors/{id}",
        "templateParameters": [
          {
            "name": "id",
            "description": "Format - int32.",
            "type": "integer",
            "required": true,
            "values": []
          }
        ],
        "request": {
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "StrName",
              "sample": "string"
            },
            {
              "contentType": "application/json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "StrName",
              "sample": "string"
            },
            {
              "contentType": "text/json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "StrName",
              "sample": "string"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "StrName",
              "sample": "string"
            }
          ]
        },
        "responses": [
          {
            "description": "Success",
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/color-api/ApiColorsGet')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'color-api')]"
      ],
      "properties": {
        "displayName": "ApiColorsGet",
        "method": "GET",
        "urlTemplate": "/api/Colors",
        "templateParameters": [],
        "responses": [
          {
            "description": "Success",
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/color-api/ApiColorsPost')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'color-api')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('apimServiceName'), 'color-api', '626b0c9d4634611238caaf4c')]"
      ],
      "properties": {
        "displayName": "ApiColorsPost",
        "method": "POST",
        "urlTemplate": "/api/Colors",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json-patch+json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "ColorItem",
              "sample": "{\r\n  \"id\": 0,\r\n  \"name\": \"string\"\r\n}"
            },
            {
              "contentType": "application/json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "ColorItem",
              "sample": "{\r\n  \"id\": 0,\r\n  \"name\": \"string\"\r\n}"
            },
            {
              "contentType": "text/json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "ColorItem",
              "sample": "{\r\n  \"id\": 0,\r\n  \"name\": \"string\"\r\n}"
            },
            {
              "contentType": "application/*+json",
              "schemaId": "626b0c9d4634611238caaf4c",
              "typeName": "ColorItem",
              "sample": "{\r\n  \"id\": 0,\r\n  \"name\": \"string\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "description": "Success",
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/color-api/ApiRandomColorGet')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'color-api')]"
      ],
      "properties": {
        "displayName": "ApiRandomColorGet",
        "method": "GET",
        "urlTemplate": "/api/RandomColor",
        "templateParameters": [],
        "responses": [
          {
            "description": "Success",
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/create-resource')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "displayName": "Create resource",
        "method": "POST",
        "urlTemplate": "/resource",
        "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [],
          "representations": [
            {
              "contentType": "application/json",
              "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
            }
          ]
        },
        "responses": [
          {
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/modify-resource')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "displayName": "Modify Resource",
        "method": "PUT",
        "urlTemplate": "/resource",
        "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
        "templateParameters": [],
        "responses": [
          {
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/remove-resource')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "displayName": "Remove resource",
        "method": "DELETE",
        "urlTemplate": "/resource",
        "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
        "templateParameters": [],
        "responses": [
          {
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/retrieve-header-only')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "displayName": "Retrieve header only",
        "method": "HEAD",
        "urlTemplate": "/resource",
        "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
        "templateParameters": [],
        "responses": [
          {
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/retrieve-resource')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "displayName": "Retrieve resource",
        "method": "GET",
        "urlTemplate": "/resource",
        "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "sample",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "name": "param1",
              "required": true,
              "type": "string"
            },
            {
              "description": "Another sample parameter, set to not required.",
              "name": "param2",
              "required": false,
              "type": "number"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "description": "Returned in all cases.",
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/retrieve-resource-cached')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "displayName": "Retrieve resource (cached)",
        "method": "GET",
        "urlTemplate": "/resource-cached",
        "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "sample",
              "description": "A sample parameter that is required and has a default value of \"sample\".",
              "name": "param1",
              "required": true,
              "type": "string"
            },
            {
              "description": "Another sample parameter, set to not required.",
              "name": "param2",
              "required": false,
              "type": "string"
            }
          ],
          "representations": []
        },
        "responses": [
          {
            "headers": [],
            "representations": [],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/function-demo/get-simpleapi')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'function-demo')]"
      ],
      "properties": {
        "displayName": "SimpleAPI",
        "method": "GET",
        "urlTemplate": "/SimpleAPI",
        "description": "",
        "templateParameters": [],
        "request": {
          "headers": [],
          "queryParameters": [
            {
              "defaultValue": "Mitul",
              "name": "name",
              "required": false,
              "type": ""
            }
          ],
          "representations": []
        },
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/function-demo/post-simpleapi')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'function-demo')]"
      ],
      "properties": {
        "displayName": "SimpleAPI",
        "method": "POST",
        "urlTemplate": "/SimpleAPI",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api/film')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api')]"
      ],
      "properties": {
        "displayName": "Get Film",
        "method": "GET",
        "urlTemplate": "/film",
        "description": "",
        "templateParameters": [],
        "responses": [
          {
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"count\": 1,\r\n  \"films\": [\r\n    {\r\n      \"title\": \"A New Hope\",\r\n      \"release-date\": \"05/25/1977\"\r\n    }\r\n  ]\r\n}"
              }
            ],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api/people')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api')]"
      ],
      "properties": {
        "displayName": "Get People",
        "method": "GET",
        "urlTemplate": "/people/",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api/people-id')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api')]"
      ],
      "properties": {
        "displayName": "Get People By Id",
        "method": "GET",
        "urlTemplate": "/people/{id}/",
        "description": "",
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2/film')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api;rev=2')]"
      ],
      "properties": {
        "displayName": "Get Film",
        "method": "GET",
        "urlTemplate": "/film",
        "description": "",
        "templateParameters": [],
        "responses": [
          {
            "description": "",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\r\n  \"count\": 1,\r\n  \"films\": [\r\n    {\r\n      \"title\": \"A New Hope\",\r\n      \"release-date\": \"05/25/1977\"\r\n    }\r\n  ]\r\n}"
              }
            ],
            "statusCode": 200
          }
        ]
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2/people')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api;rev=2')]"
      ],
      "properties": {
        "displayName": "Get People",
        "method": "GET",
        "urlTemplate": "/people/",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2/people-id')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'star-wars-api;rev=2')]"
      ],
      "properties": {
        "displayName": "Get People By Id",
        "method": "GET",
        "urlTemplate": "/people/{id}/",
        "description": "",
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c02935bf79441dcd11a22')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_DELETE",
        "method": "DELETE",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c029368c558f091cfca6c')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_GET",
        "method": "GET",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c029352ab7c8a4d7d02b9')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_HEAD",
        "method": "HEAD",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c0293dda562798b5ef12a')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_OPTIONS",
        "method": "OPTIONS",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c0293288b27a7478695a0')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_PATCH",
        "method": "PATCH",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c0293c43194bed7c12318')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_POST",
        "method": "POST",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c0293bf8f72fbd245fa13')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_PUT",
        "method": "PUT",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/626c0293a700f49512628607')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "displayName": "todo-api_TRACE",
        "method": "TRACE",
        "urlTemplate": "/*",
        "description": "",
        "templateParameters": [],
        "responses": []
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/color-api/ApiRandomColorGet/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'color-api', 'ApiRandomColorGet')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\" downstream-caching-type=\"none\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <find-and-replace from=\"blue\" to=\"orange\" />\r\n    <cache-store duration=\"15\" />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/create-resource/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'echo-api', 'create-resource')]"
      ],
      "properties": {
        "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <json-to-xml apply=\"always\" consider-accept-header=\"false\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/retrieve-header-only/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'echo-api', 'retrieve-header-only')]"
      ],
      "properties": {
        "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <set-header name=\"X-My-Sample\" exists-action=\"override\">\r\n      <value>This is a sample</value>\r\n      <!-- for multiple headers with the same name add additional value elements -->\r\n    </set-header>\r\n    <jsonp callback-parameter-name=\"ProcessResponse\" />\r\n  </outbound>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/retrieve-resource-cached/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'echo-api', 'retrieve-resource-cached')]"
      ],
      "properties": {
        "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\">\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <cache-store duration=\"3600\" />\r\n  </outbound>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/function-demo/get-simpleapi/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'function-demo', 'get-simpleapi')]"
      ],
      "properties": {
        "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-authdemo\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/function-demo/post-simpleapi/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'function-demo', 'post-simpleapi')]"
      ],
      "properties": {
        "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"func-authdemo\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api/film/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'star-wars-api', 'film')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <mock-response status-code=\"200\" content-type=\"application/json\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api/people/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'star-wars-api', 'people')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"x-request-received-time\" exists-action=\"override\">\r\n      <value>{{TimeNow}}</value>\r\n    </set-header>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api/people-id/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'star-wars-api', 'people-id')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"Accept-Encoding\" exists-action=\"override\">\r\n      <value>deflate</value>\r\n    </set-header>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <choose>\r\n      <when condition=\"@(context.Response.StatusCode == 200 &amp;&amp; context.Product.Name.Equals(&quot;Starter&quot;))\">\r\n        <set-body>@{\r\n                            var response = context.Response.Body.As&lt;JObject&gt;();\r\n\r\n                            foreach (var key in new [] {\"hair_color\", \"skin_color\", \"eye_color\", \"gender\"}) {\r\n                                response.Property(key).Remove();\r\n                            }\r\n\r\n                            return response.ToString();\r\n                        }\r\n                    </set-body>\r\n      </when>\r\n    </choose>\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2/film/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'star-wars-api;rev=2', 'film')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <mock-response status-code=\"200\" content-type=\"application/json\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2/people/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'star-wars-api;rev=2', 'people')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"x-request-received-time\" exists-action=\"override\">\r\n      <value>{{TimeNow}}</value>\r\n    </set-header>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "name": "[concat(parameters('apimServiceName'), '/star-wars-api;rev=2/people-id/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimServiceName'), 'star-wars-api;rev=2', 'people-id')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"Accept-Encoding\" exists-action=\"override\">\r\n      <value>deflate</value>\r\n    </set-header>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <choose>\r\n      <when condition=\"@(context.Response.StatusCode == 200 &amp;&amp; context.Product.Name.Equals(&quot;Starter&quot;))\">\r\n        <set-body>@{\r\n                            var response = context.Response.Body.As&lt;JObject&gt;();\r\n\r\n                            foreach (var key in new [] {\"hair_color\", \"skin_color\", \"eye_color\", \"gender\"}) {\r\n                                response.Property(key).Remove();\r\n                            }\r\n\r\n                            return response.ToString();\r\n                        }\r\n                    </set-body>\r\n      </when>\r\n    </choose>\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "name": "[concat(parameters('apimServiceName'), '/echo-api/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'echo-api')]"
      ],
      "properties": {
        "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"test\" exists-action=\"append\">\r\n      <value>test</value>\r\n    </set-header>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    },
    {
      "apiVersion": "2021-08-01",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "name": "[concat(parameters('apimServiceName'), '/todo-api/policy')]",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), 'todo-api')]"
      ],
      "properties": {
        "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service id=\"apim-generated-policy\" backend-id=\"WebApp_todoapidemo-mshah\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
        "format": "xml"
      }
    }
  ]
}